Component: ARM Compiler 5.06 update 5 (build 528) Tool: armlink [4d35e2]

==============================================================================

Section Cross References

    svvis_cortex.o(i._Z10init_usartP13USART_TypeDefj) refers to system_stm32f10x.o(i.SystemCoreClockUpdate) for SystemCoreClockUpdate
    svvis_cortex.o(i._Z10init_usartP13USART_TypeDefj) refers to stm32f10x_rcc.o(i.RCC_APB2PeriphClockCmd) for RCC_APB2PeriphClockCmd
    svvis_cortex.o(i._Z10init_usartP13USART_TypeDefj) refers to stm32f10x_gpio.o(i.GPIO_Init) for GPIO_Init
    svvis_cortex.o(i._Z10init_usartP13USART_TypeDefj) refers to stm32f10x_rcc.o(i.RCC_APB1PeriphClockCmd) for RCC_APB1PeriphClockCmd
    svvis_cortex.o(i._Z10init_usartP13USART_TypeDefj) refers to stm32f10x_usart.o(i.USART_DeInit) for USART_DeInit
    svvis_cortex.o(i._Z10init_usartP13USART_TypeDefj) refers to stm32f10x_usart.o(i.USART_ClockInit) for USART_ClockInit
    svvis_cortex.o(i._Z10init_usartP13USART_TypeDefj) refers to stm32f10x_usart.o(i.USART_Init) for USART_Init
    svvis_cortex.o(i._Z10init_usartP13USART_TypeDefj) refers to misc.o(i.NVIC_Init) for NVIC_Init
    svvis_cortex.o(i._Z10init_usartP13USART_TypeDefj) refers to stm32f10x_usart.o(i.USART_ITConfig) for USART_ITConfig
    svvis_cortex.o(i._Z10init_usartP13USART_TypeDefj) refers to stm32f10x_usart.o(i.USART_Cmd) for USART_Cmd
    svvis_cortex.o(i._Z15USART_send_byteP13USART_TypeDefh) refers to rtx_thread.o(.text.osThreadYield) for osThreadYield
    svvis_cortex.o(i._Z15USART_send_byteP13USART_TypeDefh) refers to stm32f10x_usart.o(i.USART_GetFlagStatus) for USART_GetFlagStatus
    svvis_cortex.o(i._Z15USART_send_byteP13USART_TypeDefh) refers to stm32f10x_usart.o(i.USART_SendData) for USART_SendData
    svvis_cortex.o(i._Z16USART_send_bytesP13USART_TypeDefPvj) refers to svvis_cortex.o(i._Z15USART_send_byteP13USART_TypeDefh) for USART_send_byte(USART_TypeDef*, unsigned char)
    svvis_cortex.o(i._ZN13SvVis3_data_t9apply_msgER16SvVis3_message_t) refers to fflt_clz.o(x$fpl$fflt) for __aeabi_i2f
    svvis_cortex.o(i._ZN13SvVis3_data_t9apply_msgER16SvVis3_message_t) refers to ffix.o(x$fpl$ffix) for __aeabi_f2iz
    svvis_cortex.o(i._ZN8SvVis3_t10send_floatEhf) refers to svvis_cortex.o(i._ZN8SvVis3_t8send_msgER16SvVis3_message_t) for SvVis3_t::send_msg(SvVis3_message_t&)
    svvis_cortex.o(i._ZN8SvVis3_t4initEP13USART_TypeDefj) refers to svvis_cortex.o(i._Z10init_usartP13USART_TypeDefj) for init_usart(USART_TypeDef*, unsigned)
    svvis_cortex.o(i._ZN8SvVis3_t4initEP13USART_TypeDefj) refers to rtx_msgqueue.o(.text.osMessageQueueNew) for osMessageQueueNew
    svvis_cortex.o(i._ZN8SvVis3_t4initEP13USART_TypeDefj) refers to rtx_thread.o(.text.osThreadNew) for osThreadNew
    svvis_cortex.o(i._ZN8SvVis3_t4initEP13USART_TypeDefj) refers to svvis_cortex.o(.data) for _usart1_handler
    svvis_cortex.o(i._ZN8SvVis3_t4initEP13USART_TypeDefj) refers to svvis_cortex_threads.o(i._Z11recv_threadPv) for recv_thread(void*)
    svvis_cortex.o(i._ZN8SvVis3_t4initEP13USART_TypeDefj) refers to svvis_cortex_threads.o(i._Z11send_threadPv) for send_thread(void*)
    svvis_cortex.o(i._ZN8SvVis3_t8recv_msgER16SvVis3_message_t) refers to rtx_msgqueue.o(.text.osMessageQueueGet) for osMessageQueueGet
    svvis_cortex.o(i._ZN8SvVis3_t8send_i16Ehs) refers to svvis_cortex.o(i._ZN8SvVis3_t8send_msgER16SvVis3_message_t) for SvVis3_t::send_msg(SvVis3_message_t&)
    svvis_cortex.o(i._ZN8SvVis3_t8send_i32Ehi) refers to svvis_cortex.o(i._ZN8SvVis3_t8send_msgER16SvVis3_message_t) for SvVis3_t::send_msg(SvVis3_message_t&)
    svvis_cortex.o(i._ZN8SvVis3_t8send_msgER16SvVis3_message_t) refers to rtx_thread.o(.text.osThreadYield) for osThreadYield
    svvis_cortex.o(i._ZN8SvVis3_t8send_msgER16SvVis3_message_t) refers to rtx_msgqueue.o(.text.osMessageQueueGetSpace) for osMessageQueueGetSpace
    svvis_cortex.o(i._ZN8SvVis3_t8send_msgER16SvVis3_message_t) refers to rtx_msgqueue.o(.text.osMessageQueuePut) for osMessageQueuePut
    svvis_cortex.o(i._ZN8SvVis3_t8send_strEPKc) refers to strlen.o(.text) for strlen
    svvis_cortex.o(i._ZN8SvVis3_t8send_strEPKc) refers to rt_memcpy_v6.o(.text) for __aeabi_memcpy
    svvis_cortex.o(i._ZN8SvVis3_t8send_strEPKc) refers to svvis_cortex.o(i._ZN8SvVis3_t8send_msgER16SvVis3_message_t) for SvVis3_t::send_msg(SvVis3_message_t&)
    svvis_cortex.o(.ARM.exidx) refers to svvis_cortex.o(i._Z10init_usartP13USART_TypeDefj) for i._Z10init_usartP13USART_TypeDefj
    svvis_cortex.o(.ARM.exidx) refers to svvis_cortex.o(i._Z15USART_send_byteP13USART_TypeDefh) for i._Z15USART_send_byteP13USART_TypeDefh
    svvis_cortex.o(.ARM.exidx) refers to svvis_cortex.o(i._Z16USART_send_bytesP13USART_TypeDefPvj) for i._Z16USART_send_bytesP13USART_TypeDefPvj
    svvis_cortex.o(.ARM.exidx) refers to svvis_cortex.o(i._ZN13SvVis3_data_t9apply_msgER16SvVis3_message_t) for i._ZN13SvVis3_data_t9apply_msgER16SvVis3_message_t
    svvis_cortex.o(.ARM.exidx) refers to svvis_cortex.o(i._ZN8SvVis3_t4initEP13USART_TypeDefj) for i._ZN8SvVis3_t4initEP13USART_TypeDefj
    svvis_cortex.o(.ARM.exidx) refers to svvis_cortex.o(i._ZN8SvVis3_t8send_msgER16SvVis3_message_t) for i._ZN8SvVis3_t8send_msgER16SvVis3_message_t
    svvis_cortex.o(.ARM.exidx) refers to svvis_cortex.o(i._ZN8SvVis3_t8send_strEPKc) for i._ZN8SvVis3_t8send_strEPKc
    svvis_cortex.o(.ARM.exidx) refers to svvis_cortex.o(i._ZN8SvVis3_t8send_i16Ehs) for i._ZN8SvVis3_t8send_i16Ehs
    svvis_cortex.o(.ARM.exidx) refers to svvis_cortex.o(i._ZN8SvVis3_t8send_i32Ehi) for i._ZN8SvVis3_t8send_i32Ehi
    svvis_cortex.o(.ARM.exidx) refers to svvis_cortex.o(i._ZN8SvVis3_t10send_floatEhf) for i._ZN8SvVis3_t10send_floatEhf
    svvis_cortex.o(.ARM.exidx) refers to svvis_cortex.o(i._ZN8SvVis3_t8recv_msgER16SvVis3_message_t) for i._ZN8SvVis3_t8recv_msgER16SvVis3_message_t
    main.o(i._Z13LED_heartbeatPv) refers to led_driver.o(i.LED_heartbeat) for LED_heartbeat
    main.o(i._Z13LED_heartbeatPv) refers to rtx_delay.o(.text.osDelay) for osDelay
    main.o(i._Z16main_thread_funcPv) refers to svvis_cortex.o(i._ZN8SvVis3_t8recv_msgER16SvVis3_message_t) for SvVis3_t::recv_msg(SvVis3_message_t&)
    main.o(i._Z16main_thread_funcPv) refers to svvis_cortex.o(i._ZN8SvVis3_t8send_strEPKc) for SvVis3_t::send_str(const char*)
    main.o(i._Z16main_thread_funcPv) refers to svvis_cortex.o(i._ZN8SvVis3_t8send_msgER16SvVis3_message_t) for SvVis3_t::send_msg(SvVis3_message_t&)
    main.o(i._Z16main_thread_funcPv) refers to strcmpv7m.o(.text) for strcmp
    main.o(i._Z16main_thread_funcPv) refers to motor_driver.o(i.motor_cmd_str) for motor_cmd_str
    main.o(i.main) refers to system_stm32f10x.o(i.SystemCoreClockUpdate) for SystemCoreClockUpdate
    main.o(i.main) refers to rtx_kernel.o(.text.osKernelInitialize) for osKernelInitialize
    main.o(i.main) refers to svvis_cortex.o(i._ZN8SvVis3_t4initEP13USART_TypeDefj) for SvVis3_t::init(USART_TypeDef*, unsigned)
    main.o(i.main) refers to motor_driver.o(i.motor_init) for motor_init
    main.o(i.main) refers to led_driver.o(i.LED_init) for LED_init
    main.o(i.main) refers to led_driver.o(i.LED_triangle_l) for LED_triangle_l
    main.o(i.main) refers to rtx_delay.o(.text.osDelay) for osDelay
    main.o(i.main) refers to rtx_thread.o(.text.osThreadNew) for osThreadNew
    main.o(i.main) refers to rtx_kernel.o(.text.osKernelStart) for osKernelStart
    main.o(i.main) refers to main.o(i._Z16main_thread_funcPv) for main_thread_func(void*)
    main.o(i.main) refers to main.o(.data) for main_thread_handle
    main.o(i.main) refers to main.o(i._Z13LED_heartbeatPv) for LED_heartbeat(void*)
    main.o(.ARM.exidx) refers to main.o(i._Z13LED_heartbeatPv) for i._Z13LED_heartbeatPv
    main.o(.ARM.exidx) refers to main.o(i._Z16main_thread_funcPv) for i._Z16main_thread_funcPv
    main.o(.ARM.exidx) refers to main.o(i.main) for i.main
    svvis_cortex_threads.o(i.USART1_IRQHandler) refers to stm32f10x_usart.o(i.USART_ReceiveData) for USART_ReceiveData
    svvis_cortex_threads.o(i.USART1_IRQHandler) refers to rtx_msgqueue.o(.text.osMessageQueuePut) for osMessageQueuePut
    svvis_cortex_threads.o(i.USART1_IRQHandler) refers to svvis_cortex.o(.data) for _usart1_handler
    svvis_cortex_threads.o(i.USART2_IRQHandler) refers to stm32f10x_usart.o(i.USART_ReceiveData) for USART_ReceiveData
    svvis_cortex_threads.o(i.USART2_IRQHandler) refers to rtx_msgqueue.o(.text.osMessageQueuePut) for osMessageQueuePut
    svvis_cortex_threads.o(i.USART2_IRQHandler) refers to svvis_cortex.o(.data) for _usart2_handler
    svvis_cortex_threads.o(i.USART3_IRQHandler) refers to stm32f10x_usart.o(i.USART_ReceiveData) for USART_ReceiveData
    svvis_cortex_threads.o(i.USART3_IRQHandler) refers to rtx_msgqueue.o(.text.osMessageQueuePut) for osMessageQueuePut
    svvis_cortex_threads.o(i.USART3_IRQHandler) refers to svvis_cortex.o(.data) for _usart3_handler
    svvis_cortex_threads.o(i._Z11recv_threadPv) refers to rtx_msgqueue.o(.text.osMessageQueueGet) for osMessageQueueGet
    svvis_cortex_threads.o(i._Z11recv_threadPv) refers to svvis_cortex_threads.o(i._Z8chid2lenh) for chid2len(unsigned char)
    svvis_cortex_threads.o(i._Z11recv_threadPv) refers to rtx_msgqueue.o(.text.osMessageQueuePut) for osMessageQueuePut
    svvis_cortex_threads.o(i._Z11send_threadPv) refers to rtx_msgqueue.o(.text.osMessageQueueGet) for osMessageQueueGet
    svvis_cortex_threads.o(i._Z11send_threadPv) refers to svvis_cortex.o(i._Z15USART_send_byteP13USART_TypeDefh) for USART_send_byte(USART_TypeDef*, unsigned char)
    svvis_cortex_threads.o(i._Z11send_threadPv) refers to svvis_cortex.o(i._Z16USART_send_bytesP13USART_TypeDefPvj) for USART_send_bytes(USART_TypeDef*, void*, unsigned)
    svvis_cortex_threads.o(.ARM.exidx) refers to svvis_cortex_threads.o(i._Z8chid2lenh) for i._Z8chid2lenh
    svvis_cortex_threads.o(.ARM.exidx) refers to svvis_cortex_threads.o(i.USART1_IRQHandler) for i.USART1_IRQHandler
    svvis_cortex_threads.o(.ARM.exidx) refers to svvis_cortex_threads.o(i.USART2_IRQHandler) for i.USART2_IRQHandler
    svvis_cortex_threads.o(.ARM.exidx) refers to svvis_cortex_threads.o(i.USART3_IRQHandler) for i.USART3_IRQHandler
    svvis_cortex_threads.o(.ARM.exidx) refers to svvis_cortex_threads.o(i._Z11recv_threadPv) for i._Z11recv_threadPv
    svvis_cortex_threads.o(.ARM.exidx) refers to svvis_cortex_threads.o(i._Z11send_threadPv) for i._Z11send_threadPv
    led_driver.o(i.LED_heartbeat) refers to stm32f10x_gpio.o(i.GPIO_WriteBit) for GPIO_WriteBit
    led_driver.o(i.LED_init) refers to stm32f10x_rcc.o(i.RCC_APB2PeriphClockCmd) for RCC_APB2PeriphClockCmd
    led_driver.o(i.LED_init) refers to stm32f10x_gpio.o(i.GPIO_Init) for GPIO_Init
    led_driver.o(i.LED_triangle_l) refers to stm32f10x_gpio.o(i.GPIO_WriteBit) for GPIO_WriteBit
    motor_driver.o(i.generate_pwm) refers to dmul.o(x$fpl$dmul) for __aeabi_dmul
    motor_driver.o(i.generate_pwm) refers to dfixu.o(x$fpl$dfixu) for __aeabi_d2uiz
    motor_driver.o(i.generate_pwm) refers to stm32f10x_gpio.o(i.GPIO_SetBits) for GPIO_SetBits
    motor_driver.o(i.generate_pwm) refers to rtx_delay.o(.text.osDelay) for osDelay
    motor_driver.o(i.generate_pwm) refers to stm32f10x_gpio.o(i.GPIO_ResetBits) for GPIO_ResetBits
    motor_driver.o(i.generate_pwm) refers to motor_driver.o(.data) for DUTY_CYCLE
    motor_driver.o(i.motor_cmd_bin) refers to stm32f10x_gpio.o(i.GPIO_ResetBits) for GPIO_ResetBits
    motor_driver.o(i.motor_cmd_bin) refers to stm32f10x_gpio.o(i.GPIO_SetBits) for GPIO_SetBits
    motor_driver.o(i.motor_cmd_bin) refers to motor_driver.o(.data) for running
    motor_driver.o(i.motor_cmd_str) refers to strcmpv7m.o(.text) for strcmp
    motor_driver.o(i.motor_cmd_str) refers to motor_driver.o(i.motor_cmd_bin) for motor_cmd_bin
    motor_driver.o(i.motor_init) refers to stm32f10x_rcc.o(i.RCC_APB2PeriphClockCmd) for RCC_APB2PeriphClockCmd
    motor_driver.o(i.motor_init) refers to stm32f10x_gpio.o(i.GPIO_Init) for GPIO_Init
    motor_driver.o(i.motor_init) refers to rtx_thread.o(.text.osThreadNew) for osThreadNew
    motor_driver.o(i.motor_init) refers to motor_driver.o(i.generate_pwm) for generate_pwm
    rtx_lib.o(i.__user_perthread_libspace) refers to rtx_lib.o(i.os_kernel_is_active) for os_kernel_is_active
    rtx_lib.o(i.__user_perthread_libspace) refers to rtx_thread.o(.text.osThreadGetId) for osThreadGetId
    rtx_lib.o(i.__user_perthread_libspace) refers to rtx_config.o(i.osRtxErrorNotify) for osRtxErrorNotify
    rtx_lib.o(i.__user_perthread_libspace) refers to rtx_lib.o(.bss.os) for os_libspace
    rtx_lib.o(i._mutex_acquire) refers to rtx_lib.o(i.os_kernel_is_active) for os_kernel_is_active
    rtx_lib.o(i._mutex_acquire) refers to rtx_mutex.o(.text.osMutexAcquire) for osMutexAcquire
    rtx_lib.o(i._mutex_free) refers to rtx_mutex.o(.text.osMutexDelete) for osMutexDelete
    rtx_lib.o(i._mutex_initialize) refers to rtx_mutex.o(.text.osMutexNew) for osMutexNew
    rtx_lib.o(i._mutex_initialize) refers to rtx_config.o(i.osRtxErrorNotify) for osRtxErrorNotify
    rtx_lib.o(i._mutex_release) refers to rtx_lib.o(i.os_kernel_is_active) for os_kernel_is_active
    rtx_lib.o(i._mutex_release) refers to rtx_mutex.o(.text.osMutexRelease) for osMutexRelease
    rtx_lib.o(i._platform_post_stackheap_init) refers to rtx_kernel.o(.text.osKernelInitialize) for osKernelInitialize
    rtx_lib.o(i.os_kernel_is_active) refers to rtx_kernel.o(.text.osKernelGetState) for osKernelGetState
    rtx_lib.o(i.os_kernel_is_active) refers to rtx_lib.o(.data) for os_kernel_active
    rtx_lib.o(.constdata) refers to rtx_lib.o(.bss.os.thread.cb) for os_idle_thread_cb
    rtx_lib.o(.constdata) refers to rtx_lib.o(.bss.os.thread.stack) for os_idle_thread_stack
    rtx_lib.o(.constdata) refers to rtx_lib.o(.bss.os.msgqueue.cb) for os_timer_mq_cb
    rtx_lib.o(.constdata) refers to rtx_lib.o(.bss.os.msgqueue.mem) for os_timer_mq_data
    rtx_lib.o(.data) refers to irq_cm3.o(.constdata) for irqRtxLib
    rtx_lib.o(.rodata) refers to rtx_lib.o(.bss.os) for os_isr_queue
    rtx_lib.o(.rodata) refers to rtx_lib.o(.constdata) for os_idle_thread_attr
    stm32f10x_gpio.o(i.GPIO_AFIODeInit) refers to stm32f10x_rcc.o(i.RCC_APB2PeriphResetCmd) for RCC_APB2PeriphResetCmd
    stm32f10x_gpio.o(i.GPIO_DeInit) refers to stm32f10x_rcc.o(i.RCC_APB2PeriphResetCmd) for RCC_APB2PeriphResetCmd
    stm32f10x_rcc.o(i.RCC_GetClocksFreq) refers to stm32f10x_rcc.o(.data) for APBAHBPrescTable
    stm32f10x_rcc.o(i.RCC_WaitForHSEStartUp) refers to stm32f10x_rcc.o(i.RCC_GetFlagStatus) for RCC_GetFlagStatus
    stm32f10x_usart.o(i.USART_DeInit) refers to stm32f10x_rcc.o(i.RCC_APB2PeriphResetCmd) for RCC_APB2PeriphResetCmd
    stm32f10x_usart.o(i.USART_DeInit) refers to stm32f10x_rcc.o(i.RCC_APB1PeriphResetCmd) for RCC_APB1PeriphResetCmd
    stm32f10x_usart.o(i.USART_Init) refers to stm32f10x_rcc.o(i.RCC_GetClocksFreq) for RCC_GetClocksFreq
    startup_stm32f10x_cl.o(STACK) refers (Special) to heapauxi.o(.text) for __use_two_region_memory
    startup_stm32f10x_cl.o(HEAP) refers (Special) to heapauxi.o(.text) for __use_two_region_memory
    startup_stm32f10x_cl.o(RESET) refers (Special) to heapauxi.o(.text) for __use_two_region_memory
    startup_stm32f10x_cl.o(RESET) refers to startup_stm32f10x_cl.o(STACK) for __initial_sp
    startup_stm32f10x_cl.o(RESET) refers to startup_stm32f10x_cl.o(.text) for Reset_Handler
    startup_stm32f10x_cl.o(RESET) refers to irq_cm3.o(.text) for SVC_Handler
    startup_stm32f10x_cl.o(RESET) refers to svvis_cortex_threads.o(i.USART1_IRQHandler) for USART1_IRQHandler
    startup_stm32f10x_cl.o(RESET) refers to svvis_cortex_threads.o(i.USART2_IRQHandler) for USART2_IRQHandler
    startup_stm32f10x_cl.o(RESET) refers to svvis_cortex_threads.o(i.USART3_IRQHandler) for USART3_IRQHandler
    startup_stm32f10x_cl.o(.text) refers (Special) to heapauxi.o(.text) for __use_two_region_memory
    startup_stm32f10x_cl.o(.text) refers to system_stm32f10x.o(i.SystemInit) for SystemInit
    startup_stm32f10x_cl.o(.text) refers to __main.o(!!!main) for __main
    startup_stm32f10x_cl.o(.text) refers to startup_stm32f10x_cl.o(HEAP) for Heap_Mem
    startup_stm32f10x_cl.o(.text) refers to startup_stm32f10x_cl.o(STACK) for Stack_Mem
    system_stm32f10x.o(i.SetSysClock) refers to system_stm32f10x.o(i.SetSysClockTo72) for SetSysClockTo72
    system_stm32f10x.o(i.SystemCoreClockUpdate) refers to system_stm32f10x.o(.data) for SystemCoreClock
    system_stm32f10x.o(i.SystemInit) refers to system_stm32f10x.o(i.SetSysClock) for SetSysClock
    rtx_kernel.o(.text.svcRtxKernelInitialize) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_kernel.o(.text.svcRtxKernelInitialize) refers to rt_memclr_w.o(.text) for __aeabi_memclr8
    rtx_kernel.o(.text.svcRtxKernelInitialize) refers to rtx_lib.o(.rodata) for osRtxConfig
    rtx_kernel.o(.text.svcRtxKernelInitialize) refers to rtx_memory.o(.text.osRtxMemoryInit) for osRtxMemoryInit
    rtx_kernel.o(.text.svcRtxKernelInitialize) refers to rtx_mempool.o(.text.osRtxMemoryPoolInit) for osRtxMemoryPoolInit
    rtx_kernel.o(.ARM.exidx.text.svcRtxKernelInitialize) refers to rtx_kernel.o(.text.svcRtxKernelInitialize) for [Anonymous Symbol]
    rtx_kernel.o(.text.svcRtxKernelGetInfo) refers to rtx_kernel.o(.rodata.str1.4) for .L.str
    rtx_kernel.o(.text.svcRtxKernelGetInfo) refers to rt_memcpy_v6.o(.text) for __aeabi_memcpy
    rtx_kernel.o(.ARM.exidx.text.svcRtxKernelGetInfo) refers to rtx_kernel.o(.text.svcRtxKernelGetInfo) for [Anonymous Symbol]
    rtx_kernel.o(.text.svcRtxKernelGetState) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_kernel.o(.ARM.exidx.text.svcRtxKernelGetState) refers to rtx_kernel.o(.text.svcRtxKernelGetState) for [Anonymous Symbol]
    rtx_kernel.o(.text.svcRtxKernelStart) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_kernel.o(.text.svcRtxKernelStart) refers to rtx_lib.o(.rodata) for osRtxConfig
    rtx_kernel.o(.text.svcRtxKernelStart) refers to rtx_config.o(i.osRtxIdleThread) for osRtxIdleThread
    rtx_kernel.o(.text.svcRtxKernelStart) refers to rtx_thread.o(.text.svcRtxThreadNew) for svcRtxThreadNew
    rtx_kernel.o(.text.svcRtxKernelStart) refers to rtx_thread.o(.text.osRtxThreadListGet) for osRtxThreadListGet
    rtx_kernel.o(.text.svcRtxKernelStart) refers to rtx_thread.o(.text.osRtxThreadSwitch) for osRtxThreadSwitch
    rtx_kernel.o(.text.svcRtxKernelStart) refers to system_stm32f10x.o(.data) for SystemCoreClock
    rtx_kernel.o(.text.svcRtxKernelStart) refers to rtx_system.o(.text.osRtxSysTimerSetup) for osRtxSysTimerSetup
    rtx_kernel.o(.text.svcRtxKernelStart) refers to rtx_system.o(.text.osRtxSysTimerEnable) for osRtxSysTimerEnable
    rtx_kernel.o(.ARM.exidx.text.svcRtxKernelStart) refers to rtx_kernel.o(.text.svcRtxKernelStart) for [Anonymous Symbol]
    rtx_kernel.o(.text.svcRtxKernelLock) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_kernel.o(.ARM.exidx.text.svcRtxKernelLock) refers to rtx_kernel.o(.text.svcRtxKernelLock) for [Anonymous Symbol]
    rtx_kernel.o(.text.svcRtxKernelUnlock) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_kernel.o(.ARM.exidx.text.svcRtxKernelUnlock) refers to rtx_kernel.o(.text.svcRtxKernelUnlock) for [Anonymous Symbol]
    rtx_kernel.o(.text.svcRtxKernelRestoreLock) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_kernel.o(.ARM.exidx.text.svcRtxKernelRestoreLock) refers to rtx_kernel.o(.text.svcRtxKernelRestoreLock) for [Anonymous Symbol]
    rtx_kernel.o(.text.svcRtxKernelSuspend) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_kernel.o(.text.svcRtxKernelSuspend) refers to rtx_system.o(.text.osRtxSysTimerDisable) for osRtxSysTimerDisable
    rtx_kernel.o(.ARM.exidx.text.svcRtxKernelSuspend) refers to rtx_kernel.o(.text.svcRtxKernelSuspend) for [Anonymous Symbol]
    rtx_kernel.o(.text.svcRtxKernelResume) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_kernel.o(.text.svcRtxKernelResume) refers to rtx_thread.o(.text.osRtxThreadDelayTick) for osRtxThreadDelayTick
    rtx_kernel.o(.text.svcRtxKernelResume) refers to rtx_timer.o(.text.osRtxTimerTick) for osRtxTimerTick
    rtx_kernel.o(.text.svcRtxKernelResume) refers to rtx_thread.o(.text.osRtxThreadDispatch) for osRtxThreadDispatch
    rtx_kernel.o(.text.svcRtxKernelResume) refers to rtx_system.o(.text.osRtxSysTimerEnable) for osRtxSysTimerEnable
    rtx_kernel.o(.ARM.exidx.text.svcRtxKernelResume) refers to rtx_kernel.o(.text.svcRtxKernelResume) for [Anonymous Symbol]
    rtx_kernel.o(.text.svcRtxKernelGetTickCount) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_kernel.o(.ARM.exidx.text.svcRtxKernelGetTickCount) refers to rtx_kernel.o(.text.svcRtxKernelGetTickCount) for [Anonymous Symbol]
    rtx_kernel.o(.text.svcRtxKernelGetTickFreq) refers to rtx_lib.o(.rodata) for osRtxConfig
    rtx_kernel.o(.ARM.exidx.text.svcRtxKernelGetTickFreq) refers to rtx_kernel.o(.text.svcRtxKernelGetTickFreq) for [Anonymous Symbol]
    rtx_kernel.o(.text.svcRtxKernelGetSysTimerCount) refers to rtx_system.o(.text.osRtxSysTimerGetCount) for osRtxSysTimerGetCount
    rtx_kernel.o(.ARM.exidx.text.svcRtxKernelGetSysTimerCount) refers to rtx_kernel.o(.text.svcRtxKernelGetSysTimerCount) for [Anonymous Symbol]
    rtx_kernel.o(.text.svcRtxKernelGetSysTimerFreq) refers to rtx_system.o(.text.osRtxSysTimerGetFreq) for osRtxSysTimerGetFreq
    rtx_kernel.o(.ARM.exidx.text.svcRtxKernelGetSysTimerFreq) refers to rtx_kernel.o(.text.svcRtxKernelGetSysTimerFreq) for [Anonymous Symbol]
    rtx_kernel.o(.text.osKernelInitialize) refers to rtx_kernel.o(.text.svcRtxKernelInitialize) for svcRtxKernelInitialize
    rtx_kernel.o(.ARM.exidx.text.osKernelInitialize) refers to rtx_kernel.o(.text.osKernelInitialize) for [Anonymous Symbol]
    rtx_kernel.o(.text.osKernelGetInfo) refers to rtx_kernel.o(.rodata.str1.4) for .L.str
    rtx_kernel.o(.text.osKernelGetInfo) refers to rt_memcpy_v6.o(.text) for __aeabi_memcpy
    rtx_kernel.o(.text.osKernelGetInfo) refers to rtx_kernel.o(.text.svcRtxKernelGetInfo) for svcRtxKernelGetInfo
    rtx_kernel.o(.ARM.exidx.text.osKernelGetInfo) refers to rtx_kernel.o(.text.osKernelGetInfo) for [Anonymous Symbol]
    rtx_kernel.o(.text.osKernelGetState) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_kernel.o(.text.osKernelGetState) refers to rtx_kernel.o(.text.svcRtxKernelGetState) for svcRtxKernelGetState
    rtx_kernel.o(.ARM.exidx.text.osKernelGetState) refers to rtx_kernel.o(.text.osKernelGetState) for [Anonymous Symbol]
    rtx_kernel.o(.text.osKernelStart) refers to rtx_kernel.o(.text.svcRtxKernelStart) for svcRtxKernelStart
    rtx_kernel.o(.ARM.exidx.text.osKernelStart) refers to rtx_kernel.o(.text.osKernelStart) for [Anonymous Symbol]
    rtx_kernel.o(.text.osKernelLock) refers to rtx_kernel.o(.text.svcRtxKernelLock) for svcRtxKernelLock
    rtx_kernel.o(.ARM.exidx.text.osKernelLock) refers to rtx_kernel.o(.text.osKernelLock) for [Anonymous Symbol]
    rtx_kernel.o(.text.osKernelUnlock) refers to rtx_kernel.o(.text.svcRtxKernelUnlock) for svcRtxKernelUnlock
    rtx_kernel.o(.ARM.exidx.text.osKernelUnlock) refers to rtx_kernel.o(.text.osKernelUnlock) for [Anonymous Symbol]
    rtx_kernel.o(.text.osKernelRestoreLock) refers to rtx_kernel.o(.text.svcRtxKernelRestoreLock) for svcRtxKernelRestoreLock
    rtx_kernel.o(.ARM.exidx.text.osKernelRestoreLock) refers to rtx_kernel.o(.text.osKernelRestoreLock) for [Anonymous Symbol]
    rtx_kernel.o(.text.osKernelSuspend) refers to rtx_kernel.o(.text.svcRtxKernelSuspend) for svcRtxKernelSuspend
    rtx_kernel.o(.ARM.exidx.text.osKernelSuspend) refers to rtx_kernel.o(.text.osKernelSuspend) for [Anonymous Symbol]
    rtx_kernel.o(.text.osKernelResume) refers to rtx_kernel.o(.text.svcRtxKernelResume) for svcRtxKernelResume
    rtx_kernel.o(.ARM.exidx.text.osKernelResume) refers to rtx_kernel.o(.text.osKernelResume) for [Anonymous Symbol]
    rtx_kernel.o(.text.osKernelGetTickCount) refers to rtx_kernel.o(.text.svcRtxKernelGetTickCount) for svcRtxKernelGetTickCount
    rtx_kernel.o(.ARM.exidx.text.osKernelGetTickCount) refers to rtx_kernel.o(.text.osKernelGetTickCount) for [Anonymous Symbol]
    rtx_kernel.o(.text.osKernelGetTickFreq) refers to rtx_kernel.o(.text.svcRtxKernelGetTickFreq) for svcRtxKernelGetTickFreq
    rtx_kernel.o(.ARM.exidx.text.osKernelGetTickFreq) refers to rtx_kernel.o(.text.osKernelGetTickFreq) for [Anonymous Symbol]
    rtx_kernel.o(.text.osKernelGetSysTimerCount) refers to rtx_system.o(.text.osRtxSysTimerGetCount) for osRtxSysTimerGetCount
    rtx_kernel.o(.text.osKernelGetSysTimerCount) refers to rtx_kernel.o(.text.svcRtxKernelGetSysTimerCount) for svcRtxKernelGetSysTimerCount
    rtx_kernel.o(.ARM.exidx.text.osKernelGetSysTimerCount) refers to rtx_kernel.o(.text.osKernelGetSysTimerCount) for [Anonymous Symbol]
    rtx_kernel.o(.text.osKernelGetSysTimerFreq) refers to rtx_system.o(.text.osRtxSysTimerGetFreq) for osRtxSysTimerGetFreq
    rtx_kernel.o(.text.osKernelGetSysTimerFreq) refers to rtx_kernel.o(.text.svcRtxKernelGetSysTimerFreq) for svcRtxKernelGetSysTimerFreq
    rtx_kernel.o(.ARM.exidx.text.osKernelGetSysTimerFreq) refers to rtx_kernel.o(.text.osKernelGetSysTimerFreq) for [Anonymous Symbol]
    rtx_kernel.o(.data.os) refers to rtx_kernel.o(.rodata.str1.4) for .L.str
    rtx_kernel.o(.data.irqRtxLibRef) refers to irq_cm3.o(.constdata) for irqRtxLib
    rtx_thread.o(.ARM.exidx.text.osRtxThreadListPut) refers to rtx_thread.o(.text.osRtxThreadListPut) for [Anonymous Symbol]
    rtx_thread.o(.ARM.exidx.text.osRtxThreadListGet) refers to rtx_thread.o(.text.osRtxThreadListGet) for [Anonymous Symbol]
    rtx_thread.o(.ARM.exidx.text.osRtxThreadListRoot) refers to rtx_thread.o(.text.osRtxThreadListRoot) for [Anonymous Symbol]
    rtx_thread.o(.ARM.exidx.text.osRtxThreadListSort) refers to rtx_thread.o(.text.osRtxThreadListSort) for [Anonymous Symbol]
    rtx_thread.o(.ARM.exidx.text.osRtxThreadListRemove) refers to rtx_thread.o(.text.osRtxThreadListRemove) for [Anonymous Symbol]
    rtx_thread.o(.ARM.exidx.text.osRtxThreadListUnlink) refers to rtx_thread.o(.text.osRtxThreadListUnlink) for [Anonymous Symbol]
    rtx_thread.o(.text.osRtxThreadReadyPut) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_thread.o(.ARM.exidx.text.osRtxThreadReadyPut) refers to rtx_thread.o(.text.osRtxThreadReadyPut) for [Anonymous Symbol]
    rtx_thread.o(.text.osRtxThreadDelayInsert) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_thread.o(.ARM.exidx.text.osRtxThreadDelayInsert) refers to rtx_thread.o(.text.osRtxThreadDelayInsert) for [Anonymous Symbol]
    rtx_thread.o(.text.osRtxThreadDelayRemove) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_thread.o(.ARM.exidx.text.osRtxThreadDelayRemove) refers to rtx_thread.o(.text.osRtxThreadDelayRemove) for [Anonymous Symbol]
    rtx_thread.o(.text.osRtxThreadDelayTick) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_thread.o(.ARM.exidx.text.osRtxThreadDelayTick) refers to rtx_thread.o(.text.osRtxThreadDelayTick) for [Anonymous Symbol]
    rtx_thread.o(.ARM.exidx.text.osRtxThreadRegPtr) refers to rtx_thread.o(.text.osRtxThreadRegPtr) for [Anonymous Symbol]
    rtx_thread.o(.text.osRtxThreadBlock) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_thread.o(.ARM.exidx.text.osRtxThreadBlock) refers to rtx_thread.o(.text.osRtxThreadBlock) for [Anonymous Symbol]
    rtx_thread.o(.text.osRtxThreadSwitch) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_thread.o(.text.osRtxThreadSwitch) refers to rtx_thread.o(.text.osRtxThreadStackCheck) for osRtxThreadStackCheck
    rtx_thread.o(.ARM.exidx.text.osRtxThreadSwitch) refers to rtx_thread.o(.text.osRtxThreadSwitch) for [Anonymous Symbol]
    rtx_thread.o(.text.osRtxThreadStackCheck) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_thread.o(.text.osRtxThreadStackCheck) refers to rtx_config.o(i.osRtxErrorNotify) for osRtxErrorNotify
    rtx_thread.o(.ARM.exidx.text.osRtxThreadStackCheck) refers to rtx_thread.o(.text.osRtxThreadStackCheck) for [Anonymous Symbol]
    rtx_thread.o(.text.osRtxThreadDispatch) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_thread.o(.text.osRtxThreadDispatch) refers to rtx_thread.o(.text.osRtxThreadStackCheck) for osRtxThreadStackCheck
    rtx_thread.o(.ARM.exidx.text.osRtxThreadDispatch) refers to rtx_thread.o(.text.osRtxThreadDispatch) for [Anonymous Symbol]
    rtx_thread.o(.text.osRtxThreadWaitExit) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_thread.o(.text.osRtxThreadWaitExit) refers to rtx_thread.o(.text.osRtxThreadDispatch) for osRtxThreadDispatch
    rtx_thread.o(.ARM.exidx.text.osRtxThreadWaitExit) refers to rtx_thread.o(.text.osRtxThreadWaitExit) for [Anonymous Symbol]
    rtx_thread.o(.text.osRtxThreadWaitEnter) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_thread.o(.text.osRtxThreadWaitEnter) refers to rtx_thread.o(.text.osRtxThreadStackCheck) for osRtxThreadStackCheck
    rtx_thread.o(.ARM.exidx.text.osRtxThreadWaitEnter) refers to rtx_thread.o(.text.osRtxThreadWaitEnter) for [Anonymous Symbol]
    rtx_thread.o(.text.osRtxThreadPostProcess) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_thread.o(.ARM.exidx.text.osRtxThreadPostProcess) refers to rtx_thread.o(.text.osRtxThreadPostProcess) for [Anonymous Symbol]
    rtx_thread.o(.text.svcRtxThreadNew) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_thread.o(.text.svcRtxThreadNew) refers to rtx_mempool.o(.text.osRtxMemoryPoolAlloc) for osRtxMemoryPoolAlloc
    rtx_thread.o(.text.svcRtxThreadNew) refers to rtx_memory.o(.text.osRtxMemoryAlloc) for osRtxMemoryAlloc
    rtx_thread.o(.text.svcRtxThreadNew) refers to rtx_lib.o(.rodata) for osRtxConfig
    rtx_thread.o(.text.svcRtxThreadNew) refers to aeabi_memset4.o(.text) for __aeabi_memset4
    rtx_thread.o(.text.svcRtxThreadNew) refers to rt_memclr_w.o(.text) for __aeabi_memclr4
    rtx_thread.o(.text.svcRtxThreadNew) refers to rtx_thread.o(.text.osThreadExit) for osThreadExit
    rtx_thread.o(.text.svcRtxThreadNew) refers to rtx_thread.o(.text.osRtxThreadPostProcess) for osRtxThreadPostProcess
    rtx_thread.o(.text.svcRtxThreadNew) refers to rtx_thread.o(.text.osRtxThreadDispatch) for osRtxThreadDispatch
    rtx_thread.o(.text.svcRtxThreadNew) refers to rtx_mempool.o(.text.osRtxMemoryPoolFree) for osRtxMemoryPoolFree
    rtx_thread.o(.text.svcRtxThreadNew) refers to rtx_memory.o(.text.osRtxMemoryFree) for osRtxMemoryFree
    rtx_thread.o(.ARM.exidx.text.svcRtxThreadNew) refers to rtx_thread.o(.text.svcRtxThreadNew) for [Anonymous Symbol]
    rtx_thread.o(.text.osThreadExit) refers to rtx_thread.o(.text.svcRtxThreadExit) for svcRtxThreadExit
    rtx_thread.o(.ARM.exidx.text.osThreadExit) refers to rtx_thread.o(.text.osThreadExit) for [Anonymous Symbol]
    rtx_thread.o(.ARM.exidx.text.svcRtxThreadGetName) refers to rtx_thread.o(.text.svcRtxThreadGetName) for [Anonymous Symbol]
    rtx_thread.o(.text.svcRtxThreadGetId) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_thread.o(.ARM.exidx.text.svcRtxThreadGetId) refers to rtx_thread.o(.text.svcRtxThreadGetId) for [Anonymous Symbol]
    rtx_thread.o(.ARM.exidx.text.svcRtxThreadGetState) refers to rtx_thread.o(.text.svcRtxThreadGetState) for [Anonymous Symbol]
    rtx_thread.o(.ARM.exidx.text.svcRtxThreadGetStackSize) refers to rtx_thread.o(.text.svcRtxThreadGetStackSize) for [Anonymous Symbol]
    rtx_thread.o(.text.svcRtxThreadGetStackSpace) refers to rtx_lib.o(.rodata) for osRtxConfig
    rtx_thread.o(.ARM.exidx.text.svcRtxThreadGetStackSpace) refers to rtx_thread.o(.text.svcRtxThreadGetStackSpace) for [Anonymous Symbol]
    rtx_thread.o(.text.svcRtxThreadSetPriority) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_thread.o(.text.svcRtxThreadSetPriority) refers to rtx_thread.o(.text.osRtxThreadStackCheck) for osRtxThreadStackCheck
    rtx_thread.o(.ARM.exidx.text.svcRtxThreadSetPriority) refers to rtx_thread.o(.text.svcRtxThreadSetPriority) for [Anonymous Symbol]
    rtx_thread.o(.ARM.exidx.text.svcRtxThreadGetPriority) refers to rtx_thread.o(.text.svcRtxThreadGetPriority) for [Anonymous Symbol]
    rtx_thread.o(.text.svcRtxThreadYield) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_thread.o(.text.svcRtxThreadYield) refers to rtx_thread.o(.text.osRtxThreadStackCheck) for osRtxThreadStackCheck
    rtx_thread.o(.ARM.exidx.text.svcRtxThreadYield) refers to rtx_thread.o(.text.svcRtxThreadYield) for [Anonymous Symbol]
    rtx_thread.o(.text.svcRtxThreadSuspend) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_thread.o(.text.svcRtxThreadSuspend) refers to rtx_thread.o(.text.osRtxThreadStackCheck) for osRtxThreadStackCheck
    rtx_thread.o(.ARM.exidx.text.svcRtxThreadSuspend) refers to rtx_thread.o(.text.svcRtxThreadSuspend) for [Anonymous Symbol]
    rtx_thread.o(.text.svcRtxThreadResume) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_thread.o(.text.svcRtxThreadResume) refers to rtx_thread.o(.text.osRtxThreadDispatch) for osRtxThreadDispatch
    rtx_thread.o(.ARM.exidx.text.svcRtxThreadResume) refers to rtx_thread.o(.text.svcRtxThreadResume) for [Anonymous Symbol]
    rtx_thread.o(.text.svcRtxThreadDetach) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_thread.o(.text.svcRtxThreadDetach) refers to rtx_memory.o(.text.osRtxMemoryFree) for osRtxMemoryFree
    rtx_thread.o(.text.svcRtxThreadDetach) refers to rtx_mempool.o(.text.osRtxMemoryPoolFree) for osRtxMemoryPoolFree
    rtx_thread.o(.ARM.exidx.text.svcRtxThreadDetach) refers to rtx_thread.o(.text.svcRtxThreadDetach) for [Anonymous Symbol]
    rtx_thread.o(.text.svcRtxThreadJoin) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_thread.o(.text.svcRtxThreadJoin) refers to rtx_thread.o(.text.osRtxThreadStackCheck) for osRtxThreadStackCheck
    rtx_thread.o(.text.svcRtxThreadJoin) refers to rtx_memory.o(.text.osRtxMemoryFree) for osRtxMemoryFree
    rtx_thread.o(.text.svcRtxThreadJoin) refers to rtx_mempool.o(.text.osRtxMemoryPoolFree) for osRtxMemoryPoolFree
    rtx_thread.o(.ARM.exidx.text.svcRtxThreadJoin) refers to rtx_thread.o(.text.svcRtxThreadJoin) for [Anonymous Symbol]
    rtx_thread.o(.text.svcRtxThreadExit) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_thread.o(.text.svcRtxThreadExit) refers to rtx_mutex.o(.text.osRtxMutexOwnerRelease) for osRtxMutexOwnerRelease
    rtx_thread.o(.text.svcRtxThreadExit) refers to rtx_thread.o(.text.osRtxThreadStackCheck) for osRtxThreadStackCheck
    rtx_thread.o(.text.svcRtxThreadExit) refers to rtx_memory.o(.text.osRtxMemoryFree) for osRtxMemoryFree
    rtx_thread.o(.text.svcRtxThreadExit) refers to rtx_mempool.o(.text.osRtxMemoryPoolFree) for osRtxMemoryPoolFree
    rtx_thread.o(.ARM.exidx.text.svcRtxThreadExit) refers to rtx_thread.o(.text.svcRtxThreadExit) for [Anonymous Symbol]
    rtx_thread.o(.text.svcRtxThreadTerminate) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_thread.o(.text.svcRtxThreadTerminate) refers to rtx_mutex.o(.text.osRtxMutexOwnerRelease) for osRtxMutexOwnerRelease
    rtx_thread.o(.text.svcRtxThreadTerminate) refers to rtx_thread.o(.text.osRtxThreadStackCheck) for osRtxThreadStackCheck
    rtx_thread.o(.text.svcRtxThreadTerminate) refers to rtx_memory.o(.text.osRtxMemoryFree) for osRtxMemoryFree
    rtx_thread.o(.text.svcRtxThreadTerminate) refers to rtx_mempool.o(.text.osRtxMemoryPoolFree) for osRtxMemoryPoolFree
    rtx_thread.o(.ARM.exidx.text.svcRtxThreadTerminate) refers to rtx_thread.o(.text.svcRtxThreadTerminate) for [Anonymous Symbol]
    rtx_thread.o(.text.svcRtxThreadGetCount) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_thread.o(.ARM.exidx.text.svcRtxThreadGetCount) refers to rtx_thread.o(.text.svcRtxThreadGetCount) for [Anonymous Symbol]
    rtx_thread.o(.text.svcRtxThreadEnumerate) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_thread.o(.ARM.exidx.text.svcRtxThreadEnumerate) refers to rtx_thread.o(.text.svcRtxThreadEnumerate) for [Anonymous Symbol]
    rtx_thread.o(.text.svcRtxThreadFlagsSet) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_thread.o(.text.svcRtxThreadFlagsSet) refers to rtx_thread.o(.text.osRtxThreadStackCheck) for osRtxThreadStackCheck
    rtx_thread.o(.ARM.exidx.text.svcRtxThreadFlagsSet) refers to rtx_thread.o(.text.svcRtxThreadFlagsSet) for [Anonymous Symbol]
    rtx_thread.o(.text.svcRtxThreadFlagsClear) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_thread.o(.ARM.exidx.text.svcRtxThreadFlagsClear) refers to rtx_thread.o(.text.svcRtxThreadFlagsClear) for [Anonymous Symbol]
    rtx_thread.o(.text.svcRtxThreadFlagsGet) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_thread.o(.ARM.exidx.text.svcRtxThreadFlagsGet) refers to rtx_thread.o(.text.svcRtxThreadFlagsGet) for [Anonymous Symbol]
    rtx_thread.o(.text.svcRtxThreadFlagsWait) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_thread.o(.text.svcRtxThreadFlagsWait) refers to rtx_thread.o(.text.osRtxThreadWaitEnter) for osRtxThreadWaitEnter
    rtx_thread.o(.ARM.exidx.text.svcRtxThreadFlagsWait) refers to rtx_thread.o(.text.svcRtxThreadFlagsWait) for [Anonymous Symbol]
    rtx_thread.o(.text.osThreadNew) refers to rtx_thread.o(.text.svcRtxThreadNew) for svcRtxThreadNew
    rtx_thread.o(.ARM.exidx.text.osThreadNew) refers to rtx_thread.o(.text.osThreadNew) for [Anonymous Symbol]
    rtx_thread.o(.text.osThreadGetName) refers to rtx_thread.o(.text.svcRtxThreadGetName) for svcRtxThreadGetName
    rtx_thread.o(.ARM.exidx.text.osThreadGetName) refers to rtx_thread.o(.text.osThreadGetName) for [Anonymous Symbol]
    rtx_thread.o(.text.osThreadGetId) refers to rtx_thread.o(.text.svcRtxThreadGetId) for svcRtxThreadGetId
    rtx_thread.o(.ARM.exidx.text.osThreadGetId) refers to rtx_thread.o(.text.osThreadGetId) for [Anonymous Symbol]
    rtx_thread.o(.text.osThreadGetState) refers to rtx_thread.o(.text.svcRtxThreadGetState) for svcRtxThreadGetState
    rtx_thread.o(.ARM.exidx.text.osThreadGetState) refers to rtx_thread.o(.text.osThreadGetState) for [Anonymous Symbol]
    rtx_thread.o(.text.osThreadGetStackSize) refers to rtx_thread.o(.text.svcRtxThreadGetStackSize) for svcRtxThreadGetStackSize
    rtx_thread.o(.ARM.exidx.text.osThreadGetStackSize) refers to rtx_thread.o(.text.osThreadGetStackSize) for [Anonymous Symbol]
    rtx_thread.o(.text.osThreadGetStackSpace) refers to rtx_thread.o(.text.svcRtxThreadGetStackSpace) for svcRtxThreadGetStackSpace
    rtx_thread.o(.ARM.exidx.text.osThreadGetStackSpace) refers to rtx_thread.o(.text.osThreadGetStackSpace) for [Anonymous Symbol]
    rtx_thread.o(.text.osThreadSetPriority) refers to rtx_thread.o(.text.svcRtxThreadSetPriority) for svcRtxThreadSetPriority
    rtx_thread.o(.ARM.exidx.text.osThreadSetPriority) refers to rtx_thread.o(.text.osThreadSetPriority) for [Anonymous Symbol]
    rtx_thread.o(.text.osThreadGetPriority) refers to rtx_thread.o(.text.svcRtxThreadGetPriority) for svcRtxThreadGetPriority
    rtx_thread.o(.ARM.exidx.text.osThreadGetPriority) refers to rtx_thread.o(.text.osThreadGetPriority) for [Anonymous Symbol]
    rtx_thread.o(.text.osThreadYield) refers to rtx_thread.o(.text.svcRtxThreadYield) for svcRtxThreadYield
    rtx_thread.o(.ARM.exidx.text.osThreadYield) refers to rtx_thread.o(.text.osThreadYield) for [Anonymous Symbol]
    rtx_thread.o(.text.osThreadSuspend) refers to rtx_thread.o(.text.svcRtxThreadSuspend) for svcRtxThreadSuspend
    rtx_thread.o(.ARM.exidx.text.osThreadSuspend) refers to rtx_thread.o(.text.osThreadSuspend) for [Anonymous Symbol]
    rtx_thread.o(.text.osThreadResume) refers to rtx_thread.o(.text.svcRtxThreadResume) for svcRtxThreadResume
    rtx_thread.o(.ARM.exidx.text.osThreadResume) refers to rtx_thread.o(.text.osThreadResume) for [Anonymous Symbol]
    rtx_thread.o(.text.osThreadDetach) refers to rtx_thread.o(.text.svcRtxThreadDetach) for svcRtxThreadDetach
    rtx_thread.o(.ARM.exidx.text.osThreadDetach) refers to rtx_thread.o(.text.osThreadDetach) for [Anonymous Symbol]
    rtx_thread.o(.text.osThreadJoin) refers to rtx_thread.o(.text.svcRtxThreadJoin) for svcRtxThreadJoin
    rtx_thread.o(.ARM.exidx.text.osThreadJoin) refers to rtx_thread.o(.text.osThreadJoin) for [Anonymous Symbol]
    rtx_thread.o(.text.osThreadTerminate) refers to rtx_thread.o(.text.svcRtxThreadTerminate) for svcRtxThreadTerminate
    rtx_thread.o(.ARM.exidx.text.osThreadTerminate) refers to rtx_thread.o(.text.osThreadTerminate) for [Anonymous Symbol]
    rtx_thread.o(.text.osThreadGetCount) refers to rtx_thread.o(.text.svcRtxThreadGetCount) for svcRtxThreadGetCount
    rtx_thread.o(.ARM.exidx.text.osThreadGetCount) refers to rtx_thread.o(.text.osThreadGetCount) for [Anonymous Symbol]
    rtx_thread.o(.text.osThreadEnumerate) refers to rtx_thread.o(.text.svcRtxThreadEnumerate) for svcRtxThreadEnumerate
    rtx_thread.o(.ARM.exidx.text.osThreadEnumerate) refers to rtx_thread.o(.text.osThreadEnumerate) for [Anonymous Symbol]
    rtx_thread.o(.text.osThreadFlagsSet) refers to rtx_system.o(.text.osRtxPostProcess) for osRtxPostProcess
    rtx_thread.o(.text.osThreadFlagsSet) refers to rtx_thread.o(.text.svcRtxThreadFlagsSet) for svcRtxThreadFlagsSet
    rtx_thread.o(.ARM.exidx.text.osThreadFlagsSet) refers to rtx_thread.o(.text.osThreadFlagsSet) for [Anonymous Symbol]
    rtx_thread.o(.text.osThreadFlagsClear) refers to rtx_thread.o(.text.svcRtxThreadFlagsClear) for svcRtxThreadFlagsClear
    rtx_thread.o(.ARM.exidx.text.osThreadFlagsClear) refers to rtx_thread.o(.text.osThreadFlagsClear) for [Anonymous Symbol]
    rtx_thread.o(.text.osThreadFlagsGet) refers to rtx_thread.o(.text.svcRtxThreadFlagsGet) for svcRtxThreadFlagsGet
    rtx_thread.o(.ARM.exidx.text.osThreadFlagsGet) refers to rtx_thread.o(.text.osThreadFlagsGet) for [Anonymous Symbol]
    rtx_thread.o(.text.osThreadFlagsWait) refers to rtx_thread.o(.text.svcRtxThreadFlagsWait) for svcRtxThreadFlagsWait
    rtx_thread.o(.ARM.exidx.text.osThreadFlagsWait) refers to rtx_thread.o(.text.osThreadFlagsWait) for [Anonymous Symbol]
    rtx_delay.o(.text.svcRtxDelay) refers to rtx_thread.o(.text.osRtxThreadWaitEnter) for osRtxThreadWaitEnter
    rtx_delay.o(.ARM.exidx.text.svcRtxDelay) refers to rtx_delay.o(.text.svcRtxDelay) for [Anonymous Symbol]
    rtx_delay.o(.text.svcRtxDelayUntil) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_delay.o(.text.svcRtxDelayUntil) refers to rtx_thread.o(.text.osRtxThreadWaitEnter) for osRtxThreadWaitEnter
    rtx_delay.o(.ARM.exidx.text.svcRtxDelayUntil) refers to rtx_delay.o(.text.svcRtxDelayUntil) for [Anonymous Symbol]
    rtx_delay.o(.text.osDelay) refers to rtx_delay.o(.text.svcRtxDelay) for svcRtxDelay
    rtx_delay.o(.ARM.exidx.text.osDelay) refers to rtx_delay.o(.text.osDelay) for [Anonymous Symbol]
    rtx_delay.o(.text.osDelayUntil) refers to rtx_delay.o(.text.svcRtxDelayUntil) for svcRtxDelayUntil
    rtx_delay.o(.ARM.exidx.text.osDelayUntil) refers to rtx_delay.o(.text.osDelayUntil) for [Anonymous Symbol]
    rtx_mutex.o(.text.osRtxMutexOwnerRelease) refers to rtx_thread.o(.text.osRtxThreadListGet) for osRtxThreadListGet
    rtx_mutex.o(.text.osRtxMutexOwnerRelease) refers to rtx_thread.o(.text.osRtxThreadWaitExit) for osRtxThreadWaitExit
    rtx_mutex.o(.ARM.exidx.text.osRtxMutexOwnerRelease) refers to rtx_mutex.o(.text.osRtxMutexOwnerRelease) for [Anonymous Symbol]
    rtx_mutex.o(.text.svcRtxMutexNew) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_mutex.o(.text.svcRtxMutexNew) refers to rtx_mempool.o(.text.osRtxMemoryPoolAlloc) for osRtxMemoryPoolAlloc
    rtx_mutex.o(.text.svcRtxMutexNew) refers to rtx_memory.o(.text.osRtxMemoryAlloc) for osRtxMemoryAlloc
    rtx_mutex.o(.ARM.exidx.text.svcRtxMutexNew) refers to rtx_mutex.o(.text.svcRtxMutexNew) for [Anonymous Symbol]
    rtx_mutex.o(.ARM.exidx.text.svcRtxMutexGetName) refers to rtx_mutex.o(.text.svcRtxMutexGetName) for [Anonymous Symbol]
    rtx_mutex.o(.text.svcRtxMutexAcquire) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_mutex.o(.text.svcRtxMutexAcquire) refers to rtx_thread.o(.text.osRtxThreadListSort) for osRtxThreadListSort
    rtx_mutex.o(.text.svcRtxMutexAcquire) refers to rtx_thread.o(.text.osRtxThreadListPut) for osRtxThreadListPut
    rtx_mutex.o(.text.svcRtxMutexAcquire) refers to rtx_thread.o(.text.osRtxThreadWaitEnter) for osRtxThreadWaitEnter
    rtx_mutex.o(.ARM.exidx.text.svcRtxMutexAcquire) refers to rtx_mutex.o(.text.svcRtxMutexAcquire) for [Anonymous Symbol]
    rtx_mutex.o(.text.svcRtxMutexRelease) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_mutex.o(.text.svcRtxMutexRelease) refers to rtx_thread.o(.text.osRtxThreadListGet) for osRtxThreadListGet
    rtx_mutex.o(.text.svcRtxMutexRelease) refers to rtx_thread.o(.text.osRtxThreadWaitExit) for osRtxThreadWaitExit
    rtx_mutex.o(.text.svcRtxMutexRelease) refers to rtx_thread.o(.text.osRtxThreadDispatch) for osRtxThreadDispatch
    rtx_mutex.o(.ARM.exidx.text.svcRtxMutexRelease) refers to rtx_mutex.o(.text.svcRtxMutexRelease) for [Anonymous Symbol]
    rtx_mutex.o(.ARM.exidx.text.svcRtxMutexGetOwner) refers to rtx_mutex.o(.text.svcRtxMutexGetOwner) for [Anonymous Symbol]
    rtx_mutex.o(.text.svcRtxMutexDelete) refers to rtx_thread.o(.text.osRtxThreadListSort) for osRtxThreadListSort
    rtx_mutex.o(.text.svcRtxMutexDelete) refers to rtx_thread.o(.text.osRtxThreadListGet) for osRtxThreadListGet
    rtx_mutex.o(.text.svcRtxMutexDelete) refers to rtx_thread.o(.text.osRtxThreadWaitExit) for osRtxThreadWaitExit
    rtx_mutex.o(.text.svcRtxMutexDelete) refers to rtx_thread.o(.text.osRtxThreadDispatch) for osRtxThreadDispatch
    rtx_mutex.o(.text.svcRtxMutexDelete) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_mutex.o(.text.svcRtxMutexDelete) refers to rtx_mempool.o(.text.osRtxMemoryPoolFree) for osRtxMemoryPoolFree
    rtx_mutex.o(.text.svcRtxMutexDelete) refers to rtx_memory.o(.text.osRtxMemoryFree) for osRtxMemoryFree
    rtx_mutex.o(.ARM.exidx.text.svcRtxMutexDelete) refers to rtx_mutex.o(.text.svcRtxMutexDelete) for [Anonymous Symbol]
    rtx_mutex.o(.text.osMutexNew) refers to rtx_mutex.o(.text.svcRtxMutexNew) for svcRtxMutexNew
    rtx_mutex.o(.ARM.exidx.text.osMutexNew) refers to rtx_mutex.o(.text.osMutexNew) for [Anonymous Symbol]
    rtx_mutex.o(.text.osMutexGetName) refers to rtx_mutex.o(.text.svcRtxMutexGetName) for svcRtxMutexGetName
    rtx_mutex.o(.ARM.exidx.text.osMutexGetName) refers to rtx_mutex.o(.text.osMutexGetName) for [Anonymous Symbol]
    rtx_mutex.o(.text.osMutexAcquire) refers to rtx_mutex.o(.text.svcRtxMutexAcquire) for svcRtxMutexAcquire
    rtx_mutex.o(.ARM.exidx.text.osMutexAcquire) refers to rtx_mutex.o(.text.osMutexAcquire) for [Anonymous Symbol]
    rtx_mutex.o(.text.osMutexRelease) refers to rtx_mutex.o(.text.svcRtxMutexRelease) for svcRtxMutexRelease
    rtx_mutex.o(.ARM.exidx.text.osMutexRelease) refers to rtx_mutex.o(.text.osMutexRelease) for [Anonymous Symbol]
    rtx_mutex.o(.text.osMutexGetOwner) refers to rtx_mutex.o(.text.svcRtxMutexGetOwner) for svcRtxMutexGetOwner
    rtx_mutex.o(.ARM.exidx.text.osMutexGetOwner) refers to rtx_mutex.o(.text.osMutexGetOwner) for [Anonymous Symbol]
    rtx_mutex.o(.text.osMutexDelete) refers to rtx_mutex.o(.text.svcRtxMutexDelete) for svcRtxMutexDelete
    rtx_mutex.o(.ARM.exidx.text.osMutexDelete) refers to rtx_mutex.o(.text.osMutexDelete) for [Anonymous Symbol]
    rtx_msgqueue.o(.text.osRtxMessageQueuePostProcess) refers to rtx_mempool.o(.text.osRtxMemoryPoolFree) for osRtxMemoryPoolFree
    rtx_msgqueue.o(.text.osRtxMessageQueuePostProcess) refers to rtx_mempool.o(.text.osRtxMemoryPoolAlloc) for osRtxMemoryPoolAlloc
    rtx_msgqueue.o(.text.osRtxMessageQueuePostProcess) refers to rtx_thread.o(.text.osRtxThreadListGet) for osRtxThreadListGet
    rtx_msgqueue.o(.text.osRtxMessageQueuePostProcess) refers to rtx_thread.o(.text.osRtxThreadWaitExit) for osRtxThreadWaitExit
    rtx_msgqueue.o(.text.osRtxMessageQueuePostProcess) refers to rtx_thread.o(.text.osRtxThreadRegPtr) for osRtxThreadRegPtr
    rtx_msgqueue.o(.text.osRtxMessageQueuePostProcess) refers to rt_memcpy_v6.o(.text) for __aeabi_memcpy
    rtx_msgqueue.o(.ARM.exidx.text.osRtxMessageQueuePostProcess) refers to rtx_msgqueue.o(.text.osRtxMessageQueuePostProcess) for [Anonymous Symbol]
    rtx_msgqueue.o(.text.svcRtxMessageQueueNew) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_msgqueue.o(.text.svcRtxMessageQueueNew) refers to rtx_mempool.o(.text.osRtxMemoryPoolAlloc) for osRtxMemoryPoolAlloc
    rtx_msgqueue.o(.text.svcRtxMessageQueueNew) refers to rtx_memory.o(.text.osRtxMemoryAlloc) for osRtxMemoryAlloc
    rtx_msgqueue.o(.text.svcRtxMessageQueueNew) refers to rt_memclr.o(.text) for __aeabi_memclr
    rtx_msgqueue.o(.text.svcRtxMessageQueueNew) refers to rtx_mempool.o(.text.osRtxMemoryPoolInit) for osRtxMemoryPoolInit
    rtx_msgqueue.o(.text.svcRtxMessageQueueNew) refers to rtx_msgqueue.o(.text.osRtxMessageQueuePostProcess) for osRtxMessageQueuePostProcess
    rtx_msgqueue.o(.text.svcRtxMessageQueueNew) refers to rtx_mempool.o(.text.osRtxMemoryPoolFree) for osRtxMemoryPoolFree
    rtx_msgqueue.o(.text.svcRtxMessageQueueNew) refers to rtx_memory.o(.text.osRtxMemoryFree) for osRtxMemoryFree
    rtx_msgqueue.o(.ARM.exidx.text.svcRtxMessageQueueNew) refers to rtx_msgqueue.o(.text.svcRtxMessageQueueNew) for [Anonymous Symbol]
    rtx_msgqueue.o(.ARM.exidx.text.svcRtxMessageQueueGetName) refers to rtx_msgqueue.o(.text.svcRtxMessageQueueGetName) for [Anonymous Symbol]
    rtx_msgqueue.o(.text.svcRtxMessageQueuePut) refers to rtx_thread.o(.text.osRtxThreadListGet) for osRtxThreadListGet
    rtx_msgqueue.o(.text.svcRtxMessageQueuePut) refers to rtx_thread.o(.text.osRtxThreadWaitExit) for osRtxThreadWaitExit
    rtx_msgqueue.o(.text.svcRtxMessageQueuePut) refers to rtx_thread.o(.text.osRtxThreadRegPtr) for osRtxThreadRegPtr
    rtx_msgqueue.o(.text.svcRtxMessageQueuePut) refers to rt_memcpy_v6.o(.text) for __aeabi_memcpy
    rtx_msgqueue.o(.text.svcRtxMessageQueuePut) refers to rtx_mempool.o(.text.osRtxMemoryPoolAlloc) for osRtxMemoryPoolAlloc
    rtx_msgqueue.o(.text.svcRtxMessageQueuePut) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_msgqueue.o(.text.svcRtxMessageQueuePut) refers to rtx_thread.o(.text.osRtxThreadListPut) for osRtxThreadListPut
    rtx_msgqueue.o(.text.svcRtxMessageQueuePut) refers to rtx_thread.o(.text.osRtxThreadWaitEnter) for osRtxThreadWaitEnter
    rtx_msgqueue.o(.ARM.exidx.text.svcRtxMessageQueuePut) refers to rtx_msgqueue.o(.text.svcRtxMessageQueuePut) for [Anonymous Symbol]
    rtx_msgqueue.o(.text.svcRtxMessageQueueGet) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_msgqueue.o(.text.svcRtxMessageQueueGet) refers to rtx_thread.o(.text.osRtxThreadListPut) for osRtxThreadListPut
    rtx_msgqueue.o(.text.svcRtxMessageQueueGet) refers to rtx_thread.o(.text.osRtxThreadWaitEnter) for osRtxThreadWaitEnter
    rtx_msgqueue.o(.text.svcRtxMessageQueueGet) refers to rt_memcpy_v6.o(.text) for __aeabi_memcpy
    rtx_msgqueue.o(.text.svcRtxMessageQueueGet) refers to rtx_mempool.o(.text.osRtxMemoryPoolFree) for osRtxMemoryPoolFree
    rtx_msgqueue.o(.text.svcRtxMessageQueueGet) refers to rtx_mempool.o(.text.osRtxMemoryPoolAlloc) for osRtxMemoryPoolAlloc
    rtx_msgqueue.o(.text.svcRtxMessageQueueGet) refers to rtx_thread.o(.text.osRtxThreadListGet) for osRtxThreadListGet
    rtx_msgqueue.o(.text.svcRtxMessageQueueGet) refers to rtx_thread.o(.text.osRtxThreadWaitExit) for osRtxThreadWaitExit
    rtx_msgqueue.o(.text.svcRtxMessageQueueGet) refers to rtx_thread.o(.text.osRtxThreadRegPtr) for osRtxThreadRegPtr
    rtx_msgqueue.o(.ARM.exidx.text.svcRtxMessageQueueGet) refers to rtx_msgqueue.o(.text.svcRtxMessageQueueGet) for [Anonymous Symbol]
    rtx_msgqueue.o(.ARM.exidx.text.svcRtxMessageQueueGetCapacity) refers to rtx_msgqueue.o(.text.svcRtxMessageQueueGetCapacity) for [Anonymous Symbol]
    rtx_msgqueue.o(.ARM.exidx.text.svcRtxMessageQueueGetMsgSize) refers to rtx_msgqueue.o(.text.svcRtxMessageQueueGetMsgSize) for [Anonymous Symbol]
    rtx_msgqueue.o(.ARM.exidx.text.svcRtxMessageQueueGetCount) refers to rtx_msgqueue.o(.text.svcRtxMessageQueueGetCount) for [Anonymous Symbol]
    rtx_msgqueue.o(.ARM.exidx.text.svcRtxMessageQueueGetSpace) refers to rtx_msgqueue.o(.text.svcRtxMessageQueueGetSpace) for [Anonymous Symbol]
    rtx_msgqueue.o(.text.svcRtxMessageQueueReset) refers to rtx_mempool.o(.text.osRtxMemoryPoolFree) for osRtxMemoryPoolFree
    rtx_msgqueue.o(.text.svcRtxMessageQueueReset) refers to rtx_mempool.o(.text.osRtxMemoryPoolAlloc) for osRtxMemoryPoolAlloc
    rtx_msgqueue.o(.text.svcRtxMessageQueueReset) refers to rtx_thread.o(.text.osRtxThreadListGet) for osRtxThreadListGet
    rtx_msgqueue.o(.text.svcRtxMessageQueueReset) refers to rtx_thread.o(.text.osRtxThreadWaitExit) for osRtxThreadWaitExit
    rtx_msgqueue.o(.text.svcRtxMessageQueueReset) refers to rtx_thread.o(.text.osRtxThreadRegPtr) for osRtxThreadRegPtr
    rtx_msgqueue.o(.text.svcRtxMessageQueueReset) refers to rt_memcpy_v6.o(.text) for __aeabi_memcpy
    rtx_msgqueue.o(.text.svcRtxMessageQueueReset) refers to rtx_thread.o(.text.osRtxThreadDispatch) for osRtxThreadDispatch
    rtx_msgqueue.o(.ARM.exidx.text.svcRtxMessageQueueReset) refers to rtx_msgqueue.o(.text.svcRtxMessageQueueReset) for [Anonymous Symbol]
    rtx_msgqueue.o(.text.svcRtxMessageQueueDelete) refers to rtx_thread.o(.text.osRtxThreadListGet) for osRtxThreadListGet
    rtx_msgqueue.o(.text.svcRtxMessageQueueDelete) refers to rtx_thread.o(.text.osRtxThreadWaitExit) for osRtxThreadWaitExit
    rtx_msgqueue.o(.text.svcRtxMessageQueueDelete) refers to rtx_thread.o(.text.osRtxThreadDispatch) for osRtxThreadDispatch
    rtx_msgqueue.o(.text.svcRtxMessageQueueDelete) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_msgqueue.o(.text.svcRtxMessageQueueDelete) refers to rtx_memory.o(.text.osRtxMemoryFree) for osRtxMemoryFree
    rtx_msgqueue.o(.text.svcRtxMessageQueueDelete) refers to rtx_mempool.o(.text.osRtxMemoryPoolFree) for osRtxMemoryPoolFree
    rtx_msgqueue.o(.ARM.exidx.text.svcRtxMessageQueueDelete) refers to rtx_msgqueue.o(.text.svcRtxMessageQueueDelete) for [Anonymous Symbol]
    rtx_msgqueue.o(.text.osMessageQueueNew) refers to rtx_msgqueue.o(.text.svcRtxMessageQueueNew) for svcRtxMessageQueueNew
    rtx_msgqueue.o(.ARM.exidx.text.osMessageQueueNew) refers to rtx_msgqueue.o(.text.osMessageQueueNew) for [Anonymous Symbol]
    rtx_msgqueue.o(.text.osMessageQueueGetName) refers to rtx_msgqueue.o(.text.svcRtxMessageQueueGetName) for svcRtxMessageQueueGetName
    rtx_msgqueue.o(.ARM.exidx.text.osMessageQueueGetName) refers to rtx_msgqueue.o(.text.osMessageQueueGetName) for [Anonymous Symbol]
    rtx_msgqueue.o(.text.osMessageQueuePut) refers to rtx_mempool.o(.text.osRtxMemoryPoolAlloc) for osRtxMemoryPoolAlloc
    rtx_msgqueue.o(.text.osMessageQueuePut) refers to rt_memcpy_v6.o(.text) for __aeabi_memcpy
    rtx_msgqueue.o(.text.osMessageQueuePut) refers to rtx_system.o(.text.osRtxPostProcess) for osRtxPostProcess
    rtx_msgqueue.o(.text.osMessageQueuePut) refers to rtx_msgqueue.o(.text.svcRtxMessageQueuePut) for svcRtxMessageQueuePut
    rtx_msgqueue.o(.ARM.exidx.text.osMessageQueuePut) refers to rtx_msgqueue.o(.text.osMessageQueuePut) for [Anonymous Symbol]
    rtx_msgqueue.o(.text.osMessageQueueGet) refers to rtx_msgqueue.o(.text.svcRtxMessageQueueGet) for svcRtxMessageQueueGet
    rtx_msgqueue.o(.text.osMessageQueueGet) refers to rt_memcpy_v6.o(.text) for __aeabi_memcpy
    rtx_msgqueue.o(.text.osMessageQueueGet) refers to rtx_system.o(.text.osRtxPostProcess) for osRtxPostProcess
    rtx_msgqueue.o(.ARM.exidx.text.osMessageQueueGet) refers to rtx_msgqueue.o(.text.osMessageQueueGet) for [Anonymous Symbol]
    rtx_msgqueue.o(.text.osMessageQueueGetCapacity) refers to rtx_msgqueue.o(.text.svcRtxMessageQueueGetCapacity) for svcRtxMessageQueueGetCapacity
    rtx_msgqueue.o(.ARM.exidx.text.osMessageQueueGetCapacity) refers to rtx_msgqueue.o(.text.osMessageQueueGetCapacity) for [Anonymous Symbol]
    rtx_msgqueue.o(.text.osMessageQueueGetMsgSize) refers to rtx_msgqueue.o(.text.svcRtxMessageQueueGetMsgSize) for svcRtxMessageQueueGetMsgSize
    rtx_msgqueue.o(.ARM.exidx.text.osMessageQueueGetMsgSize) refers to rtx_msgqueue.o(.text.osMessageQueueGetMsgSize) for [Anonymous Symbol]
    rtx_msgqueue.o(.text.osMessageQueueGetCount) refers to rtx_msgqueue.o(.text.svcRtxMessageQueueGetCount) for svcRtxMessageQueueGetCount
    rtx_msgqueue.o(.ARM.exidx.text.osMessageQueueGetCount) refers to rtx_msgqueue.o(.text.osMessageQueueGetCount) for [Anonymous Symbol]
    rtx_msgqueue.o(.text.osMessageQueueGetSpace) refers to rtx_msgqueue.o(.text.svcRtxMessageQueueGetSpace) for svcRtxMessageQueueGetSpace
    rtx_msgqueue.o(.ARM.exidx.text.osMessageQueueGetSpace) refers to rtx_msgqueue.o(.text.osMessageQueueGetSpace) for [Anonymous Symbol]
    rtx_msgqueue.o(.text.osMessageQueueReset) refers to rtx_msgqueue.o(.text.svcRtxMessageQueueReset) for svcRtxMessageQueueReset
    rtx_msgqueue.o(.ARM.exidx.text.osMessageQueueReset) refers to rtx_msgqueue.o(.text.osMessageQueueReset) for [Anonymous Symbol]
    rtx_msgqueue.o(.text.osMessageQueueDelete) refers to rtx_msgqueue.o(.text.svcRtxMessageQueueDelete) for svcRtxMessageQueueDelete
    rtx_msgqueue.o(.ARM.exidx.text.osMessageQueueDelete) refers to rtx_msgqueue.o(.text.osMessageQueueDelete) for [Anonymous Symbol]
    irq_cm3.o(.text) refers to rtx_system.o(.text.osRtxPendSV_Handler) for osRtxPendSV_Handler
    irq_cm3.o(.text) refers to rtx_system.o(.text.osRtxTick_Handler) for osRtxTick_Handler
    irq_cm3.o(.text) refers to rtx_kernel.o(.data.os) for osRtxInfo
    irq_cm3.o(.text) refers to rtx_lib.o(.constdata) for osRtxUserSVC
    rtx_timer.o(.text.osRtxTimerTick) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_timer.o(.text.osRtxTimerTick) refers to rtx_msgqueue.o(.text.osMessageQueuePut) for osMessageQueuePut
    rtx_timer.o(.text.osRtxTimerTick) refers to rtx_config.o(i.osRtxErrorNotify) for osRtxErrorNotify
    rtx_timer.o(.ARM.exidx.text.osRtxTimerTick) refers to rtx_timer.o(.text.osRtxTimerTick) for [Anonymous Symbol]
    rtx_timer.o(.text.osRtxTimerThread) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_timer.o(.text.osRtxTimerThread) refers to rtx_msgqueue.o(.text.osMessageQueueGet) for osMessageQueueGet
    rtx_timer.o(.ARM.exidx.text.osRtxTimerThread) refers to rtx_timer.o(.text.osRtxTimerThread) for [Anonymous Symbol]
    rtx_timer.o(.text.svcRtxTimerNew) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_timer.o(.text.svcRtxTimerNew) refers to rtx_lib.o(.rodata) for osRtxConfig
    rtx_timer.o(.text.svcRtxTimerNew) refers to rtx_msgqueue.o(.text.svcRtxMessageQueueNew) for svcRtxMessageQueueNew
    rtx_timer.o(.text.svcRtxTimerNew) refers to rtx_timer.o(.text.osRtxTimerThread) for osRtxTimerThread
    rtx_timer.o(.text.svcRtxTimerNew) refers to rtx_thread.o(.text.svcRtxThreadNew) for svcRtxThreadNew
    rtx_timer.o(.text.svcRtxTimerNew) refers to rtx_mempool.o(.text.osRtxMemoryPoolAlloc) for osRtxMemoryPoolAlloc
    rtx_timer.o(.text.svcRtxTimerNew) refers to rtx_memory.o(.text.osRtxMemoryAlloc) for osRtxMemoryAlloc
    rtx_timer.o(.ARM.exidx.text.svcRtxTimerNew) refers to rtx_timer.o(.text.svcRtxTimerNew) for [Anonymous Symbol]
    rtx_timer.o(.ARM.exidx.text.svcRtxTimerGetName) refers to rtx_timer.o(.text.svcRtxTimerGetName) for [Anonymous Symbol]
    rtx_timer.o(.text.svcRtxTimerStart) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_timer.o(.ARM.exidx.text.svcRtxTimerStart) refers to rtx_timer.o(.text.svcRtxTimerStart) for [Anonymous Symbol]
    rtx_timer.o(.text.svcRtxTimerStop) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_timer.o(.ARM.exidx.text.svcRtxTimerStop) refers to rtx_timer.o(.text.svcRtxTimerStop) for [Anonymous Symbol]
    rtx_timer.o(.ARM.exidx.text.svcRtxTimerIsRunning) refers to rtx_timer.o(.text.svcRtxTimerIsRunning) for [Anonymous Symbol]
    rtx_timer.o(.text.svcRtxTimerDelete) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_timer.o(.text.svcRtxTimerDelete) refers to rtx_mempool.o(.text.osRtxMemoryPoolFree) for osRtxMemoryPoolFree
    rtx_timer.o(.text.svcRtxTimerDelete) refers to rtx_memory.o(.text.osRtxMemoryFree) for osRtxMemoryFree
    rtx_timer.o(.ARM.exidx.text.svcRtxTimerDelete) refers to rtx_timer.o(.text.svcRtxTimerDelete) for [Anonymous Symbol]
    rtx_timer.o(.text.osTimerNew) refers to rtx_timer.o(.text.svcRtxTimerNew) for svcRtxTimerNew
    rtx_timer.o(.ARM.exidx.text.osTimerNew) refers to rtx_timer.o(.text.osTimerNew) for [Anonymous Symbol]
    rtx_timer.o(.text.osTimerGetName) refers to rtx_timer.o(.text.svcRtxTimerGetName) for svcRtxTimerGetName
    rtx_timer.o(.ARM.exidx.text.osTimerGetName) refers to rtx_timer.o(.text.osTimerGetName) for [Anonymous Symbol]
    rtx_timer.o(.text.osTimerStart) refers to rtx_timer.o(.text.svcRtxTimerStart) for svcRtxTimerStart
    rtx_timer.o(.ARM.exidx.text.osTimerStart) refers to rtx_timer.o(.text.osTimerStart) for [Anonymous Symbol]
    rtx_timer.o(.text.osTimerStop) refers to rtx_timer.o(.text.svcRtxTimerStop) for svcRtxTimerStop
    rtx_timer.o(.ARM.exidx.text.osTimerStop) refers to rtx_timer.o(.text.osTimerStop) for [Anonymous Symbol]
    rtx_timer.o(.text.osTimerIsRunning) refers to rtx_timer.o(.text.svcRtxTimerIsRunning) for svcRtxTimerIsRunning
    rtx_timer.o(.ARM.exidx.text.osTimerIsRunning) refers to rtx_timer.o(.text.osTimerIsRunning) for [Anonymous Symbol]
    rtx_timer.o(.text.osTimerDelete) refers to rtx_timer.o(.text.svcRtxTimerDelete) for svcRtxTimerDelete
    rtx_timer.o(.ARM.exidx.text.osTimerDelete) refers to rtx_timer.o(.text.osTimerDelete) for [Anonymous Symbol]
    rtx_memory.o(.ARM.exidx.text.osRtxMemoryInit) refers to rtx_memory.o(.text.osRtxMemoryInit) for [Anonymous Symbol]
    rtx_memory.o(.ARM.exidx.text.osRtxMemoryAlloc) refers to rtx_memory.o(.text.osRtxMemoryAlloc) for [Anonymous Symbol]
    rtx_memory.o(.ARM.exidx.text.osRtxMemoryFree) refers to rtx_memory.o(.text.osRtxMemoryFree) for [Anonymous Symbol]
    rtx_mempool.o(.ARM.exidx.text.osRtxMemoryPoolInit) refers to rtx_mempool.o(.text.osRtxMemoryPoolInit) for [Anonymous Symbol]
    rtx_mempool.o(.ARM.exidx.text.osRtxMemoryPoolAlloc) refers to rtx_mempool.o(.text.osRtxMemoryPoolAlloc) for [Anonymous Symbol]
    rtx_mempool.o(.ARM.exidx.text.osRtxMemoryPoolFree) refers to rtx_mempool.o(.text.osRtxMemoryPoolFree) for [Anonymous Symbol]
    rtx_mempool.o(.text.osRtxMemoryPoolPostProcess) refers to rtx_thread.o(.text.osRtxThreadListGet) for osRtxThreadListGet
    rtx_mempool.o(.text.osRtxMemoryPoolPostProcess) refers to rtx_thread.o(.text.osRtxThreadWaitExit) for osRtxThreadWaitExit
    rtx_mempool.o(.ARM.exidx.text.osRtxMemoryPoolPostProcess) refers to rtx_mempool.o(.text.osRtxMemoryPoolPostProcess) for [Anonymous Symbol]
    rtx_mempool.o(.text.svcRtxMemoryPoolNew) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_mempool.o(.text.svcRtxMemoryPoolNew) refers to rtx_memory.o(.text.osRtxMemoryAlloc) for osRtxMemoryAlloc
    rtx_mempool.o(.text.svcRtxMemoryPoolNew) refers to rt_memclr.o(.text) for __aeabi_memclr
    rtx_mempool.o(.text.svcRtxMemoryPoolNew) refers to rtx_mempool.o(.text.osRtxMemoryPoolPostProcess) for osRtxMemoryPoolPostProcess
    rtx_mempool.o(.text.svcRtxMemoryPoolNew) refers to rtx_memory.o(.text.osRtxMemoryFree) for osRtxMemoryFree
    rtx_mempool.o(.ARM.exidx.text.svcRtxMemoryPoolNew) refers to rtx_mempool.o(.text.svcRtxMemoryPoolNew) for [Anonymous Symbol]
    rtx_mempool.o(.ARM.exidx.text.svcRtxMemoryPoolGetName) refers to rtx_mempool.o(.text.svcRtxMemoryPoolGetName) for [Anonymous Symbol]
    rtx_mempool.o(.text.svcRtxMemoryPoolAlloc) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_mempool.o(.text.svcRtxMemoryPoolAlloc) refers to rtx_thread.o(.text.osRtxThreadListPut) for osRtxThreadListPut
    rtx_mempool.o(.text.svcRtxMemoryPoolAlloc) refers to rtx_thread.o(.text.osRtxThreadWaitEnter) for osRtxThreadWaitEnter
    rtx_mempool.o(.ARM.exidx.text.svcRtxMemoryPoolAlloc) refers to rtx_mempool.o(.text.svcRtxMemoryPoolAlloc) for [Anonymous Symbol]
    rtx_mempool.o(.text.svcRtxMemoryPoolFree) refers to rtx_thread.o(.text.osRtxThreadListGet) for osRtxThreadListGet
    rtx_mempool.o(.text.svcRtxMemoryPoolFree) refers to rtx_thread.o(.text.osRtxThreadWaitExit) for osRtxThreadWaitExit
    rtx_mempool.o(.ARM.exidx.text.svcRtxMemoryPoolFree) refers to rtx_mempool.o(.text.svcRtxMemoryPoolFree) for [Anonymous Symbol]
    rtx_mempool.o(.ARM.exidx.text.svcRtxMemoryPoolGetCapacity) refers to rtx_mempool.o(.text.svcRtxMemoryPoolGetCapacity) for [Anonymous Symbol]
    rtx_mempool.o(.ARM.exidx.text.svcRtxMemoryPoolGetBlockSize) refers to rtx_mempool.o(.text.svcRtxMemoryPoolGetBlockSize) for [Anonymous Symbol]
    rtx_mempool.o(.ARM.exidx.text.svcRtxMemoryPoolGetCount) refers to rtx_mempool.o(.text.svcRtxMemoryPoolGetCount) for [Anonymous Symbol]
    rtx_mempool.o(.ARM.exidx.text.svcRtxMemoryPoolGetSpace) refers to rtx_mempool.o(.text.svcRtxMemoryPoolGetSpace) for [Anonymous Symbol]
    rtx_mempool.o(.text.svcRtxMemoryPoolDelete) refers to rtx_thread.o(.text.osRtxThreadListGet) for osRtxThreadListGet
    rtx_mempool.o(.text.svcRtxMemoryPoolDelete) refers to rtx_thread.o(.text.osRtxThreadWaitExit) for osRtxThreadWaitExit
    rtx_mempool.o(.text.svcRtxMemoryPoolDelete) refers to rtx_thread.o(.text.osRtxThreadDispatch) for osRtxThreadDispatch
    rtx_mempool.o(.text.svcRtxMemoryPoolDelete) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_mempool.o(.text.svcRtxMemoryPoolDelete) refers to rtx_memory.o(.text.osRtxMemoryFree) for osRtxMemoryFree
    rtx_mempool.o(.ARM.exidx.text.svcRtxMemoryPoolDelete) refers to rtx_mempool.o(.text.svcRtxMemoryPoolDelete) for [Anonymous Symbol]
    rtx_mempool.o(.text.osMemoryPoolNew) refers to rtx_mempool.o(.text.svcRtxMemoryPoolNew) for svcRtxMemoryPoolNew
    rtx_mempool.o(.ARM.exidx.text.osMemoryPoolNew) refers to rtx_mempool.o(.text.osMemoryPoolNew) for [Anonymous Symbol]
    rtx_mempool.o(.text.osMemoryPoolGetName) refers to rtx_mempool.o(.text.svcRtxMemoryPoolGetName) for svcRtxMemoryPoolGetName
    rtx_mempool.o(.ARM.exidx.text.osMemoryPoolGetName) refers to rtx_mempool.o(.text.osMemoryPoolGetName) for [Anonymous Symbol]
    rtx_mempool.o(.text.osMemoryPoolAlloc) refers to rtx_mempool.o(.text.svcRtxMemoryPoolAlloc) for svcRtxMemoryPoolAlloc
    rtx_mempool.o(.ARM.exidx.text.osMemoryPoolAlloc) refers to rtx_mempool.o(.text.osMemoryPoolAlloc) for [Anonymous Symbol]
    rtx_mempool.o(.text.osMemoryPoolFree) refers to rtx_system.o(.text.osRtxPostProcess) for osRtxPostProcess
    rtx_mempool.o(.text.osMemoryPoolFree) refers to rtx_mempool.o(.text.svcRtxMemoryPoolFree) for svcRtxMemoryPoolFree
    rtx_mempool.o(.ARM.exidx.text.osMemoryPoolFree) refers to rtx_mempool.o(.text.osMemoryPoolFree) for [Anonymous Symbol]
    rtx_mempool.o(.text.osMemoryPoolGetCapacity) refers to rtx_mempool.o(.text.svcRtxMemoryPoolGetCapacity) for svcRtxMemoryPoolGetCapacity
    rtx_mempool.o(.ARM.exidx.text.osMemoryPoolGetCapacity) refers to rtx_mempool.o(.text.osMemoryPoolGetCapacity) for [Anonymous Symbol]
    rtx_mempool.o(.text.osMemoryPoolGetBlockSize) refers to rtx_mempool.o(.text.svcRtxMemoryPoolGetBlockSize) for svcRtxMemoryPoolGetBlockSize
    rtx_mempool.o(.ARM.exidx.text.osMemoryPoolGetBlockSize) refers to rtx_mempool.o(.text.osMemoryPoolGetBlockSize) for [Anonymous Symbol]
    rtx_mempool.o(.text.osMemoryPoolGetCount) refers to rtx_mempool.o(.text.svcRtxMemoryPoolGetCount) for svcRtxMemoryPoolGetCount
    rtx_mempool.o(.ARM.exidx.text.osMemoryPoolGetCount) refers to rtx_mempool.o(.text.osMemoryPoolGetCount) for [Anonymous Symbol]
    rtx_mempool.o(.text.osMemoryPoolGetSpace) refers to rtx_mempool.o(.text.svcRtxMemoryPoolGetSpace) for svcRtxMemoryPoolGetSpace
    rtx_mempool.o(.ARM.exidx.text.osMemoryPoolGetSpace) refers to rtx_mempool.o(.text.osMemoryPoolGetSpace) for [Anonymous Symbol]
    rtx_mempool.o(.text.osMemoryPoolDelete) refers to rtx_mempool.o(.text.svcRtxMemoryPoolDelete) for svcRtxMemoryPoolDelete
    rtx_mempool.o(.ARM.exidx.text.osMemoryPoolDelete) refers to rtx_mempool.o(.text.osMemoryPoolDelete) for [Anonymous Symbol]
    rtx_system.o(.text.osRtxTick_Handler) refers to rtx_system.o(.text.osRtxSysTimerAckIRQ) for osRtxSysTimerAckIRQ
    rtx_system.o(.text.osRtxTick_Handler) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_system.o(.text.osRtxTick_Handler) refers to rtx_timer.o(.text.osRtxTimerTick) for osRtxTimerTick
    rtx_system.o(.text.osRtxTick_Handler) refers to rtx_thread.o(.text.osRtxThreadDelayTick) for osRtxThreadDelayTick
    rtx_system.o(.text.osRtxTick_Handler) refers to rtx_thread.o(.text.osRtxThreadDispatch) for osRtxThreadDispatch
    rtx_system.o(.text.osRtxTick_Handler) refers to rtx_thread.o(.text.osRtxThreadListRemove) for osRtxThreadListRemove
    rtx_system.o(.text.osRtxTick_Handler) refers to rtx_thread.o(.text.osRtxThreadReadyPut) for osRtxThreadReadyPut
    rtx_system.o(.text.osRtxTick_Handler) refers to rtx_thread.o(.text.osRtxThreadSwitch) for osRtxThreadSwitch
    rtx_system.o(.ARM.exidx.text.osRtxTick_Handler) refers to rtx_system.o(.text.osRtxTick_Handler) for [Anonymous Symbol]
    rtx_system.o(.ARM.exidx.text.osRtxSysTimerAckIRQ) refers to rtx_system.o(.text.osRtxSysTimerAckIRQ) for [Anonymous Symbol]
    rtx_system.o(.text.osRtxPendSV_Handler) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_system.o(.text.osRtxPendSV_Handler) refers to rtx_thread.o(.text.osRtxThreadDispatch) for osRtxThreadDispatch
    rtx_system.o(.ARM.exidx.text.osRtxPendSV_Handler) refers to rtx_system.o(.text.osRtxPendSV_Handler) for [Anonymous Symbol]
    rtx_system.o(.text.osRtxPostProcess) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_system.o(.text.osRtxPostProcess) refers to rtx_config.o(i.osRtxErrorNotify) for osRtxErrorNotify
    rtx_system.o(.ARM.exidx.text.osRtxPostProcess) refers to rtx_system.o(.text.osRtxPostProcess) for [Anonymous Symbol]
    rtx_system.o(.text.osRtxSysTimerSetup) refers to rtx_lib.o(.rodata) for osRtxConfig
    rtx_system.o(.text.osRtxSysTimerSetup) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_system.o(.ARM.exidx.text.osRtxSysTimerSetup) refers to rtx_system.o(.text.osRtxSysTimerSetup) for [Anonymous Symbol]
    rtx_system.o(.ARM.exidx.text.osRtxSysTimerEnable) refers to rtx_system.o(.text.osRtxSysTimerEnable) for [Anonymous Symbol]
    rtx_system.o(.ARM.exidx.text.osRtxSysTimerDisable) refers to rtx_system.o(.text.osRtxSysTimerDisable) for [Anonymous Symbol]
    rtx_system.o(.text.osRtxSysTimerGetCount) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_system.o(.ARM.exidx.text.osRtxSysTimerGetCount) refers to rtx_system.o(.text.osRtxSysTimerGetCount) for [Anonymous Symbol]
    rtx_system.o(.text.osRtxSysTimerGetFreq) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_system.o(.ARM.exidx.text.osRtxSysTimerGetFreq) refers to rtx_system.o(.text.osRtxSysTimerGetFreq) for [Anonymous Symbol]
    rt_memcpy_v6.o(.text) refers to rt_memcpy_w.o(.text) for __aeabi_memcpy4
    aeabi_memset4.o(.text) refers to rt_memclr_w.o(.text) for _memset_w
    rt_memclr.o(.text) refers to rt_memclr_w.o(.text) for _memset_w
    __main.o(!!!main) refers to __rtentry.o(.ARM.Collect$$rtentry$$00000000) for __rt_entry
    dfixu.o(x$fpl$dfixu) refers (Special) to usenofp.o(x$fpl$usenofp) for __I$use$fp
    dfixu.o(x$fpl$dfixu) refers to dnaninf.o(x$fpl$dnaninf) for __fpl_dnaninf
    dfixu.o(x$fpl$dfixur) refers (Special) to usenofp.o(x$fpl$usenofp) for __I$use$fp
    dfixu.o(x$fpl$dfixur) refers to dnaninf.o(x$fpl$dnaninf) for __fpl_dnaninf
    dmul.o(x$fpl$dmul) refers (Special) to usenofp.o(x$fpl$usenofp) for __I$use$fp
    dmul.o(x$fpl$dmul) refers to dretinf.o(x$fpl$dretinf) for __fpl_dretinf
    dmul.o(x$fpl$dmul) refers to dnaninf.o(x$fpl$dnaninf) for __fpl_dnaninf
    ffix.o(x$fpl$ffix) refers (Special) to usenofp.o(x$fpl$usenofp) for __I$use$fp
    ffix.o(x$fpl$ffix) refers to fnaninf.o(x$fpl$fnaninf) for __fpl_fnaninf
    ffix.o(x$fpl$ffixr) refers (Special) to usenofp.o(x$fpl$usenofp) for __I$use$fp
    ffix.o(x$fpl$ffixr) refers to fnaninf.o(x$fpl$fnaninf) for __fpl_fnaninf
    fflt_clz.o(x$fpl$ffltu) refers (Special) to usenofp.o(x$fpl$usenofp) for __I$use$fp
    fflt_clz.o(x$fpl$fflt) refers (Special) to usenofp.o(x$fpl$usenofp) for __I$use$fp
    fflt_clz.o(x$fpl$ffltn) refers (Special) to usenofp.o(x$fpl$usenofp) for __I$use$fp
    __rtentry.o(.ARM.Collect$$rtentry$$00000000) refers (Special) to __rtentry2.o(.ARM.Collect$$rtentry$$0000000A) for __rt_entry_li
    __rtentry.o(.ARM.Collect$$rtentry$$00000000) refers (Special) to __rtentry2.o(.ARM.Collect$$rtentry$$0000000D) for __rt_entry_main
    __rtentry.o(.ARM.Collect$$rtentry$$00000000) refers (Special) to __rtentry2.o(.ARM.Collect$$rtentry$$0000000C) for __rt_entry_postli_1
    __rtentry.o(.ARM.Collect$$rtentry$$00000000) refers (Special) to __rtentry2.o(.ARM.Collect$$rtentry$$00000008) for __rt_entry_postsh_1
    __rtentry.o(.ARM.Collect$$rtentry$$00000000) refers (Special) to __rtentry2.o(.ARM.Collect$$rtentry$$00000002) for __rt_entry_presh_1
    __rtentry.o(.ARM.Collect$$rtentry$$00000000) refers (Special) to __rtentry4.o(.ARM.Collect$$rtentry$$00000004) for __rt_entry_sh
    dnaninf.o(x$fpl$dnaninf) refers (Special) to usenofp.o(x$fpl$usenofp) for __I$use$fp
    dretinf.o(x$fpl$dretinf) refers (Special) to usenofp.o(x$fpl$usenofp) for __I$use$fp
    fnaninf.o(x$fpl$fnaninf) refers (Special) to usenofp.o(x$fpl$usenofp) for __I$use$fp
    __rtentry2.o(.ARM.Collect$$rtentry$$00000008) refers to rtx_lib.o(i._platform_post_stackheap_init) for _platform_post_stackheap_init
    __rtentry2.o(.ARM.Collect$$rtentry$$0000000A) refers to libinit.o(.ARM.Collect$$libinit$$00000000) for __rt_lib_init
    __rtentry2.o(.ARM.Collect$$rtentry$$0000000B) refers to boardinit3.o(.text) for _platform_post_lib_init
    __rtentry2.o(.ARM.Collect$$rtentry$$0000000D) refers to main.o(i.main) for main
    __rtentry2.o(.ARM.Collect$$rtentry$$0000000D) refers to exit.o(.text) for exit
    __rtentry2.o(.ARM.exidx) refers to __rtentry2.o(.ARM.Collect$$rtentry$$00000001) for .ARM.Collect$$rtentry$$00000001
    __rtentry2.o(.ARM.exidx) refers to __rtentry2.o(.ARM.Collect$$rtentry$$00000008) for .ARM.Collect$$rtentry$$00000008
    __rtentry2.o(.ARM.exidx) refers to __rtentry2.o(.ARM.Collect$$rtentry$$0000000A) for .ARM.Collect$$rtentry$$0000000A
    __rtentry2.o(.ARM.exidx) refers to __rtentry2.o(.ARM.Collect$$rtentry$$0000000B) for .ARM.Collect$$rtentry$$0000000B
    __rtentry2.o(.ARM.exidx) refers to __rtentry2.o(.ARM.Collect$$rtentry$$0000000D) for .ARM.Collect$$rtentry$$0000000D
    __rtentry4.o(.ARM.Collect$$rtentry$$00000004) refers to sys_stackheap_outer.o(.text) for __user_setup_stackheap
    __rtentry4.o(.ARM.exidx) refers to __rtentry4.o(.ARM.Collect$$rtentry$$00000004) for .ARM.Collect$$rtentry$$00000004
    sys_stackheap_outer.o(.text) refers to libspace.o(.text) for __user_perproc_libspace
    sys_stackheap_outer.o(.text) refers to startup_stm32f10x_cl.o(.text) for __user_initial_stackheap
    exit.o(.text) refers to rtexit.o(.ARM.Collect$$rtexit$$00000000) for __rt_exit
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$0000002E) for __rt_lib_init_alloca_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$0000002C) for __rt_lib_init_argv_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$0000001B) for __rt_lib_init_atexit_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000021) for __rt_lib_init_clock_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000032) for __rt_lib_init_cpp_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000030) for __rt_lib_init_exceptions_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000002) for __rt_lib_init_fp_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$0000001F) for __rt_lib_init_fp_trap_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000023) for __rt_lib_init_getenv_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$0000000A) for __rt_lib_init_heap_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000011) for __rt_lib_init_lc_collate_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000013) for __rt_lib_init_lc_ctype_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000015) for __rt_lib_init_lc_monetary_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000017) for __rt_lib_init_lc_numeric_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000019) for __rt_lib_init_lc_time_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000004) for __rt_lib_init_preinit_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$0000000E) for __rt_lib_init_rand_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000033) for __rt_lib_init_return
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$0000001D) for __rt_lib_init_signal_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000025) for __rt_lib_init_stdio_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$0000000C) for __rt_lib_init_user_alloc_1
    libspace.o(.text) refers to libspace.o(.bss) for __libspace_start
    rtexit.o(.ARM.Collect$$rtexit$$00000000) refers (Special) to rtexit2.o(.ARM.Collect$$rtexit$$00000004) for __rt_exit_exit
    rtexit.o(.ARM.Collect$$rtexit$$00000000) refers (Special) to rtexit2.o(.ARM.Collect$$rtexit$$00000003) for __rt_exit_ls
    rtexit.o(.ARM.Collect$$rtexit$$00000000) refers (Special) to rtexit2.o(.ARM.Collect$$rtexit$$00000002) for __rt_exit_prels_1
    rtexit.o(.ARM.exidx) refers (Special) to rtexit2.o(.ARM.Collect$$rtexit$$00000004) for __rt_exit_exit
    rtexit.o(.ARM.exidx) refers (Special) to rtexit2.o(.ARM.Collect$$rtexit$$00000003) for __rt_exit_ls
    rtexit.o(.ARM.exidx) refers (Special) to rtexit2.o(.ARM.Collect$$rtexit$$00000002) for __rt_exit_prels_1
    rtexit.o(.ARM.exidx) refers to rtexit.o(.ARM.Collect$$rtexit$$00000000) for .ARM.Collect$$rtexit$$00000000
    libinit2.o(.ARM.Collect$$libinit$$00000010) refers to libinit2.o(.ARM.Collect$$libinit$$0000000F) for .ARM.Collect$$libinit$$0000000F
    libinit2.o(.ARM.Collect$$libinit$$00000012) refers to libinit2.o(.ARM.Collect$$libinit$$0000000F) for .ARM.Collect$$libinit$$0000000F
    libinit2.o(.ARM.Collect$$libinit$$00000014) refers to libinit2.o(.ARM.Collect$$libinit$$0000000F) for .ARM.Collect$$libinit$$0000000F
    libinit2.o(.ARM.Collect$$libinit$$00000016) refers to libinit2.o(.ARM.Collect$$libinit$$0000000F) for .ARM.Collect$$libinit$$0000000F
    libinit2.o(.ARM.Collect$$libinit$$00000018) refers to libinit2.o(.ARM.Collect$$libinit$$0000000F) for .ARM.Collect$$libinit$$0000000F
    libinit2.o(.ARM.Collect$$libinit$$00000026) refers to argv_veneer.o(.emb_text) for __ARM_argv_veneer
    libinit2.o(.ARM.Collect$$libinit$$00000027) refers to argv_veneer.o(.emb_text) for __ARM_argv_veneer
    rtexit2.o(.ARM.Collect$$rtexit$$00000003) refers to libshutdown.o(.ARM.Collect$$libshutdown$$00000000) for __rt_lib_shutdown
    rtexit2.o(.ARM.Collect$$rtexit$$00000004) refers to sys_exit.o(.text) for _sys_exit
    rtexit2.o(.ARM.exidx) refers to rtexit2.o(.ARM.Collect$$rtexit$$00000001) for .ARM.Collect$$rtexit$$00000001
    rtexit2.o(.ARM.exidx) refers to rtexit2.o(.ARM.Collect$$rtexit$$00000003) for .ARM.Collect$$rtexit$$00000003
    rtexit2.o(.ARM.exidx) refers to rtexit2.o(.ARM.Collect$$rtexit$$00000004) for .ARM.Collect$$rtexit$$00000004
    argv_veneer.o(.emb_text) refers to no_argv.o(.text) for __ARM_get_argv
    sys_exit.o(.text) refers (Special) to use_no_semi.o(.text) for __I$use$semihosting
    sys_exit.o(.text) refers (Special) to indicate_semi.o(.text) for __semihosting_library_function
    _get_argv_nomalloc.o(.text) refers (Special) to hrguard.o(.text) for __heap_region$guard
    _get_argv_nomalloc.o(.text) refers to defsig_rtmem_outer.o(.text) for __rt_SIGRTMEM
    _get_argv_nomalloc.o(.text) refers to sys_command.o(.text) for _sys_command_string
    libshutdown.o(.ARM.Collect$$libshutdown$$00000000) refers (Special) to libshutdown2.o(.ARM.Collect$$libshutdown$$00000002) for __rt_lib_shutdown_cpp_1
    libshutdown.o(.ARM.Collect$$libshutdown$$00000000) refers (Special) to libshutdown2.o(.ARM.Collect$$libshutdown$$00000007) for __rt_lib_shutdown_fp_trap_1
    libshutdown.o(.ARM.Collect$$libshutdown$$00000000) refers (Special) to libshutdown2.o(.ARM.Collect$$libshutdown$$0000000F) for __rt_lib_shutdown_heap_1
    libshutdown.o(.ARM.Collect$$libshutdown$$00000000) refers (Special) to libshutdown2.o(.ARM.Collect$$libshutdown$$00000010) for __rt_lib_shutdown_return
    libshutdown.o(.ARM.Collect$$libshutdown$$00000000) refers (Special) to libshutdown2.o(.ARM.Collect$$libshutdown$$0000000A) for __rt_lib_shutdown_signal_1
    libshutdown.o(.ARM.Collect$$libshutdown$$00000000) refers (Special) to libshutdown2.o(.ARM.Collect$$libshutdown$$00000004) for __rt_lib_shutdown_stdio_1
    libshutdown.o(.ARM.Collect$$libshutdown$$00000000) refers (Special) to libshutdown2.o(.ARM.Collect$$libshutdown$$0000000C) for __rt_lib_shutdown_user_alloc_1
    sys_command.o(.text) refers (Special) to use_no_semi.o(.text) for __I$use$semihosting
    sys_command.o(.text) refers (Special) to indicate_semi.o(.text) for __semihosting_library_function
    defsig_rtmem_outer.o(.text) refers to defsig_rtmem_inner.o(.text) for __rt_SIGRTMEM_inner
    defsig_rtmem_outer.o(.text) refers to defsig_exit.o(.text) for __sig_exit
    defsig_rtmem_formal.o(.text) refers to rt_raise.o(.text) for __rt_raise
    rt_raise.o(.text) refers to __raise.o(.text) for __raise
    rt_raise.o(.text) refers to sys_exit.o(.text) for _sys_exit
    defsig_exit.o(.text) refers to sys_exit.o(.text) for _sys_exit
    defsig_rtmem_inner.o(.text) refers to defsig_general.o(.text) for __default_signal_display
    __raise.o(.text) refers to defsig.o(CL$$defsig) for __default_signal_handler
    defsig_general.o(.text) refers to sys_wrch.o(.text) for _ttywrch
    sys_wrch.o(.text) refers (Special) to use_no_semi.o(.text) for __I$use$semihosting
    sys_wrch.o(.text) refers (Special) to indicate_semi.o(.text) for __semihosting_library_function
    defsig.o(CL$$defsig) refers to defsig_rtmem_inner.o(.text) for __rt_SIGRTMEM_inner
    defsig_abrt_inner.o(.text) refers to defsig_general.o(.text) for __default_signal_display
    defsig_fpe_inner.o(.text) refers to defsig_general.o(.text) for __default_signal_display
    defsig_rtred_inner.o(.text) refers to defsig_general.o(.text) for __default_signal_display
    defsig_stak_inner.o(.text) refers to defsig_general.o(.text) for __default_signal_display
    defsig_pvfn_inner.o(.text) refers to defsig_general.o(.text) for __default_signal_display
    defsig_cppl_inner.o(.text) refers to defsig_general.o(.text) for __default_signal_display
    defsig_segv_inner.o(.text) refers to defsig_general.o(.text) for __default_signal_display
    defsig_other.o(.text) refers to defsig_general.o(.text) for __default_signal_display


==============================================================================

Removing Unused input sections from the image.

    Removing svvis_cortex.o(.rev16_text), (4 bytes).
    Removing svvis_cortex.o(.revsh_text), (4 bytes).
    Removing svvis_cortex.o(.rrx_text), (6 bytes).
    Removing svvis_cortex.o(i._ZN13SvVis3_data_t9apply_msgER16SvVis3_message_t), (210 bytes).
    Removing svvis_cortex.o(i._ZN8SvVis3_t10send_floatEhf), (40 bytes).
    Removing svvis_cortex.o(i._ZN8SvVis3_t8send_i16Ehs), (42 bytes).
    Removing svvis_cortex.o(i._ZN8SvVis3_t8send_i32Ehi), (38 bytes).
    Removing svvis_cortex.o(.ARM.exidx), (8 bytes).
    Removing svvis_cortex.o(.ARM.exidx), (8 bytes).
    Removing svvis_cortex.o(.ARM.exidx), (8 bytes).
    Removing svvis_cortex.o(.ARM.exidx), (8 bytes).
    Removing svvis_cortex.o(.ARM.exidx), (8 bytes).
    Removing svvis_cortex.o(.ARM.exidx), (8 bytes).
    Removing svvis_cortex.o(.ARM.exidx), (8 bytes).
    Removing svvis_cortex.o(.ARM.exidx), (8 bytes).
    Removing svvis_cortex.o(.ARM.exidx), (8 bytes).
    Removing svvis_cortex.o(.ARM.exidx), (8 bytes).
    Removing svvis_cortex.o(.ARM.exidx), (8 bytes).
    Removing main.o(.rev16_text), (4 bytes).
    Removing main.o(.revsh_text), (4 bytes).
    Removing main.o(.rrx_text), (6 bytes).
    Removing main.o(.ARM.exidx), (8 bytes).
    Removing main.o(.ARM.exidx), (8 bytes).
    Removing main.o(.ARM.exidx), (8 bytes).
    Removing svvis_cortex_threads.o(.rev16_text), (4 bytes).
    Removing svvis_cortex_threads.o(.revsh_text), (4 bytes).
    Removing svvis_cortex_threads.o(.rrx_text), (6 bytes).
    Removing svvis_cortex_threads.o(.ARM.exidx), (8 bytes).
    Removing svvis_cortex_threads.o(.ARM.exidx), (8 bytes).
    Removing svvis_cortex_threads.o(.ARM.exidx), (8 bytes).
    Removing svvis_cortex_threads.o(.ARM.exidx), (8 bytes).
    Removing svvis_cortex_threads.o(.ARM.exidx), (8 bytes).
    Removing svvis_cortex_threads.o(.ARM.exidx), (8 bytes).
    Removing led_driver.o(.rev16_text), (4 bytes).
    Removing led_driver.o(.revsh_text), (4 bytes).
    Removing led_driver.o(.rrx_text), (6 bytes).
    Removing motor_driver.o(.rev16_text), (4 bytes).
    Removing motor_driver.o(.revsh_text), (4 bytes).
    Removing motor_driver.o(.rrx_text), (6 bytes).
    Removing motor_driver.o(.constdata), (4 bytes).
    Removing rtx_lib.o(.rev16_text), (4 bytes).
    Removing rtx_lib.o(.revsh_text), (4 bytes).
    Removing rtx_lib.o(.rrx_text), (6 bytes).
    Removing rtx_lib.o(i.__user_perthread_libspace), (112 bytes).
    Removing rtx_config.o(.rev16_text), (4 bytes).
    Removing rtx_config.o(.revsh_text), (4 bytes).
    Removing rtx_config.o(.rrx_text), (6 bytes).
    Removing misc.o(.rev16_text), (4 bytes).
    Removing misc.o(.revsh_text), (4 bytes).
    Removing misc.o(.rrx_text), (6 bytes).
    Removing misc.o(i.NVIC_PriorityGroupConfig), (20 bytes).
    Removing misc.o(i.NVIC_SetVectorTable), (20 bytes).
    Removing misc.o(i.NVIC_SystemLPConfig), (32 bytes).
    Removing misc.o(i.SysTick_CLKSourceConfig), (40 bytes).
    Removing stm32f10x_gpio.o(.rev16_text), (4 bytes).
    Removing stm32f10x_gpio.o(.revsh_text), (4 bytes).
    Removing stm32f10x_gpio.o(.rrx_text), (6 bytes).
    Removing stm32f10x_gpio.o(i.GPIO_AFIODeInit), (20 bytes).
    Removing stm32f10x_gpio.o(i.GPIO_DeInit), (200 bytes).
    Removing stm32f10x_gpio.o(i.GPIO_ETH_MediaInterfaceConfig), (12 bytes).
    Removing stm32f10x_gpio.o(i.GPIO_EXTILineConfig), (64 bytes).
    Removing stm32f10x_gpio.o(i.GPIO_EventOutputCmd), (12 bytes).
    Removing stm32f10x_gpio.o(i.GPIO_EventOutputConfig), (32 bytes).
    Removing stm32f10x_gpio.o(i.GPIO_PinLockConfig), (18 bytes).
    Removing stm32f10x_gpio.o(i.GPIO_PinRemapConfig), (144 bytes).
    Removing stm32f10x_gpio.o(i.GPIO_ReadInputData), (8 bytes).
    Removing stm32f10x_gpio.o(i.GPIO_ReadInputDataBit), (18 bytes).
    Removing stm32f10x_gpio.o(i.GPIO_ReadOutputData), (8 bytes).
    Removing stm32f10x_gpio.o(i.GPIO_ReadOutputDataBit), (18 bytes).
    Removing stm32f10x_gpio.o(i.GPIO_StructInit), (16 bytes).
    Removing stm32f10x_gpio.o(i.GPIO_Write), (4 bytes).
    Removing stm32f10x_rcc.o(.rev16_text), (4 bytes).
    Removing stm32f10x_rcc.o(.revsh_text), (4 bytes).
    Removing stm32f10x_rcc.o(.rrx_text), (6 bytes).
    Removing stm32f10x_rcc.o(i.RCC_ADCCLKConfig), (24 bytes).
    Removing stm32f10x_rcc.o(i.RCC_AHBPeriphClockCmd), (32 bytes).
    Removing stm32f10x_rcc.o(i.RCC_AHBPeriphResetCmd), (32 bytes).
    Removing stm32f10x_rcc.o(i.RCC_AdjustHSICalibrationValue), (24 bytes).
    Removing stm32f10x_rcc.o(i.RCC_BackupResetCmd), (12 bytes).
    Removing stm32f10x_rcc.o(i.RCC_ClearFlag), (20 bytes).
    Removing stm32f10x_rcc.o(i.RCC_ClearITPendingBit), (12 bytes).
    Removing stm32f10x_rcc.o(i.RCC_ClockSecuritySystemCmd), (12 bytes).
    Removing stm32f10x_rcc.o(i.RCC_DeInit), (92 bytes).
    Removing stm32f10x_rcc.o(i.RCC_GetFlagStatus), (60 bytes).
    Removing stm32f10x_rcc.o(i.RCC_GetITStatus), (24 bytes).
    Removing stm32f10x_rcc.o(i.RCC_GetSYSCLKSource), (16 bytes).
    Removing stm32f10x_rcc.o(i.RCC_HCLKConfig), (24 bytes).
    Removing stm32f10x_rcc.o(i.RCC_HSEConfig), (76 bytes).
    Removing stm32f10x_rcc.o(i.RCC_HSICmd), (12 bytes).
    Removing stm32f10x_rcc.o(i.RCC_I2S2CLKConfig), (12 bytes).
    Removing stm32f10x_rcc.o(i.RCC_I2S3CLKConfig), (12 bytes).
    Removing stm32f10x_rcc.o(i.RCC_ITConfig), (32 bytes).
    Removing stm32f10x_rcc.o(i.RCC_LSEConfig), (52 bytes).
    Removing stm32f10x_rcc.o(i.RCC_LSICmd), (12 bytes).
    Removing stm32f10x_rcc.o(i.RCC_MCOConfig), (12 bytes).
    Removing stm32f10x_rcc.o(i.RCC_OTGFSCLKConfig), (12 bytes).
    Removing stm32f10x_rcc.o(i.RCC_PCLK1Config), (24 bytes).
    Removing stm32f10x_rcc.o(i.RCC_PCLK2Config), (24 bytes).
    Removing stm32f10x_rcc.o(i.RCC_PLL2Cmd), (12 bytes).
    Removing stm32f10x_rcc.o(i.RCC_PLL2Config), (24 bytes).
    Removing stm32f10x_rcc.o(i.RCC_PLL3Cmd), (12 bytes).
    Removing stm32f10x_rcc.o(i.RCC_PLL3Config), (24 bytes).
    Removing stm32f10x_rcc.o(i.RCC_PLLCmd), (12 bytes).
    Removing stm32f10x_rcc.o(i.RCC_PLLConfig), (28 bytes).
    Removing stm32f10x_rcc.o(i.RCC_PREDIV1Config), (32 bytes).
    Removing stm32f10x_rcc.o(i.RCC_PREDIV2Config), (24 bytes).
    Removing stm32f10x_rcc.o(i.RCC_RTCCLKCmd), (12 bytes).
    Removing stm32f10x_rcc.o(i.RCC_RTCCLKConfig), (16 bytes).
    Removing stm32f10x_rcc.o(i.RCC_SYSCLKConfig), (24 bytes).
    Removing stm32f10x_rcc.o(i.RCC_WaitForHSEStartUp), (56 bytes).
    Removing stm32f10x_usart.o(.rev16_text), (4 bytes).
    Removing stm32f10x_usart.o(.revsh_text), (4 bytes).
    Removing stm32f10x_usart.o(.rrx_text), (6 bytes).
    Removing stm32f10x_usart.o(i.USART_ClearFlag), (18 bytes).
    Removing stm32f10x_usart.o(i.USART_ClearITPendingBit), (30 bytes).
    Removing stm32f10x_usart.o(i.USART_ClockStructInit), (12 bytes).
    Removing stm32f10x_usart.o(i.USART_DMACmd), (18 bytes).
    Removing stm32f10x_usart.o(i.USART_GetITStatus), (84 bytes).
    Removing stm32f10x_usart.o(i.USART_HalfDuplexCmd), (24 bytes).
    Removing stm32f10x_usart.o(i.USART_IrDACmd), (24 bytes).
    Removing stm32f10x_usart.o(i.USART_IrDAConfig), (18 bytes).
    Removing stm32f10x_usart.o(i.USART_LINBreakDetectLengthConfig), (18 bytes).
    Removing stm32f10x_usart.o(i.USART_LINCmd), (24 bytes).
    Removing stm32f10x_usart.o(i.USART_OneBitMethodCmd), (24 bytes).
    Removing stm32f10x_usart.o(i.USART_OverSampling8Cmd), (22 bytes).
    Removing stm32f10x_usart.o(i.USART_ReceiverWakeUpCmd), (24 bytes).
    Removing stm32f10x_usart.o(i.USART_SendBreak), (10 bytes).
    Removing stm32f10x_usart.o(i.USART_SetAddress), (18 bytes).
    Removing stm32f10x_usart.o(i.USART_SetGuardTime), (16 bytes).
    Removing stm32f10x_usart.o(i.USART_SetPrescaler), (16 bytes).
    Removing stm32f10x_usart.o(i.USART_SmartCardCmd), (24 bytes).
    Removing stm32f10x_usart.o(i.USART_SmartCardNACKCmd), (24 bytes).
    Removing stm32f10x_usart.o(i.USART_StructInit), (24 bytes).
    Removing stm32f10x_usart.o(i.USART_WakeUpConfig), (18 bytes).
    Removing system_stm32f10x.o(.rev16_text), (4 bytes).
    Removing system_stm32f10x.o(.revsh_text), (4 bytes).
    Removing system_stm32f10x.o(.rrx_text), (6 bytes).
    Removing rtx_kernel.o(.text), (0 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.svcRtxKernelInitialize), (8 bytes).
    Removing rtx_kernel.o(.text.svcRtxKernelGetInfo), (66 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.svcRtxKernelGetInfo), (8 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.svcRtxKernelGetState), (8 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.svcRtxKernelStart), (8 bytes).
    Removing rtx_kernel.o(.text.svcRtxKernelLock), (36 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.svcRtxKernelLock), (8 bytes).
    Removing rtx_kernel.o(.text.svcRtxKernelUnlock), (36 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.svcRtxKernelUnlock), (8 bytes).
    Removing rtx_kernel.o(.text.svcRtxKernelRestoreLock), (46 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.svcRtxKernelRestoreLock), (8 bytes).
    Removing rtx_kernel.o(.text.svcRtxKernelSuspend), (134 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.svcRtxKernelSuspend), (8 bytes).
    Removing rtx_kernel.o(.text.svcRtxKernelResume), (226 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.svcRtxKernelResume), (8 bytes).
    Removing rtx_kernel.o(.text.svcRtxKernelGetTickCount), (14 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.svcRtxKernelGetTickCount), (8 bytes).
    Removing rtx_kernel.o(.text.svcRtxKernelGetTickFreq), (12 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.svcRtxKernelGetTickFreq), (8 bytes).
    Removing rtx_kernel.o(.text.svcRtxKernelGetSysTimerCount), (4 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.svcRtxKernelGetSysTimerCount), (8 bytes).
    Removing rtx_kernel.o(.text.svcRtxKernelGetSysTimerFreq), (4 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.svcRtxKernelGetSysTimerFreq), (8 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.osKernelInitialize), (8 bytes).
    Removing rtx_kernel.o(.text.osKernelGetInfo), (112 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.osKernelGetInfo), (8 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.osKernelGetState), (8 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.osKernelStart), (8 bytes).
    Removing rtx_kernel.o(.text.osKernelLock), (36 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.osKernelLock), (8 bytes).
    Removing rtx_kernel.o(.text.osKernelUnlock), (36 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.osKernelUnlock), (8 bytes).
    Removing rtx_kernel.o(.text.osKernelRestoreLock), (36 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.osKernelRestoreLock), (8 bytes).
    Removing rtx_kernel.o(.text.osKernelSuspend), (34 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.osKernelSuspend), (8 bytes).
    Removing rtx_kernel.o(.text.osKernelResume), (34 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.osKernelResume), (8 bytes).
    Removing rtx_kernel.o(.text.osKernelGetTickCount), (36 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.osKernelGetTickCount), (8 bytes).
    Removing rtx_kernel.o(.text.osKernelGetTickFreq), (34 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.osKernelGetTickFreq), (8 bytes).
    Removing rtx_kernel.o(.text.osKernelGetSysTimerCount), (40 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.osKernelGetSysTimerCount), (8 bytes).
    Removing rtx_kernel.o(.text.osKernelGetSysTimerFreq), (40 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.osKernelGetSysTimerFreq), (8 bytes).
    Removing rtx_kernel.o(.data.irqRtxLibRef), (4 bytes).
    Removing rtx_thread.o(.text), (0 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osRtxThreadListPut), (8 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osRtxThreadListGet), (8 bytes).
    Removing rtx_thread.o(.text.osRtxThreadListRoot), (26 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osRtxThreadListRoot), (8 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osRtxThreadListSort), (8 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osRtxThreadListRemove), (8 bytes).
    Removing rtx_thread.o(.text.osRtxThreadListUnlink), (26 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osRtxThreadListUnlink), (8 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osRtxThreadReadyPut), (8 bytes).
    Removing rtx_thread.o(.text.osRtxThreadDelayInsert), (160 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osRtxThreadDelayInsert), (8 bytes).
    Removing rtx_thread.o(.text.osRtxThreadDelayRemove), (118 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osRtxThreadDelayRemove), (8 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osRtxThreadDelayTick), (8 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osRtxThreadRegPtr), (8 bytes).
    Removing rtx_thread.o(.text.osRtxThreadBlock), (70 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osRtxThreadBlock), (8 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osRtxThreadSwitch), (8 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osRtxThreadStackCheck), (8 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osRtxThreadDispatch), (8 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osRtxThreadWaitExit), (8 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osRtxThreadWaitEnter), (8 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osRtxThreadPostProcess), (8 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.svcRtxThreadNew), (8 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osThreadExit), (8 bytes).
    Removing rtx_thread.o(.text.svcRtxThreadGetName), (22 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.svcRtxThreadGetName), (8 bytes).
    Removing rtx_thread.o(.text.svcRtxThreadGetId), (12 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.svcRtxThreadGetId), (8 bytes).
    Removing rtx_thread.o(.text.svcRtxThreadGetState), (22 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.svcRtxThreadGetState), (8 bytes).
    Removing rtx_thread.o(.text.svcRtxThreadGetStackSize), (22 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.svcRtxThreadGetStackSize), (8 bytes).
    Removing rtx_thread.o(.text.svcRtxThreadGetStackSpace), (74 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.svcRtxThreadGetStackSpace), (8 bytes).
    Removing rtx_thread.o(.text.svcRtxThreadSetPriority), (324 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.svcRtxThreadSetPriority), (8 bytes).
    Removing rtx_thread.o(.text.svcRtxThreadGetPriority), (30 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.svcRtxThreadGetPriority), (8 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.svcRtxThreadYield), (8 bytes).
    Removing rtx_thread.o(.text.svcRtxThreadSuspend), (330 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.svcRtxThreadSuspend), (8 bytes).
    Removing rtx_thread.o(.text.svcRtxThreadResume), (170 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.svcRtxThreadResume), (8 bytes).
    Removing rtx_thread.o(.text.svcRtxThreadDetach), (186 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.svcRtxThreadDetach), (8 bytes).
    Removing rtx_thread.o(.text.svcRtxThreadJoin), (336 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.svcRtxThreadJoin), (8 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.svcRtxThreadExit), (8 bytes).
    Removing rtx_thread.o(.text.svcRtxThreadTerminate), (664 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.svcRtxThreadTerminate), (8 bytes).
    Removing rtx_thread.o(.text.svcRtxThreadGetCount), (54 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.svcRtxThreadGetCount), (8 bytes).
    Removing rtx_thread.o(.text.svcRtxThreadEnumerate), (112 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.svcRtxThreadEnumerate), (8 bytes).
    Removing rtx_thread.o(.text.svcRtxThreadFlagsSet), (486 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.svcRtxThreadFlagsSet), (8 bytes).
    Removing rtx_thread.o(.text.svcRtxThreadFlagsClear), (82 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.svcRtxThreadFlagsClear), (8 bytes).
    Removing rtx_thread.o(.text.svcRtxThreadFlagsGet), (30 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.svcRtxThreadFlagsGet), (8 bytes).
    Removing rtx_thread.o(.text.svcRtxThreadFlagsWait), (194 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.svcRtxThreadFlagsWait), (8 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osThreadNew), (8 bytes).
    Removing rtx_thread.o(.text.osThreadGetName), (34 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osThreadGetName), (8 bytes).
    Removing rtx_thread.o(.text.osThreadGetId), (34 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osThreadGetId), (8 bytes).
    Removing rtx_thread.o(.text.osThreadGetState), (36 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osThreadGetState), (8 bytes).
    Removing rtx_thread.o(.text.osThreadGetStackSize), (34 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osThreadGetStackSize), (8 bytes).
    Removing rtx_thread.o(.text.osThreadGetStackSpace), (34 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osThreadGetStackSpace), (8 bytes).
    Removing rtx_thread.o(.text.osThreadSetPriority), (36 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osThreadSetPriority), (8 bytes).
    Removing rtx_thread.o(.text.osThreadGetPriority), (36 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osThreadGetPriority), (8 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osThreadYield), (8 bytes).
    Removing rtx_thread.o(.text.osThreadSuspend), (36 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osThreadSuspend), (8 bytes).
    Removing rtx_thread.o(.text.osThreadResume), (36 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osThreadResume), (8 bytes).
    Removing rtx_thread.o(.text.osThreadDetach), (36 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osThreadDetach), (8 bytes).
    Removing rtx_thread.o(.text.osThreadJoin), (36 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osThreadJoin), (8 bytes).
    Removing rtx_thread.o(.text.osThreadTerminate), (36 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osThreadTerminate), (8 bytes).
    Removing rtx_thread.o(.text.osThreadGetCount), (34 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osThreadGetCount), (8 bytes).
    Removing rtx_thread.o(.text.osThreadEnumerate), (34 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osThreadEnumerate), (8 bytes).
    Removing rtx_thread.o(.text.osThreadFlagsSet), (94 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osThreadFlagsSet), (8 bytes).
    Removing rtx_thread.o(.text.osThreadFlagsClear), (36 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osThreadFlagsClear), (8 bytes).
    Removing rtx_thread.o(.text.osThreadFlagsGet), (34 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osThreadFlagsGet), (8 bytes).
    Removing rtx_thread.o(.text.osThreadFlagsWait), (36 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osThreadFlagsWait), (8 bytes).
    Removing rtx_delay.o(.text), (0 bytes).
    Removing rtx_delay.o(.ARM.exidx.text.svcRtxDelay), (8 bytes).
    Removing rtx_delay.o(.text.svcRtxDelayUntil), (58 bytes).
    Removing rtx_delay.o(.ARM.exidx.text.svcRtxDelayUntil), (8 bytes).
    Removing rtx_delay.o(.ARM.exidx.text.osDelay), (8 bytes).
    Removing rtx_delay.o(.text.osDelayUntil), (36 bytes).
    Removing rtx_delay.o(.ARM.exidx.text.osDelayUntil), (8 bytes).
    Removing rtx_mutex.o(.text), (0 bytes).
    Removing rtx_mutex.o(.ARM.exidx.text.osRtxMutexOwnerRelease), (8 bytes).
    Removing rtx_mutex.o(.ARM.exidx.text.svcRtxMutexNew), (8 bytes).
    Removing rtx_mutex.o(.text.svcRtxMutexGetName), (22 bytes).
    Removing rtx_mutex.o(.ARM.exidx.text.svcRtxMutexGetName), (8 bytes).
    Removing rtx_mutex.o(.ARM.exidx.text.svcRtxMutexAcquire), (8 bytes).
    Removing rtx_mutex.o(.ARM.exidx.text.svcRtxMutexRelease), (8 bytes).
    Removing rtx_mutex.o(.text.svcRtxMutexGetOwner), (28 bytes).
    Removing rtx_mutex.o(.ARM.exidx.text.svcRtxMutexGetOwner), (8 bytes).
    Removing rtx_mutex.o(.ARM.exidx.text.svcRtxMutexDelete), (8 bytes).
    Removing rtx_mutex.o(.ARM.exidx.text.osMutexNew), (8 bytes).
    Removing rtx_mutex.o(.text.osMutexGetName), (34 bytes).
    Removing rtx_mutex.o(.ARM.exidx.text.osMutexGetName), (8 bytes).
    Removing rtx_mutex.o(.ARM.exidx.text.osMutexAcquire), (8 bytes).
    Removing rtx_mutex.o(.ARM.exidx.text.osMutexRelease), (8 bytes).
    Removing rtx_mutex.o(.text.osMutexGetOwner), (34 bytes).
    Removing rtx_mutex.o(.ARM.exidx.text.osMutexGetOwner), (8 bytes).
    Removing rtx_mutex.o(.ARM.exidx.text.osMutexDelete), (8 bytes).
    Removing rtx_msgqueue.o(.text), (0 bytes).
    Removing rtx_msgqueue.o(.ARM.exidx.text.osRtxMessageQueuePostProcess), (8 bytes).
    Removing rtx_msgqueue.o(.ARM.exidx.text.svcRtxMessageQueueNew), (8 bytes).
    Removing rtx_msgqueue.o(.text.svcRtxMessageQueueGetName), (22 bytes).
    Removing rtx_msgqueue.o(.ARM.exidx.text.svcRtxMessageQueueGetName), (8 bytes).
    Removing rtx_msgqueue.o(.ARM.exidx.text.svcRtxMessageQueuePut), (8 bytes).
    Removing rtx_msgqueue.o(.ARM.exidx.text.svcRtxMessageQueueGet), (8 bytes).
    Removing rtx_msgqueue.o(.text.svcRtxMessageQueueGetCapacity), (22 bytes).
    Removing rtx_msgqueue.o(.ARM.exidx.text.svcRtxMessageQueueGetCapacity), (8 bytes).
    Removing rtx_msgqueue.o(.text.svcRtxMessageQueueGetMsgSize), (22 bytes).
    Removing rtx_msgqueue.o(.ARM.exidx.text.svcRtxMessageQueueGetMsgSize), (8 bytes).
    Removing rtx_msgqueue.o(.text.svcRtxMessageQueueGetCount), (22 bytes).
    Removing rtx_msgqueue.o(.ARM.exidx.text.svcRtxMessageQueueGetCount), (8 bytes).
    Removing rtx_msgqueue.o(.ARM.exidx.text.svcRtxMessageQueueGetSpace), (8 bytes).
    Removing rtx_msgqueue.o(.text.svcRtxMessageQueueReset), (394 bytes).
    Removing rtx_msgqueue.o(.ARM.exidx.text.svcRtxMessageQueueReset), (8 bytes).
    Removing rtx_msgqueue.o(.text.svcRtxMessageQueueDelete), (142 bytes).
    Removing rtx_msgqueue.o(.ARM.exidx.text.svcRtxMessageQueueDelete), (8 bytes).
    Removing rtx_msgqueue.o(.ARM.exidx.text.osMessageQueueNew), (8 bytes).
    Removing rtx_msgqueue.o(.text.osMessageQueueGetName), (34 bytes).
    Removing rtx_msgqueue.o(.ARM.exidx.text.osMessageQueueGetName), (8 bytes).
    Removing rtx_msgqueue.o(.ARM.exidx.text.osMessageQueuePut), (8 bytes).
    Removing rtx_msgqueue.o(.ARM.exidx.text.osMessageQueueGet), (8 bytes).
    Removing rtx_msgqueue.o(.text.osMessageQueueGetCapacity), (52 bytes).
    Removing rtx_msgqueue.o(.ARM.exidx.text.osMessageQueueGetCapacity), (8 bytes).
    Removing rtx_msgqueue.o(.text.osMessageQueueGetMsgSize), (52 bytes).
    Removing rtx_msgqueue.o(.ARM.exidx.text.osMessageQueueGetMsgSize), (8 bytes).
    Removing rtx_msgqueue.o(.text.osMessageQueueGetCount), (52 bytes).
    Removing rtx_msgqueue.o(.ARM.exidx.text.osMessageQueueGetCount), (8 bytes).
    Removing rtx_msgqueue.o(.ARM.exidx.text.osMessageQueueGetSpace), (8 bytes).
    Removing rtx_msgqueue.o(.text.osMessageQueueReset), (36 bytes).
    Removing rtx_msgqueue.o(.ARM.exidx.text.osMessageQueueReset), (8 bytes).
    Removing rtx_msgqueue.o(.text.osMessageQueueDelete), (36 bytes).
    Removing rtx_msgqueue.o(.ARM.exidx.text.osMessageQueueDelete), (8 bytes).
    Removing rtx_timer.o(.text), (0 bytes).
    Removing rtx_timer.o(.ARM.exidx.text.osRtxTimerTick), (8 bytes).
    Removing rtx_timer.o(.text.osRtxTimerThread), (42 bytes).
    Removing rtx_timer.o(.ARM.exidx.text.osRtxTimerThread), (8 bytes).
    Removing rtx_timer.o(.text.svcRtxTimerNew), (216 bytes).
    Removing rtx_timer.o(.ARM.exidx.text.svcRtxTimerNew), (8 bytes).
    Removing rtx_timer.o(.text.svcRtxTimerGetName), (22 bytes).
    Removing rtx_timer.o(.ARM.exidx.text.svcRtxTimerGetName), (8 bytes).
    Removing rtx_timer.o(.text.svcRtxTimerStart), (184 bytes).
    Removing rtx_timer.o(.ARM.exidx.text.svcRtxTimerStart), (8 bytes).
    Removing rtx_timer.o(.text.svcRtxTimerStop), (82 bytes).
    Removing rtx_timer.o(.ARM.exidx.text.svcRtxTimerStop), (8 bytes).
    Removing rtx_timer.o(.text.svcRtxTimerIsRunning), (24 bytes).
    Removing rtx_timer.o(.ARM.exidx.text.svcRtxTimerIsRunning), (8 bytes).
    Removing rtx_timer.o(.text.svcRtxTimerDelete), (132 bytes).
    Removing rtx_timer.o(.ARM.exidx.text.svcRtxTimerDelete), (8 bytes).
    Removing rtx_timer.o(.text.osTimerNew), (72 bytes).
    Removing rtx_timer.o(.ARM.exidx.text.osTimerNew), (8 bytes).
    Removing rtx_timer.o(.text.osTimerGetName), (34 bytes).
    Removing rtx_timer.o(.ARM.exidx.text.osTimerGetName), (8 bytes).
    Removing rtx_timer.o(.text.osTimerStart), (36 bytes).
    Removing rtx_timer.o(.ARM.exidx.text.osTimerStart), (8 bytes).
    Removing rtx_timer.o(.text.osTimerStop), (36 bytes).
    Removing rtx_timer.o(.ARM.exidx.text.osTimerStop), (8 bytes).
    Removing rtx_timer.o(.text.osTimerIsRunning), (34 bytes).
    Removing rtx_timer.o(.ARM.exidx.text.osTimerIsRunning), (8 bytes).
    Removing rtx_timer.o(.text.osTimerDelete), (36 bytes).
    Removing rtx_timer.o(.ARM.exidx.text.osTimerDelete), (8 bytes).
    Removing rtx_memory.o(.text), (0 bytes).
    Removing rtx_memory.o(.ARM.exidx.text.osRtxMemoryInit), (8 bytes).
    Removing rtx_memory.o(.ARM.exidx.text.osRtxMemoryAlloc), (8 bytes).
    Removing rtx_memory.o(.ARM.exidx.text.osRtxMemoryFree), (8 bytes).
    Removing rtx_mempool.o(.text), (0 bytes).
    Removing rtx_mempool.o(.ARM.exidx.text.osRtxMemoryPoolInit), (8 bytes).
    Removing rtx_mempool.o(.ARM.exidx.text.osRtxMemoryPoolAlloc), (8 bytes).
    Removing rtx_mempool.o(.ARM.exidx.text.osRtxMemoryPoolFree), (8 bytes).
    Removing rtx_mempool.o(.text.osRtxMemoryPoolPostProcess), (98 bytes).
    Removing rtx_mempool.o(.ARM.exidx.text.osRtxMemoryPoolPostProcess), (8 bytes).
    Removing rtx_mempool.o(.text.svcRtxMemoryPoolNew), (508 bytes).
    Removing rtx_mempool.o(.ARM.exidx.text.svcRtxMemoryPoolNew), (8 bytes).
    Removing rtx_mempool.o(.text.svcRtxMemoryPoolGetName), (22 bytes).
    Removing rtx_mempool.o(.ARM.exidx.text.svcRtxMemoryPoolGetName), (8 bytes).
    Removing rtx_mempool.o(.text.svcRtxMemoryPoolAlloc), (122 bytes).
    Removing rtx_mempool.o(.ARM.exidx.text.svcRtxMemoryPoolAlloc), (8 bytes).
    Removing rtx_mempool.o(.text.svcRtxMemoryPoolFree), (204 bytes).
    Removing rtx_mempool.o(.ARM.exidx.text.svcRtxMemoryPoolFree), (8 bytes).
    Removing rtx_mempool.o(.text.svcRtxMemoryPoolGetCapacity), (22 bytes).
    Removing rtx_mempool.o(.ARM.exidx.text.svcRtxMemoryPoolGetCapacity), (8 bytes).
    Removing rtx_mempool.o(.text.svcRtxMemoryPoolGetBlockSize), (22 bytes).
    Removing rtx_mempool.o(.ARM.exidx.text.svcRtxMemoryPoolGetBlockSize), (8 bytes).
    Removing rtx_mempool.o(.text.svcRtxMemoryPoolGetCount), (22 bytes).
    Removing rtx_mempool.o(.ARM.exidx.text.svcRtxMemoryPoolGetCount), (8 bytes).
    Removing rtx_mempool.o(.text.svcRtxMemoryPoolGetSpace), (26 bytes).
    Removing rtx_mempool.o(.ARM.exidx.text.svcRtxMemoryPoolGetSpace), (8 bytes).
    Removing rtx_mempool.o(.text.svcRtxMemoryPoolDelete), (204 bytes).
    Removing rtx_mempool.o(.ARM.exidx.text.svcRtxMemoryPoolDelete), (8 bytes).
    Removing rtx_mempool.o(.text.osMemoryPoolNew), (58 bytes).
    Removing rtx_mempool.o(.ARM.exidx.text.osMemoryPoolNew), (8 bytes).
    Removing rtx_mempool.o(.text.osMemoryPoolGetName), (34 bytes).
    Removing rtx_mempool.o(.ARM.exidx.text.osMemoryPoolGetName), (8 bytes).
    Removing rtx_mempool.o(.text.osMemoryPoolAlloc), (132 bytes).
    Removing rtx_mempool.o(.ARM.exidx.text.osMemoryPoolAlloc), (8 bytes).
    Removing rtx_mempool.o(.text.osMemoryPoolFree), (154 bytes).
    Removing rtx_mempool.o(.ARM.exidx.text.osMemoryPoolFree), (8 bytes).
    Removing rtx_mempool.o(.text.osMemoryPoolGetCapacity), (52 bytes).
    Removing rtx_mempool.o(.ARM.exidx.text.osMemoryPoolGetCapacity), (8 bytes).
    Removing rtx_mempool.o(.text.osMemoryPoolGetBlockSize), (52 bytes).
    Removing rtx_mempool.o(.ARM.exidx.text.osMemoryPoolGetBlockSize), (8 bytes).
    Removing rtx_mempool.o(.text.osMemoryPoolGetCount), (52 bytes).
    Removing rtx_mempool.o(.ARM.exidx.text.osMemoryPoolGetCount), (8 bytes).
    Removing rtx_mempool.o(.text.osMemoryPoolGetSpace), (56 bytes).
    Removing rtx_mempool.o(.ARM.exidx.text.osMemoryPoolGetSpace), (8 bytes).
    Removing rtx_mempool.o(.text.osMemoryPoolDelete), (36 bytes).
    Removing rtx_mempool.o(.ARM.exidx.text.osMemoryPoolDelete), (8 bytes).
    Removing rtx_system.o(.text), (0 bytes).
    Removing rtx_system.o(.ARM.exidx.text.osRtxTick_Handler), (8 bytes).
    Removing rtx_system.o(.ARM.exidx.text.osRtxSysTimerAckIRQ), (8 bytes).
    Removing rtx_system.o(.ARM.exidx.text.osRtxPendSV_Handler), (8 bytes).
    Removing rtx_system.o(.ARM.exidx.text.osRtxPostProcess), (8 bytes).
    Removing rtx_system.o(.ARM.exidx.text.osRtxSysTimerSetup), (8 bytes).
    Removing rtx_system.o(.ARM.exidx.text.osRtxSysTimerEnable), (8 bytes).
    Removing rtx_system.o(.text.osRtxSysTimerDisable), (14 bytes).
    Removing rtx_system.o(.ARM.exidx.text.osRtxSysTimerDisable), (8 bytes).
    Removing rtx_system.o(.text.osRtxSysTimerGetCount), (58 bytes).
    Removing rtx_system.o(.ARM.exidx.text.osRtxSysTimerGetCount), (8 bytes).
    Removing rtx_system.o(.text.osRtxSysTimerGetFreq), (12 bytes).
    Removing rtx_system.o(.ARM.exidx.text.osRtxSysTimerGetFreq), (8 bytes).

433 unused section(s) (total 13536 bytes) removed from the image.

==============================================================================

Image Symbol Table

    Local Symbols

    Symbol Name                              Value     Ov Type        Size  Object(Section)

    ../../../Source/rtx_delay.c              0x00000000   Number         0  rtx_delay.o ABSOLUTE
    ../../../Source/rtx_kernel.c             0x00000000   Number         0  rtx_kernel.o ABSOLUTE
    ../../../Source/rtx_memory.c             0x00000000   Number         0  rtx_memory.o ABSOLUTE
    ../../../Source/rtx_mempool.c            0x00000000   Number         0  rtx_mempool.o ABSOLUTE
    ../../../Source/rtx_msgqueue.c           0x00000000   Number         0  rtx_msgqueue.o ABSOLUTE
    ../../../Source/rtx_mutex.c              0x00000000   Number         0  rtx_mutex.o ABSOLUTE
    ../../../Source/rtx_system.c             0x00000000   Number         0  rtx_system.o ABSOLUTE
    ../../../Source/rtx_thread.c             0x00000000   Number         0  rtx_thread.o ABSOLUTE
    ../../../Source/rtx_timer.c              0x00000000   Number         0  rtx_timer.o ABSOLUTE
    ../clib/angel/boardlib.s                 0x00000000   Number         0  boardshut.o ABSOLUTE
    ../clib/angel/boardlib.s                 0x00000000   Number         0  boardinit1.o ABSOLUTE
    ../clib/angel/boardlib.s                 0x00000000   Number         0  boardinit3.o ABSOLUTE
    ../clib/angel/dczerorl2.s                0x00000000   Number         0  __dczerorl2.o ABSOLUTE
    ../clib/angel/handlers.s                 0x00000000   Number         0  __scatter_zi.o ABSOLUTE
    ../clib/angel/kernel.s                   0x00000000   Number         0  rtexit2.o ABSOLUTE
    ../clib/angel/kernel.s                   0x00000000   Number         0  __rtentry.o ABSOLUTE
    ../clib/angel/kernel.s                   0x00000000   Number         0  __rtentry4.o ABSOLUTE
    ../clib/angel/kernel.s                   0x00000000   Number         0  rtexit.o ABSOLUTE
    ../clib/angel/kernel.s                   0x00000000   Number         0  __rtentry2.o ABSOLUTE
    ../clib/angel/rt.s                       0x00000000   Number         0  rt_raise.o ABSOLUTE
    ../clib/angel/scatter.s                  0x00000000   Number         0  __scatter.o ABSOLUTE
    ../clib/angel/startup.s                  0x00000000   Number         0  __main.o ABSOLUTE
    ../clib/angel/sys.s                      0x00000000   Number         0  indicate_semi.o ABSOLUTE
    ../clib/angel/sys.s                      0x00000000   Number         0  use_no_semi.o ABSOLUTE
    ../clib/angel/sys.s                      0x00000000   Number         0  sys_stackheap_outer.o ABSOLUTE
    ../clib/angel/sys.s                      0x00000000   Number         0  libspace.o ABSOLUTE
    ../clib/angel/sysapp.c                   0x00000000   Number         0  sys_command.o ABSOLUTE
    ../clib/angel/sysapp.c                   0x00000000   Number         0  sys_wrch.o ABSOLUTE
    ../clib/angel/sysapp.c                   0x00000000   Number         0  sys_exit.o ABSOLUTE
    ../clib/armsys.c                         0x00000000   Number         0  _get_argv_nomalloc.o ABSOLUTE
    ../clib/armsys.c                         0x00000000   Number         0  argv_veneer.o ABSOLUTE
    ../clib/armsys.c                         0x00000000   Number         0  argv_veneer.o ABSOLUTE
    ../clib/armsys.c                         0x00000000   Number         0  no_argv.o ABSOLUTE
    ../clib/heapalloc.c                      0x00000000   Number         0  hrguard.o ABSOLUTE
    ../clib/heapaux.c                        0x00000000   Number         0  heapauxi.o ABSOLUTE
    ../clib/libinit.s                        0x00000000   Number         0  libinit2.o ABSOLUTE
    ../clib/libinit.s                        0x00000000   Number         0  libshutdown.o ABSOLUTE
    ../clib/libinit.s                        0x00000000   Number         0  libinit.o ABSOLUTE
    ../clib/libinit.s                        0x00000000   Number         0  libshutdown2.o ABSOLUTE
    ../clib/memcpset.s                       0x00000000   Number         0  rt_memcpy_w.o ABSOLUTE
    ../clib/memcpset.s                       0x00000000   Number         0  rt_memclr_w.o ABSOLUTE
    ../clib/memcpset.s                       0x00000000   Number         0  rt_memclr.o ABSOLUTE
    ../clib/memcpset.s                       0x00000000   Number         0  rt_memcpy_v6.o ABSOLUTE
    ../clib/memcpset.s                       0x00000000   Number         0  strcmpv7m.o ABSOLUTE
    ../clib/memcpset.s                       0x00000000   Number         0  aeabi_memset4.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_segv_inner.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_cppl_inner.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_pvfn_inner.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_stak_inner.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_rtred_inner.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_fpe_inner.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_abrt_inner.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_general.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  __raise.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_rtmem_inner.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_exit.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_rtmem_formal.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_rtmem_outer.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_other.o ABSOLUTE
    ../clib/signal.s                         0x00000000   Number         0  defsig.o ABSOLUTE
    ../clib/stdlib.c                         0x00000000   Number         0  exit.o ABSOLUTE
    ../clib/string.c                         0x00000000   Number         0  strlen.o ABSOLUTE
    ../fplib/dfixu.s                         0x00000000   Number         0  dfixu.o ABSOLUTE
    ../fplib/dmul.s                          0x00000000   Number         0  dmul.o ABSOLUTE
    ../fplib/dnaninf.s                       0x00000000   Number         0  dnaninf.o ABSOLUTE
    ../fplib/dretinf.s                       0x00000000   Number         0  dretinf.o ABSOLUTE
    ../fplib/ffix.s                          0x00000000   Number         0  ffix.o ABSOLUTE
    ../fplib/fflt.s                          0x00000000   Number         0  fflt_clz.o ABSOLUTE
    ../fplib/fnaninf.s                       0x00000000   Number         0  fnaninf.o ABSOLUTE
    ../fplib/fpinit.s                        0x00000000   Number         0  fpinit.o ABSOLUTE
    ../fplib/usenofp.s                       0x00000000   Number         0  usenofp.o ABSOLUTE
    ..\..\..\Source\ARM\irq_cm3.s            0x00000000   Number         0  irq_cm3.o ABSOLUTE
    C:\Keil_v5\ARM\PACK\ARM\CMSIS\5.0.1\CMSIS\RTOS2\RTX\Source\rtx_lib.c 0x00000000   Number         0  rtx_lib.o ABSOLUTE
    C:\Keil_v5\ARM\PACK\Keil\STM32F1xx_DFP\2.3.0\Device\StdPeriph_Driver\src\misc.c 0x00000000   Number         0  misc.o ABSOLUTE
    C:\Keil_v5\ARM\PACK\Keil\STM32F1xx_DFP\2.3.0\Device\StdPeriph_Driver\src\stm32f10x_gpio.c 0x00000000   Number         0  stm32f10x_gpio.o ABSOLUTE
    C:\Keil_v5\ARM\PACK\Keil\STM32F1xx_DFP\2.3.0\Device\StdPeriph_Driver\src\stm32f10x_rcc.c 0x00000000   Number         0  stm32f10x_rcc.o ABSOLUTE
    C:\Keil_v5\ARM\PACK\Keil\STM32F1xx_DFP\2.3.0\Device\StdPeriph_Driver\src\stm32f10x_usart.c 0x00000000   Number         0  stm32f10x_usart.o ABSOLUTE
    C:\\Keil_v5\\ARM\\PACK\\ARM\\CMSIS\\5.0.1\\CMSIS\\RTOS2\\RTX\\Source\\rtx_lib.c 0x00000000   Number         0  rtx_lib.o ABSOLUTE
    C:\\Keil_v5\\ARM\\PACK\\Keil\\STM32F1xx_DFP\\2.3.0\\Device\\StdPeriph_Driver\\src\\misc.c 0x00000000   Number         0  misc.o ABSOLUTE
    C:\\Keil_v5\\ARM\\PACK\\Keil\\STM32F1xx_DFP\\2.3.0\\Device\\StdPeriph_Driver\\src\\stm32f10x_gpio.c 0x00000000   Number         0  stm32f10x_gpio.o ABSOLUTE
    C:\\Keil_v5\\ARM\\PACK\\Keil\\STM32F1xx_DFP\\2.3.0\\Device\\StdPeriph_Driver\\src\\stm32f10x_rcc.c 0x00000000   Number         0  stm32f10x_rcc.o ABSOLUTE
    C:\\Keil_v5\\ARM\\PACK\\Keil\\STM32F1xx_DFP\\2.3.0\\Device\\StdPeriph_Driver\\src\\stm32f10x_usart.c 0x00000000   Number         0  stm32f10x_usart.o ABSOLUTE
    LED_driver.c                             0x00000000   Number         0  led_driver.o ABSOLUTE
    LED_driver.c                             0x00000000   Number         0  led_driver.o ABSOLUTE
    RTE\CMSIS\RTX_Config.c                   0x00000000   Number         0  rtx_config.o ABSOLUTE
    RTE\Device\STM32F107RB\startup_stm32f10x_cl.s 0x00000000   Number         0  startup_stm32f10x_cl.o ABSOLUTE
    RTE\Device\STM32F107RB\system_stm32f10x.c 0x00000000   Number         0  system_stm32f10x.o ABSOLUTE
    RTE\\CMSIS\\RTX_Config.c                 0x00000000   Number         0  rtx_config.o ABSOLUTE
    RTE\\Device\\STM32F107RB\\system_stm32f10x.c 0x00000000   Number         0  system_stm32f10x.o ABSOLUTE
    SvVis_cortex.cpp                         0x00000000   Number         0  svvis_cortex.o ABSOLUTE
    SvVis_cortex.cpp                         0x00000000   Number         0  svvis_cortex.o ABSOLUTE
    SvVis_cortex_threads.cpp                 0x00000000   Number         0  svvis_cortex_threads.o ABSOLUTE
    SvVis_cortex_threads.cpp                 0x00000000   Number         0  svvis_cortex_threads.o ABSOLUTE
    dc.s                                     0x00000000   Number         0  dc.o ABSOLUTE
    main.cpp                                 0x00000000   Number         0  main.o ABSOLUTE
    main.cpp                                 0x00000000   Number         0  main.o ABSOLUTE
    motor_driver.c                           0x00000000   Number         0  motor_driver.o ABSOLUTE
    motor_driver.c                           0x00000000   Number         0  motor_driver.o ABSOLUTE
    RESET                                    0x08000000   Section      336  startup_stm32f10x_cl.o(RESET)
    !!!main                                  0x08000150   Section        8  __main.o(!!!main)
    !!!scatter                               0x08000158   Section       52  __scatter.o(!!!scatter)
    !!dczerorl2                              0x0800018c   Section       90  __dczerorl2.o(!!dczerorl2)
    !!handler_zi                             0x080001e8   Section       28  __scatter_zi.o(!!handler_zi)
    .ARM.Collect$$libinit$$00000000          0x08000204   Section        2  libinit.o(.ARM.Collect$$libinit$$00000000)
    .ARM.Collect$$libinit$$00000002          0x08000206   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000002)
    .ARM.Collect$$libinit$$00000004          0x08000206   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000004)
    .ARM.Collect$$libinit$$0000000A          0x08000206   Section        0  libinit2.o(.ARM.Collect$$libinit$$0000000A)
    .ARM.Collect$$libinit$$0000000C          0x08000206   Section        0  libinit2.o(.ARM.Collect$$libinit$$0000000C)
    .ARM.Collect$$libinit$$0000000E          0x08000206   Section        0  libinit2.o(.ARM.Collect$$libinit$$0000000E)
    .ARM.Collect$$libinit$$00000011          0x08000206   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000011)
    .ARM.Collect$$libinit$$00000013          0x08000206   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000013)
    .ARM.Collect$$libinit$$00000015          0x08000206   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000015)
    .ARM.Collect$$libinit$$00000017          0x08000206   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000017)
    .ARM.Collect$$libinit$$00000019          0x08000206   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000019)
    .ARM.Collect$$libinit$$0000001B          0x08000206   Section        0  libinit2.o(.ARM.Collect$$libinit$$0000001B)
    .ARM.Collect$$libinit$$0000001D          0x08000206   Section        0  libinit2.o(.ARM.Collect$$libinit$$0000001D)
    .ARM.Collect$$libinit$$0000001F          0x08000206   Section        0  libinit2.o(.ARM.Collect$$libinit$$0000001F)
    .ARM.Collect$$libinit$$00000021          0x08000206   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000021)
    .ARM.Collect$$libinit$$00000023          0x08000206   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000023)
    .ARM.Collect$$libinit$$00000025          0x08000206   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000025)
    .ARM.Collect$$libinit$$0000002C          0x08000206   Section        0  libinit2.o(.ARM.Collect$$libinit$$0000002C)
    .ARM.Collect$$libinit$$0000002E          0x08000206   Section        0  libinit2.o(.ARM.Collect$$libinit$$0000002E)
    .ARM.Collect$$libinit$$00000030          0x08000206   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000030)
    .ARM.Collect$$libinit$$00000032          0x08000206   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000032)
    .ARM.Collect$$libinit$$00000033          0x08000206   Section        2  libinit2.o(.ARM.Collect$$libinit$$00000033)
    .ARM.Collect$$libshutdown$$00000000      0x08000208   Section        2  libshutdown.o(.ARM.Collect$$libshutdown$$00000000)
    .ARM.Collect$$libshutdown$$00000002      0x0800020a   Section        0  libshutdown2.o(.ARM.Collect$$libshutdown$$00000002)
    .ARM.Collect$$libshutdown$$00000004      0x0800020a   Section        0  libshutdown2.o(.ARM.Collect$$libshutdown$$00000004)
    .ARM.Collect$$libshutdown$$00000007      0x0800020a   Section        0  libshutdown2.o(.ARM.Collect$$libshutdown$$00000007)
    .ARM.Collect$$libshutdown$$0000000A      0x0800020a   Section        0  libshutdown2.o(.ARM.Collect$$libshutdown$$0000000A)
    .ARM.Collect$$libshutdown$$0000000C      0x0800020a   Section        0  libshutdown2.o(.ARM.Collect$$libshutdown$$0000000C)
    .ARM.Collect$$libshutdown$$0000000F      0x0800020a   Section        0  libshutdown2.o(.ARM.Collect$$libshutdown$$0000000F)
    .ARM.Collect$$libshutdown$$00000010      0x0800020a   Section        2  libshutdown2.o(.ARM.Collect$$libshutdown$$00000010)
    .ARM.Collect$$rtentry$$00000000          0x0800020c   Section        0  __rtentry.o(.ARM.Collect$$rtentry$$00000000)
    .ARM.Collect$$rtentry$$00000002          0x0800020c   Section        0  __rtentry2.o(.ARM.Collect$$rtentry$$00000002)
    .ARM.Collect$$rtentry$$00000004          0x0800020c   Section        6  __rtentry4.o(.ARM.Collect$$rtentry$$00000004)
    .ARM.Collect$$rtentry$$00000008          0x08000212   Section        8  __rtentry2.o(.ARM.Collect$$rtentry$$00000008)
    .ARM.Collect$$rtentry$$0000000A          0x0800021a   Section        4  __rtentry2.o(.ARM.Collect$$rtentry$$0000000A)
    .ARM.Collect$$rtentry$$0000000C          0x0800021e   Section        0  __rtentry2.o(.ARM.Collect$$rtentry$$0000000C)
    .ARM.Collect$$rtentry$$0000000D          0x0800021e   Section        8  __rtentry2.o(.ARM.Collect$$rtentry$$0000000D)
    .ARM.Collect$$rtexit$$00000000           0x08000226   Section        2  rtexit.o(.ARM.Collect$$rtexit$$00000000)
    .ARM.Collect$$rtexit$$00000002           0x08000228   Section        0  rtexit2.o(.ARM.Collect$$rtexit$$00000002)
    .ARM.Collect$$rtexit$$00000003           0x08000228   Section        4  rtexit2.o(.ARM.Collect$$rtexit$$00000003)
    .ARM.Collect$$rtexit$$00000004           0x0800022c   Section        6  rtexit2.o(.ARM.Collect$$rtexit$$00000004)
    .text                                    0x08000234   Section       64  startup_stm32f10x_cl.o(.text)
    .text                                    0x08000274   Section      136  irq_cm3.o(.text)
    .text                                    0x080002fc   Section        0  strlen.o(.text)
    .text                                    0x0800033a   Section      138  rt_memcpy_v6.o(.text)
    .text                                    0x080003c4   Section       16  aeabi_memset4.o(.text)
    .text                                    0x080003d4   Section       68  rt_memclr.o(.text)
    .text                                    0x08000418   Section       78  rt_memclr_w.o(.text)
    .text                                    0x08000468   Section      128  strcmpv7m.o(.text)
    .text                                    0x080004e8   Section        0  heapauxi.o(.text)
    .text                                    0x080004ee   Section      100  rt_memcpy_w.o(.text)
    .text                                    0x08000552   Section       74  sys_stackheap_outer.o(.text)
    .text                                    0x0800059c   Section        0  exit.o(.text)
    .text                                    0x080005b0   Section        8  libspace.o(.text)
    .text                                    0x080005b8   Section        0  sys_exit.o(.text)
    .text                                    0x080005c4   Section        2  use_no_semi.o(.text)
    .text                                    0x080005c6   Section        0  indicate_semi.o(.text)
    [Anonymous Symbol]                       0x080005c8   Section        0  rtx_delay.o(.text.osDelay)
    [Anonymous Symbol]                       0x080005ec   Section        0  rtx_kernel.o(.text.osKernelGetState)
    [Anonymous Symbol]                       0x08000628   Section        0  rtx_kernel.o(.text.osKernelInitialize)
    [Anonymous Symbol]                       0x08000664   Section        0  rtx_kernel.o(.text.osKernelStart)
    [Anonymous Symbol]                       0x080006a0   Section        0  rtx_msgqueue.o(.text.osMessageQueueGet)
    [Anonymous Symbol]                       0x08000754   Section        0  rtx_msgqueue.o(.text.osMessageQueueGetSpace)
    [Anonymous Symbol]                       0x0800078c   Section        0  rtx_msgqueue.o(.text.osMessageQueueNew)
    [Anonymous Symbol]                       0x080007c8   Section        0  rtx_msgqueue.o(.text.osMessageQueuePut)
    [Anonymous Symbol]                       0x0800084c   Section        0  rtx_mutex.o(.text.osMutexAcquire)
    [Anonymous Symbol]                       0x08000870   Section        0  rtx_mutex.o(.text.osMutexDelete)
    [Anonymous Symbol]                       0x08000894   Section        0  rtx_mutex.o(.text.osMutexNew)
    [Anonymous Symbol]                       0x080008d0   Section        0  rtx_mutex.o(.text.osMutexRelease)
    [Anonymous Symbol]                       0x080008f4   Section        0  rtx_memory.o(.text.osRtxMemoryAlloc)
    [Anonymous Symbol]                       0x08000964   Section        0  rtx_memory.o(.text.osRtxMemoryFree)
    [Anonymous Symbol]                       0x080009bc   Section        0  rtx_memory.o(.text.osRtxMemoryInit)
    [Anonymous Symbol]                       0x080009ec   Section        0  rtx_mempool.o(.text.osRtxMemoryPoolAlloc)
    [Anonymous Symbol]                       0x08000a38   Section        0  rtx_mempool.o(.text.osRtxMemoryPoolFree)
    [Anonymous Symbol]                       0x08000a94   Section        0  rtx_mempool.o(.text.osRtxMemoryPoolInit)
    [Anonymous Symbol]                       0x08000ae4   Section        0  rtx_msgqueue.o(.text.osRtxMessageQueuePostProcess)
    [Anonymous Symbol]                       0x08000ca4   Section        0  rtx_mutex.o(.text.osRtxMutexOwnerRelease)
    [Anonymous Symbol]                       0x08000cf0   Section        0  rtx_system.o(.text.osRtxPendSV_Handler)
    [Anonymous Symbol]                       0x08000d98   Section        0  rtx_system.o(.text.osRtxPostProcess)
    [Anonymous Symbol]                       0x08000e10   Section        0  rtx_system.o(.text.osRtxSysTimerAckIRQ)
    [Anonymous Symbol]                       0x08000e1c   Section        0  rtx_system.o(.text.osRtxSysTimerEnable)
    [Anonymous Symbol]                       0x08000e2c   Section        0  rtx_system.o(.text.osRtxSysTimerSetup)
    [Anonymous Symbol]                       0x08000e68   Section        0  rtx_thread.o(.text.osRtxThreadDelayTick)
    [Anonymous Symbol]                       0x08000ef0   Section        0  rtx_thread.o(.text.osRtxThreadDispatch)
    [Anonymous Symbol]                       0x08001048   Section        0  rtx_thread.o(.text.osRtxThreadListGet)
    [Anonymous Symbol]                       0x08001064   Section        0  rtx_thread.o(.text.osRtxThreadListPut)
    [Anonymous Symbol]                       0x0800109c   Section        0  rtx_thread.o(.text.osRtxThreadListRemove)
    [Anonymous Symbol]                       0x080010b8   Section        0  rtx_thread.o(.text.osRtxThreadListSort)
    [Anonymous Symbol]                       0x08001118   Section        0  rtx_thread.o(.text.osRtxThreadPostProcess)
    [Anonymous Symbol]                       0x08001240   Section        0  rtx_thread.o(.text.osRtxThreadReadyPut)
    [Anonymous Symbol]                       0x08001288   Section        0  rtx_thread.o(.text.osRtxThreadRegPtr)
    [Anonymous Symbol]                       0x08001290   Section        0  rtx_thread.o(.text.osRtxThreadStackCheck)
    [Anonymous Symbol]                       0x080012c0   Section        0  rtx_thread.o(.text.osRtxThreadSwitch)
    [Anonymous Symbol]                       0x080012d4   Section        0  rtx_thread.o(.text.osRtxThreadWaitEnter)
    [Anonymous Symbol]                       0x080013b8   Section        0  rtx_thread.o(.text.osRtxThreadWaitExit)
    [Anonymous Symbol]                       0x08001478   Section        0  rtx_system.o(.text.osRtxTick_Handler)
    [Anonymous Symbol]                       0x080014f0   Section        0  rtx_timer.o(.text.osRtxTimerTick)
    [Anonymous Symbol]                       0x0800159c   Section        0  rtx_thread.o(.text.osThreadExit)
    [Anonymous Symbol]                       0x080015ac   Section        0  rtx_thread.o(.text.osThreadNew)
    [Anonymous Symbol]                       0x080015e8   Section        0  rtx_thread.o(.text.osThreadYield)
    [Anonymous Symbol]                       0x0800160c   Section        0  rtx_delay.o(.text.svcRtxDelay)
    [Anonymous Symbol]                       0x08001620   Section        0  rtx_kernel.o(.text.svcRtxKernelGetState)
    [Anonymous Symbol]                       0x0800162c   Section        0  rtx_kernel.o(.text.svcRtxKernelInitialize)
    [Anonymous Symbol]                       0x080017d8   Section        0  rtx_kernel.o(.text.svcRtxKernelStart)
    [Anonymous Symbol]                       0x08001870   Section        0  rtx_msgqueue.o(.text.svcRtxMessageQueueGet)
    [Anonymous Symbol]                       0x08001a0c   Section        0  rtx_msgqueue.o(.text.svcRtxMessageQueueGetSpace)
    [Anonymous Symbol]                       0x08001a28   Section        0  rtx_msgqueue.o(.text.svcRtxMessageQueueNew)
    [Anonymous Symbol]                       0x08001b88   Section        0  rtx_msgqueue.o(.text.svcRtxMessageQueuePut)
    [Anonymous Symbol]                       0x08001ca0   Section        0  rtx_mutex.o(.text.svcRtxMutexAcquire)
    [Anonymous Symbol]                       0x08001d40   Section        0  rtx_mutex.o(.text.svcRtxMutexDelete)
    [Anonymous Symbol]                       0x08001e18   Section        0  rtx_mutex.o(.text.svcRtxMutexNew)
    [Anonymous Symbol]                       0x08001e8c   Section        0  rtx_mutex.o(.text.svcRtxMutexRelease)
    [Anonymous Symbol]                       0x08001f54   Section        0  rtx_thread.o(.text.svcRtxThreadExit)
    [Anonymous Symbol]                       0x08002098   Section        0  rtx_thread.o(.text.svcRtxThreadNew)
    [Anonymous Symbol]                       0x080022d8   Section        0  rtx_thread.o(.text.svcRtxThreadYield)
    i.GPIO_Init                              0x08002366   Section        0  stm32f10x_gpio.o(i.GPIO_Init)
    i.GPIO_ResetBits                         0x0800247c   Section        0  stm32f10x_gpio.o(i.GPIO_ResetBits)
    i.GPIO_SetBits                           0x08002480   Section        0  stm32f10x_gpio.o(i.GPIO_SetBits)
    i.GPIO_WriteBit                          0x08002484   Section        0  stm32f10x_gpio.o(i.GPIO_WriteBit)
    i.LED_heartbeat                          0x08002490   Section        0  led_driver.o(i.LED_heartbeat)
    i.LED_init                               0x080024a4   Section        0  led_driver.o(i.LED_init)
    i.LED_triangle_l                         0x080024f8   Section        0  led_driver.o(i.LED_triangle_l)
    i.NVIC_Init                              0x08002524   Section        0  misc.o(i.NVIC_Init)
    i.RCC_APB1PeriphClockCmd                 0x08002594   Section        0  stm32f10x_rcc.o(i.RCC_APB1PeriphClockCmd)
    i.RCC_APB1PeriphResetCmd                 0x080025b4   Section        0  stm32f10x_rcc.o(i.RCC_APB1PeriphResetCmd)
    i.RCC_APB2PeriphClockCmd                 0x080025d4   Section        0  stm32f10x_rcc.o(i.RCC_APB2PeriphClockCmd)
    i.RCC_APB2PeriphResetCmd                 0x080025f4   Section        0  stm32f10x_rcc.o(i.RCC_APB2PeriphResetCmd)
    i.RCC_GetClocksFreq                      0x08002614   Section        0  stm32f10x_rcc.o(i.RCC_GetClocksFreq)
    i.SetSysClock                            0x080027a4   Section        0  system_stm32f10x.o(i.SetSysClock)
    SetSysClock                              0x080027a5   Thumb Code     8  system_stm32f10x.o(i.SetSysClock)
    i.SetSysClockTo72                        0x080027ac   Section        0  system_stm32f10x.o(i.SetSysClockTo72)
    SetSysClockTo72                          0x080027ad   Thumb Code   264  system_stm32f10x.o(i.SetSysClockTo72)
    i.SystemCoreClockUpdate                  0x080028c4   Section        0  system_stm32f10x.o(i.SystemCoreClockUpdate)
    i.SystemInit                             0x080029c4   Section        0  system_stm32f10x.o(i.SystemInit)
    i.USART1_IRQHandler                      0x08002a30   Section        0  svvis_cortex_threads.o(i.USART1_IRQHandler)
    i.USART2_IRQHandler                      0x08002a58   Section        0  svvis_cortex_threads.o(i.USART2_IRQHandler)
    i.USART3_IRQHandler                      0x08002a80   Section        0  svvis_cortex_threads.o(i.USART3_IRQHandler)
    i.USART_ClockInit                        0x08002aa8   Section        0  stm32f10x_usart.o(i.USART_ClockInit)
    i.USART_Cmd                              0x08002aca   Section        0  stm32f10x_usart.o(i.USART_Cmd)
    i.USART_DeInit                           0x08002ae4   Section        0  stm32f10x_usart.o(i.USART_DeInit)
    i.USART_GetFlagStatus                    0x08002b80   Section        0  stm32f10x_usart.o(i.USART_GetFlagStatus)
    i.USART_ITConfig                         0x08002b9a   Section        0  stm32f10x_usart.o(i.USART_ITConfig)
    i.USART_Init                             0x08002be4   Section        0  stm32f10x_usart.o(i.USART_Init)
    i.USART_ReceiveData                      0x08002cbc   Section        0  stm32f10x_usart.o(i.USART_ReceiveData)
    i.USART_SendData                         0x08002cc6   Section        0  stm32f10x_usart.o(i.USART_SendData)
    i._Z10init_usartP13USART_TypeDefj        0x08002cd0   Section        0  svvis_cortex.o(i._Z10init_usartP13USART_TypeDefj)
    i._Z11recv_threadPv                      0x08002e60   Section        0  svvis_cortex_threads.o(i._Z11recv_threadPv)
    i._Z11send_threadPv                      0x08002f1a   Section        0  svvis_cortex_threads.o(i._Z11send_threadPv)
    i._Z13LED_heartbeatPv                    0x08002f48   Section        0  main.o(i._Z13LED_heartbeatPv)
    i._Z15USART_send_byteP13USART_TypeDefh   0x08002f68   Section        0  svvis_cortex.o(i._Z15USART_send_byteP13USART_TypeDefh)
    i._Z16USART_send_bytesP13USART_TypeDefPvj 0x08002f8a   Section        0  svvis_cortex.o(i._Z16USART_send_bytesP13USART_TypeDefPvj)
    i._Z16main_thread_funcPv                 0x08002fac   Section        0  main.o(i._Z16main_thread_funcPv)
    i._Z8chid2lenh                           0x08003098   Section        0  svvis_cortex_threads.o(i._Z8chid2lenh)
    i._ZN8SvVis3_t4initEP13USART_TypeDefj    0x080030cc   Section        0  svvis_cortex.o(i._ZN8SvVis3_t4initEP13USART_TypeDefj)
    i._ZN8SvVis3_t8recv_msgER16SvVis3_message_t 0x08003160   Section        0  svvis_cortex.o(i._ZN8SvVis3_t8recv_msgER16SvVis3_message_t)
    i._ZN8SvVis3_t8send_msgER16SvVis3_message_t 0x08003176   Section        0  svvis_cortex.o(i._ZN8SvVis3_t8send_msgER16SvVis3_message_t)
    i._ZN8SvVis3_t8send_strEPKc              0x0800319c   Section        0  svvis_cortex.o(i._ZN8SvVis3_t8send_strEPKc)
    i._mutex_acquire                         0x080031e6   Section        0  rtx_lib.o(i._mutex_acquire)
    __tagsym$$used                           0x080031e7   Number         0  rtx_lib.o(i._mutex_acquire)
    i._mutex_free                            0x080031fc   Section        0  rtx_lib.o(i._mutex_free)
    __tagsym$$used                           0x080031fd   Number         0  rtx_lib.o(i._mutex_free)
    i._mutex_initialize                      0x08003208   Section        0  rtx_lib.o(i._mutex_initialize)
    __tagsym$$used                           0x08003209   Number         0  rtx_lib.o(i._mutex_initialize)
    i._mutex_release                         0x08003228   Section        0  rtx_lib.o(i._mutex_release)
    __tagsym$$used                           0x08003229   Number         0  rtx_lib.o(i._mutex_release)
    i._platform_post_stackheap_init          0x0800323a   Section        0  rtx_lib.o(i._platform_post_stackheap_init)
    i.generate_pwm                           0x08003244   Section        0  motor_driver.o(i.generate_pwm)
    i.main                                   0x08003294   Section        0  main.o(i.main)
    i.motor_cmd_bin                          0x08003330   Section        0  motor_driver.o(i.motor_cmd_bin)
    i.motor_cmd_str                          0x080033d0   Section        0  motor_driver.o(i.motor_cmd_str)
    i.motor_init                             0x08003450   Section        0  motor_driver.o(i.motor_init)
    i.osRtxErrorNotify                       0x080034c0   Section        0  rtx_config.o(i.osRtxErrorNotify)
    i.osRtxIdleThread                        0x080034e0   Section        0  rtx_config.o(i.osRtxIdleThread)
    i.os_kernel_is_active                    0x080034e4   Section        0  rtx_lib.o(i.os_kernel_is_active)
    os_kernel_is_active                      0x080034e5   Thumb Code    32  rtx_lib.o(i.os_kernel_is_active)
    x$fpl$dfixu                              0x08003508   Section       90  dfixu.o(x$fpl$dfixu)
    x$fpl$dmul                               0x08003564   Section      340  dmul.o(x$fpl$dmul)
    x$fpl$dnaninf                            0x080036b8   Section      156  dnaninf.o(x$fpl$dnaninf)
    x$fpl$dretinf                            0x08003754   Section       12  dretinf.o(x$fpl$dretinf)
    .constdata                               0x08003760   Section      100  rtx_lib.o(.constdata)
    x$fpl$usenofp                            0x08003760   Section        0  usenofp.o(x$fpl$usenofp)
    os_idle_thread_attr                      0x08003760   Data          36  rtx_lib.o(.constdata)
    os_timer_thread_attr                     0x08003784   Data          36  rtx_lib.o(.constdata)
    os_timer_mq_attr                         0x080037a8   Data          24  rtx_lib.o(.constdata)
    .constdata                               0x080037c4   Section        1  irq_cm3.o(.constdata)
    .rodata                                  0x080037c8   Section      104  rtx_lib.o(.rodata)
    __tagsym$$used                           0x080037c8   Number         0  rtx_lib.o(.rodata)
    [Anonymous Symbol]                       0x08003830   Section        0  rtx_kernel.o(.rodata.str1.4)
    .L.str                                   0x08003830   Data          11  rtx_kernel.o(.rodata.str1.4)
    .bss.os                                  0x20000000   Section     4656  rtx_lib.o(.bss.os)
    os_mem                                   0x20000000   Data        4096  rtx_lib.o(.bss.os)
    os_isr_queue                             0x20001000   Data          64  rtx_lib.o(.bss.os)
    os_libspace                              0x20001040   Data         480  rtx_lib.o(.bss.os)
    os_libspace_id                           0x20001220   Data          16  rtx_lib.o(.bss.os)
    .bss.os.msgqueue.cb                      0x20001230   Section       52  rtx_lib.o(.bss.os.msgqueue.cb)
    os_timer_mq_cb                           0x20001230   Data          52  rtx_lib.o(.bss.os.msgqueue.cb)
    .bss.os.msgqueue.mem                     0x20001264   Section       80  rtx_lib.o(.bss.os.msgqueue.mem)
    os_timer_mq_data                         0x20001264   Data          80  rtx_lib.o(.bss.os.msgqueue.mem)
    .bss.os.thread.cb                        0x200012b4   Section      136  rtx_lib.o(.bss.os.thread.cb)
    os_idle_thread_cb                        0x200012b4   Data          68  rtx_lib.o(.bss.os.thread.cb)
    os_timer_thread_cb                       0x200012f8   Data          68  rtx_lib.o(.bss.os.thread.cb)
    .bss.os.thread.stack                     0x20001340   Section      400  rtx_lib.o(.bss.os.thread.stack)
    os_idle_thread_stack                     0x20001340   Data         200  rtx_lib.o(.bss.os.thread.stack)
    os_timer_thread_stack                    0x20001408   Data         200  rtx_lib.o(.bss.os.thread.stack)
    .data                                    0x200014d0   Section       12  svvis_cortex.o(.data)
    .data                                    0x200014dc   Section        8  main.o(.data)
    .data                                    0x200014e8   Section        9  motor_driver.o(.data)
    .data                                    0x200014f4   Section        5  rtx_lib.o(.data)
    os_kernel_active                         0x200014f8   Data           1  rtx_lib.o(.data)
    .data                                    0x200014f9   Section       20  stm32f10x_rcc.o(.data)
    APBAHBPrescTable                         0x200014f9   Data          16  stm32f10x_rcc.o(.data)
    ADCPrescTable                            0x20001509   Data           4  stm32f10x_rcc.o(.data)
    .data                                    0x20001510   Section       20  system_stm32f10x.o(.data)
    .bss                                     0x200015d0   Section       96  libspace.o(.bss)
    HEAP                                     0x20001630   Section      512  startup_stm32f10x_cl.o(HEAP)
    Heap_Mem                                 0x20001630   Data         512  startup_stm32f10x_cl.o(HEAP)
    STACK                                    0x20001830   Section     1024  startup_stm32f10x_cl.o(STACK)
    Stack_Mem                                0x20001830   Data        1024  startup_stm32f10x_cl.o(STACK)
    __initial_sp                             0x20001c30   Data           0  startup_stm32f10x_cl.o(STACK)

    Global Symbols

    Symbol Name                              Value     Ov Type        Size  Object(Section)

    BuildAttributes$$THM_ISAv4$P$D$K$B$S$PE$A:L22UL41UL21$X:L11$S22US41US21$IEEE1$IW$~IW$USESV6$~STKCKD$USESV7$~SHL$OTIME$ROPI$EBA8$UX$STANDARDLIB$REQ8$PRES8$EABIv2 0x00000000   Number         0  anon$$obj.o ABSOLUTE
    __ARM_use_no_argv                        0x00000000   Number         0  main.o ABSOLUTE
    __ARM_exceptions_init                     - Undefined Weak Reference
    __alloca_initialize                       - Undefined Weak Reference
    __arm_preinit_                            - Undefined Weak Reference
    __cpp_initialize__aeabi_                  - Undefined Weak Reference
    __cxa_finalize                            - Undefined Weak Reference
    __rt_locale                               - Undefined Weak Reference
    __sigvec_lookup                           - Undefined Weak Reference
    _atexit_init                              - Undefined Weak Reference
    _call_atexit_fns                          - Undefined Weak Reference
    _clock_init                               - Undefined Weak Reference
    _fp_trap_init                             - Undefined Weak Reference
    _fp_trap_shutdown                         - Undefined Weak Reference
    _get_lc_collate                           - Undefined Weak Reference
    _get_lc_ctype                             - Undefined Weak Reference
    _get_lc_monetary                          - Undefined Weak Reference
    _get_lc_numeric                           - Undefined Weak Reference
    _get_lc_time                              - Undefined Weak Reference
    _getenv_init                              - Undefined Weak Reference
    _handle_redirection                       - Undefined Weak Reference
    _init_alloc                               - Undefined Weak Reference
    _init_user_alloc                          - Undefined Weak Reference
    _initio                                   - Undefined Weak Reference
    _rand_init                                - Undefined Weak Reference
    _signal_finish                            - Undefined Weak Reference
    _signal_init                              - Undefined Weak Reference
    _terminate_alloc                          - Undefined Weak Reference
    _terminate_user_alloc                     - Undefined Weak Reference
    _terminateio                              - Undefined Weak Reference
    __Vectors_Size                           0x00000150   Number         0  startup_stm32f10x_cl.o ABSOLUTE
    __Vectors                                0x08000000   Data           4  startup_stm32f10x_cl.o(RESET)
    __Vectors_End                            0x08000150   Data           0  startup_stm32f10x_cl.o(RESET)
    __main                                   0x08000151   Thumb Code     8  __main.o(!!!main)
    __scatterload                            0x08000159   Thumb Code     0  __scatter.o(!!!scatter)
    __scatterload_rt2                        0x08000159   Thumb Code    44  __scatter.o(!!!scatter)
    __scatterload_rt2_thumb_only             0x08000159   Thumb Code     0  __scatter.o(!!!scatter)
    __scatterload_null                       0x08000167   Thumb Code     0  __scatter.o(!!!scatter)
    __decompress                             0x0800018d   Thumb Code    90  __dczerorl2.o(!!dczerorl2)
    __decompress1                            0x0800018d   Thumb Code     0  __dczerorl2.o(!!dczerorl2)
    __scatterload_zeroinit                   0x080001e9   Thumb Code    28  __scatter_zi.o(!!handler_zi)
    __rt_lib_init                            0x08000205   Thumb Code     0  libinit.o(.ARM.Collect$$libinit$$00000000)
    __rt_lib_init_alloca_1                   0x08000207   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$0000002E)
    __rt_lib_init_argv_1                     0x08000207   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$0000002C)
    __rt_lib_init_atexit_1                   0x08000207   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$0000001B)
    __rt_lib_init_clock_1                    0x08000207   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000021)
    __rt_lib_init_cpp_1                      0x08000207   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000032)
    __rt_lib_init_exceptions_1               0x08000207   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000030)
    __rt_lib_init_fp_1                       0x08000207   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000002)
    __rt_lib_init_fp_trap_1                  0x08000207   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$0000001F)
    __rt_lib_init_getenv_1                   0x08000207   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000023)
    __rt_lib_init_heap_1                     0x08000207   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$0000000A)
    __rt_lib_init_lc_collate_1               0x08000207   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000011)
    __rt_lib_init_lc_ctype_1                 0x08000207   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000013)
    __rt_lib_init_lc_monetary_1              0x08000207   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000015)
    __rt_lib_init_lc_numeric_1               0x08000207   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000017)
    __rt_lib_init_lc_time_1                  0x08000207   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000019)
    __rt_lib_init_preinit_1                  0x08000207   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000004)
    __rt_lib_init_rand_1                     0x08000207   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$0000000E)
    __rt_lib_init_return                     0x08000207   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000033)
    __rt_lib_init_signal_1                   0x08000207   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$0000001D)
    __rt_lib_init_stdio_1                    0x08000207   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000025)
    __rt_lib_init_user_alloc_1               0x08000207   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$0000000C)
    __rt_lib_shutdown                        0x08000209   Thumb Code     0  libshutdown.o(.ARM.Collect$$libshutdown$$00000000)
    __rt_lib_shutdown_cpp_1                  0x0800020b   Thumb Code     0  libshutdown2.o(.ARM.Collect$$libshutdown$$00000002)
    __rt_lib_shutdown_fp_trap_1              0x0800020b   Thumb Code     0  libshutdown2.o(.ARM.Collect$$libshutdown$$00000007)
    __rt_lib_shutdown_heap_1                 0x0800020b   Thumb Code     0  libshutdown2.o(.ARM.Collect$$libshutdown$$0000000F)
    __rt_lib_shutdown_return                 0x0800020b   Thumb Code     0  libshutdown2.o(.ARM.Collect$$libshutdown$$00000010)
    __rt_lib_shutdown_signal_1               0x0800020b   Thumb Code     0  libshutdown2.o(.ARM.Collect$$libshutdown$$0000000A)
    __rt_lib_shutdown_stdio_1                0x0800020b   Thumb Code     0  libshutdown2.o(.ARM.Collect$$libshutdown$$00000004)
    __rt_lib_shutdown_user_alloc_1           0x0800020b   Thumb Code     0  libshutdown2.o(.ARM.Collect$$libshutdown$$0000000C)
    __rt_entry                               0x0800020d   Thumb Code     0  __rtentry.o(.ARM.Collect$$rtentry$$00000000)
    __rt_entry_presh_1                       0x0800020d   Thumb Code     0  __rtentry2.o(.ARM.Collect$$rtentry$$00000002)
    __rt_entry_sh                            0x0800020d   Thumb Code     0  __rtentry4.o(.ARM.Collect$$rtentry$$00000004)
    __rt_entry_postsh_1                      0x08000213   Thumb Code     0  __rtentry2.o(.ARM.Collect$$rtentry$$00000008)
    __rt_entry_li                            0x0800021b   Thumb Code     0  __rtentry2.o(.ARM.Collect$$rtentry$$0000000A)
    __rt_entry_main                          0x0800021f   Thumb Code     0  __rtentry2.o(.ARM.Collect$$rtentry$$0000000D)
    __rt_entry_postli_1                      0x0800021f   Thumb Code     0  __rtentry2.o(.ARM.Collect$$rtentry$$0000000C)
    __rt_exit                                0x08000227   Thumb Code     0  rtexit.o(.ARM.Collect$$rtexit$$00000000)
    __rt_exit_ls                             0x08000229   Thumb Code     0  rtexit2.o(.ARM.Collect$$rtexit$$00000003)
    __rt_exit_prels_1                        0x08000229   Thumb Code     0  rtexit2.o(.ARM.Collect$$rtexit$$00000002)
    __rt_exit_exit                           0x0800022d   Thumb Code     0  rtexit2.o(.ARM.Collect$$rtexit$$00000004)
    Reset_Handler                            0x08000235   Thumb Code     8  startup_stm32f10x_cl.o(.text)
    NMI_Handler                              0x0800023d   Thumb Code     2  startup_stm32f10x_cl.o(.text)
    HardFault_Handler                        0x0800023f   Thumb Code     2  startup_stm32f10x_cl.o(.text)
    MemManage_Handler                        0x08000241   Thumb Code     2  startup_stm32f10x_cl.o(.text)
    BusFault_Handler                         0x08000243   Thumb Code     2  startup_stm32f10x_cl.o(.text)
    UsageFault_Handler                       0x08000245   Thumb Code     2  startup_stm32f10x_cl.o(.text)
    DebugMon_Handler                         0x08000249   Thumb Code     2  startup_stm32f10x_cl.o(.text)
    ADC1_2_IRQHandler                        0x0800024f   Thumb Code     0  startup_stm32f10x_cl.o(.text)
    CAN1_RX0_IRQHandler                      0x0800024f   Thumb Code     0  startup_stm32f10x_cl.o(.text)
    CAN1_RX1_IRQHandler                      0x0800024f   Thumb Code     0  startup_stm32f10x_cl.o(.text)
    CAN1_SCE_IRQHandler                      0x0800024f   Thumb Code     0  startup_stm32f10x_cl.o(.text)
    CAN1_TX_IRQHandler                       0x0800024f   Thumb Code     0  startup_stm32f10x_cl.o(.text)
    CAN2_RX0_IRQHandler                      0x0800024f   Thumb Code     0  startup_stm32f10x_cl.o(.text)
    CAN2_RX1_IRQHandler                      0x0800024f   Thumb Code     0  startup_stm32f10x_cl.o(.text)
    CAN2_SCE_IRQHandler                      0x0800024f   Thumb Code     0  startup_stm32f10x_cl.o(.text)
    CAN2_TX_IRQHandler                       0x0800024f   Thumb Code     0  startup_stm32f10x_cl.o(.text)
    DMA1_Channel1_IRQHandler                 0x0800024f   Thumb Code     0  startup_stm32f10x_cl.o(.text)
    DMA1_Channel2_IRQHandler                 0x0800024f   Thumb Code     0  startup_stm32f10x_cl.o(.text)
    DMA1_Channel3_IRQHandler                 0x0800024f   Thumb Code     0  startup_stm32f10x_cl.o(.text)
    DMA1_Channel4_IRQHandler                 0x0800024f   Thumb Code     0  startup_stm32f10x_cl.o(.text)
    DMA1_Channel5_IRQHandler                 0x0800024f   Thumb Code     0  startup_stm32f10x_cl.o(.text)
    DMA1_Channel6_IRQHandler                 0x0800024f   Thumb Code     0  startup_stm32f10x_cl.o(.text)
    DMA1_Channel7_IRQHandler                 0x0800024f   Thumb Code     0  startup_stm32f10x_cl.o(.text)
    DMA2_Channel1_IRQHandler                 0x0800024f   Thumb Code     0  startup_stm32f10x_cl.o(.text)
    DMA2_Channel2_IRQHandler                 0x0800024f   Thumb Code     0  startup_stm32f10x_cl.o(.text)
    DMA2_Channel3_IRQHandler                 0x0800024f   Thumb Code     0  startup_stm32f10x_cl.o(.text)
    DMA2_Channel4_IRQHandler                 0x0800024f   Thumb Code     0  startup_stm32f10x_cl.o(.text)
    DMA2_Channel5_IRQHandler                 0x0800024f   Thumb Code     0  startup_stm32f10x_cl.o(.text)
    ETH_IRQHandler                           0x0800024f   Thumb Code     0  startup_stm32f10x_cl.o(.text)
    ETH_WKUP_IRQHandler                      0x0800024f   Thumb Code     0  startup_stm32f10x_cl.o(.text)
    EXTI0_IRQHandler                         0x0800024f   Thumb Code     0  startup_stm32f10x_cl.o(.text)
    EXTI15_10_IRQHandler                     0x0800024f   Thumb Code     0  startup_stm32f10x_cl.o(.text)
    EXTI1_IRQHandler                         0x0800024f   Thumb Code     0  startup_stm32f10x_cl.o(.text)
    EXTI2_IRQHandler                         0x0800024f   Thumb Code     0  startup_stm32f10x_cl.o(.text)
    EXTI3_IRQHandler                         0x0800024f   Thumb Code     0  startup_stm32f10x_cl.o(.text)
    EXTI4_IRQHandler                         0x0800024f   Thumb Code     0  startup_stm32f10x_cl.o(.text)
    EXTI9_5_IRQHandler                       0x0800024f   Thumb Code     0  startup_stm32f10x_cl.o(.text)
    FLASH_IRQHandler                         0x0800024f   Thumb Code     0  startup_stm32f10x_cl.o(.text)
    I2C1_ER_IRQHandler                       0x0800024f   Thumb Code     0  startup_stm32f10x_cl.o(.text)
    I2C1_EV_IRQHandler                       0x0800024f   Thumb Code     0  startup_stm32f10x_cl.o(.text)
    I2C2_ER_IRQHandler                       0x0800024f   Thumb Code     0  startup_stm32f10x_cl.o(.text)
    I2C2_EV_IRQHandler                       0x0800024f   Thumb Code     0  startup_stm32f10x_cl.o(.text)
    OTG_FS_IRQHandler                        0x0800024f   Thumb Code     0  startup_stm32f10x_cl.o(.text)
    OTG_FS_WKUP_IRQHandler                   0x0800024f   Thumb Code     0  startup_stm32f10x_cl.o(.text)
    PVD_IRQHandler                           0x0800024f   Thumb Code     0  startup_stm32f10x_cl.o(.text)
    RCC_IRQHandler                           0x0800024f   Thumb Code     0  startup_stm32f10x_cl.o(.text)
    RTCAlarm_IRQHandler                      0x0800024f   Thumb Code     0  startup_stm32f10x_cl.o(.text)
    RTC_IRQHandler                           0x0800024f   Thumb Code     0  startup_stm32f10x_cl.o(.text)
    SPI1_IRQHandler                          0x0800024f   Thumb Code     0  startup_stm32f10x_cl.o(.text)
    SPI2_IRQHandler                          0x0800024f   Thumb Code     0  startup_stm32f10x_cl.o(.text)
    SPI3_IRQHandler                          0x0800024f   Thumb Code     0  startup_stm32f10x_cl.o(.text)
    TAMPER_IRQHandler                        0x0800024f   Thumb Code     0  startup_stm32f10x_cl.o(.text)
    TIM1_BRK_IRQHandler                      0x0800024f   Thumb Code     0  startup_stm32f10x_cl.o(.text)
    TIM1_CC_IRQHandler                       0x0800024f   Thumb Code     0  startup_stm32f10x_cl.o(.text)
    TIM1_TRG_COM_IRQHandler                  0x0800024f   Thumb Code     0  startup_stm32f10x_cl.o(.text)
    TIM1_UP_IRQHandler                       0x0800024f   Thumb Code     0  startup_stm32f10x_cl.o(.text)
    TIM2_IRQHandler                          0x0800024f   Thumb Code     0  startup_stm32f10x_cl.o(.text)
    TIM3_IRQHandler                          0x0800024f   Thumb Code     0  startup_stm32f10x_cl.o(.text)
    TIM4_IRQHandler                          0x0800024f   Thumb Code     0  startup_stm32f10x_cl.o(.text)
    TIM5_IRQHandler                          0x0800024f   Thumb Code     0  startup_stm32f10x_cl.o(.text)
    TIM6_IRQHandler                          0x0800024f   Thumb Code     0  startup_stm32f10x_cl.o(.text)
    TIM7_IRQHandler                          0x0800024f   Thumb Code     0  startup_stm32f10x_cl.o(.text)
    UART4_IRQHandler                         0x0800024f   Thumb Code     0  startup_stm32f10x_cl.o(.text)
    UART5_IRQHandler                         0x0800024f   Thumb Code     0  startup_stm32f10x_cl.o(.text)
    WWDG_IRQHandler                          0x0800024f   Thumb Code     0  startup_stm32f10x_cl.o(.text)
    __user_initial_stackheap                 0x08000251   Thumb Code     0  startup_stm32f10x_cl.o(.text)
    SVC_Handler                              0x08000275   Thumb Code    96  irq_cm3.o(.text)
    PendSV_Handler                           0x080002d5   Thumb Code    16  irq_cm3.o(.text)
    SysTick_Handler                          0x080002e5   Thumb Code    16  irq_cm3.o(.text)
    strlen                                   0x080002fd   Thumb Code    62  strlen.o(.text)
    __aeabi_memcpy                           0x0800033b   Thumb Code     0  rt_memcpy_v6.o(.text)
    __rt_memcpy                              0x0800033b   Thumb Code   138  rt_memcpy_v6.o(.text)
    _memcpy_lastbytes                        0x080003a1   Thumb Code     0  rt_memcpy_v6.o(.text)
    __aeabi_memset4                          0x080003c5   Thumb Code    16  aeabi_memset4.o(.text)
    __aeabi_memset8                          0x080003c5   Thumb Code     0  aeabi_memset4.o(.text)
    __aeabi_memclr                           0x080003d5   Thumb Code     0  rt_memclr.o(.text)
    __rt_memclr                              0x080003d5   Thumb Code    68  rt_memclr.o(.text)
    _memset                                  0x080003d9   Thumb Code     0  rt_memclr.o(.text)
    __aeabi_memclr4                          0x08000419   Thumb Code     0  rt_memclr_w.o(.text)
    __aeabi_memclr8                          0x08000419   Thumb Code     0  rt_memclr_w.o(.text)
    __rt_memclr_w                            0x08000419   Thumb Code    78  rt_memclr_w.o(.text)
    _memset_w                                0x0800041d   Thumb Code     0  rt_memclr_w.o(.text)
    strcmp                                   0x08000469   Thumb Code   128  strcmpv7m.o(.text)
    __use_two_region_memory                  0x080004e9   Thumb Code     2  heapauxi.o(.text)
    __rt_heap_escrow$2region                 0x080004eb   Thumb Code     2  heapauxi.o(.text)
    __rt_heap_expand$2region                 0x080004ed   Thumb Code     2  heapauxi.o(.text)
    __aeabi_memcpy4                          0x080004ef   Thumb Code     0  rt_memcpy_w.o(.text)
    __aeabi_memcpy8                          0x080004ef   Thumb Code     0  rt_memcpy_w.o(.text)
    __rt_memcpy_w                            0x080004ef   Thumb Code   100  rt_memcpy_w.o(.text)
    _memcpy_lastbytes_aligned                0x08000537   Thumb Code     0  rt_memcpy_w.o(.text)
    __user_setup_stackheap                   0x08000553   Thumb Code    74  sys_stackheap_outer.o(.text)
    exit                                     0x0800059d   Thumb Code    18  exit.o(.text)
    __user_libspace                          0x080005b1   Thumb Code     8  libspace.o(.text)
    __user_perproc_libspace                  0x080005b1   Thumb Code     0  libspace.o(.text)
    _sys_exit                                0x080005b9   Thumb Code     8  sys_exit.o(.text)
    __I$use$semihosting                      0x080005c5   Thumb Code     0  use_no_semi.o(.text)
    __use_no_semihosting_swi                 0x080005c5   Thumb Code     2  use_no_semi.o(.text)
    __semihosting_library_function           0x080005c7   Thumb Code     0  indicate_semi.o(.text)
    osDelay                                  0x080005c9   Thumb Code    36  rtx_delay.o(.text.osDelay)
    osKernelGetState                         0x080005ed   Thumb Code    58  rtx_kernel.o(.text.osKernelGetState)
    osKernelInitialize                       0x08000629   Thumb Code    60  rtx_kernel.o(.text.osKernelInitialize)
    osKernelStart                            0x08000665   Thumb Code    60  rtx_kernel.o(.text.osKernelStart)
    osMessageQueueGet                        0x080006a1   Thumb Code   180  rtx_msgqueue.o(.text.osMessageQueueGet)
    osMessageQueueGetSpace                   0x08000755   Thumb Code    56  rtx_msgqueue.o(.text.osMessageQueueGetSpace)
    osMessageQueueNew                        0x0800078d   Thumb Code    58  rtx_msgqueue.o(.text.osMessageQueueNew)
    osMessageQueuePut                        0x080007c9   Thumb Code   132  rtx_msgqueue.o(.text.osMessageQueuePut)
    osMutexAcquire                           0x0800084d   Thumb Code    36  rtx_mutex.o(.text.osMutexAcquire)
    osMutexDelete                            0x08000871   Thumb Code    36  rtx_mutex.o(.text.osMutexDelete)
    osMutexNew                               0x08000895   Thumb Code    58  rtx_mutex.o(.text.osMutexNew)
    osMutexRelease                           0x080008d1   Thumb Code    36  rtx_mutex.o(.text.osMutexRelease)
    osRtxMemoryAlloc                         0x080008f5   Thumb Code   110  rtx_memory.o(.text.osRtxMemoryAlloc)
    osRtxMemoryFree                          0x08000965   Thumb Code    88  rtx_memory.o(.text.osRtxMemoryFree)
    osRtxMemoryInit                          0x080009bd   Thumb Code    48  rtx_memory.o(.text.osRtxMemoryInit)
    osRtxMemoryPoolAlloc                     0x080009ed   Thumb Code    76  rtx_mempool.o(.text.osRtxMemoryPoolAlloc)
    osRtxMemoryPoolFree                      0x08000a39   Thumb Code    90  rtx_mempool.o(.text.osRtxMemoryPoolFree)
    osRtxMemoryPoolInit                      0x08000a95   Thumb Code    80  rtx_mempool.o(.text.osRtxMemoryPoolInit)
    osRtxMessageQueuePostProcess             0x08000ae5   Thumb Code   446  rtx_msgqueue.o(.text.osRtxMessageQueuePostProcess)
    osRtxMutexOwnerRelease                   0x08000ca5   Thumb Code    76  rtx_mutex.o(.text.osRtxMutexOwnerRelease)
    osRtxPendSV_Handler                      0x08000cf1   Thumb Code   168  rtx_system.o(.text.osRtxPendSV_Handler)
    osRtxPostProcess                         0x08000d99   Thumb Code   120  rtx_system.o(.text.osRtxPostProcess)
    osRtxSysTimerAckIRQ                      0x08000e11   Thumb Code    12  rtx_system.o(.text.osRtxSysTimerAckIRQ)
    osRtxSysTimerEnable                      0x08000e1d   Thumb Code    14  rtx_system.o(.text.osRtxSysTimerEnable)
    osRtxSysTimerSetup                       0x08000e2d   Thumb Code    58  rtx_system.o(.text.osRtxSysTimerSetup)
    osRtxThreadDelayTick                     0x08000e69   Thumb Code   136  rtx_thread.o(.text.osRtxThreadDelayTick)
    osRtxThreadDispatch                      0x08000ef1   Thumb Code   344  rtx_thread.o(.text.osRtxThreadDispatch)
    osRtxThreadListGet                       0x08001049   Thumb Code    26  rtx_thread.o(.text.osRtxThreadListGet)
    osRtxThreadListPut                       0x08001065   Thumb Code    56  rtx_thread.o(.text.osRtxThreadListPut)
    osRtxThreadListRemove                    0x0800109d   Thumb Code    26  rtx_thread.o(.text.osRtxThreadListRemove)
    osRtxThreadListSort                      0x080010b9   Thumb Code    96  rtx_thread.o(.text.osRtxThreadListSort)
    osRtxThreadPostProcess                   0x08001119   Thumb Code   296  rtx_thread.o(.text.osRtxThreadPostProcess)
    osRtxThreadReadyPut                      0x08001241   Thumb Code    72  rtx_thread.o(.text.osRtxThreadReadyPut)
    osRtxThreadRegPtr                        0x08001289   Thumb Code     6  rtx_thread.o(.text.osRtxThreadRegPtr)
    osRtxThreadStackCheck                    0x08001291   Thumb Code    46  rtx_thread.o(.text.osRtxThreadStackCheck)
    osRtxThreadSwitch                        0x080012c1   Thumb Code    18  rtx_thread.o(.text.osRtxThreadSwitch)
    osRtxThreadWaitEnter                     0x080012d5   Thumb Code   226  rtx_thread.o(.text.osRtxThreadWaitEnter)
    osRtxThreadWaitExit                      0x080013b9   Thumb Code   190  rtx_thread.o(.text.osRtxThreadWaitExit)
    osRtxTick_Handler                        0x08001479   Thumb Code   120  rtx_system.o(.text.osRtxTick_Handler)
    osRtxTimerTick                           0x080014f1   Thumb Code   170  rtx_timer.o(.text.osRtxTimerTick)
    osThreadExit                             0x0800159d   Thumb Code    14  rtx_thread.o(.text.osThreadExit)
    osThreadNew                              0x080015ad   Thumb Code    58  rtx_thread.o(.text.osThreadNew)
    osThreadYield                            0x080015e9   Thumb Code    36  rtx_thread.o(.text.osThreadYield)
    svcRtxDelay                              0x0800160d   Thumb Code    20  rtx_delay.o(.text.svcRtxDelay)
    svcRtxKernelGetState                     0x08001621   Thumb Code    12  rtx_kernel.o(.text.svcRtxKernelGetState)
    svcRtxKernelInitialize                   0x0800162d   Thumb Code   428  rtx_kernel.o(.text.svcRtxKernelInitialize)
    svcRtxKernelStart                        0x080017d9   Thumb Code   150  rtx_kernel.o(.text.svcRtxKernelStart)
    svcRtxMessageQueueGet                    0x08001871   Thumb Code   410  rtx_msgqueue.o(.text.svcRtxMessageQueueGet)
    svcRtxMessageQueueGetSpace               0x08001a0d   Thumb Code    26  rtx_msgqueue.o(.text.svcRtxMessageQueueGetSpace)
    svcRtxMessageQueueNew                    0x08001a29   Thumb Code   352  rtx_msgqueue.o(.text.svcRtxMessageQueueNew)
    svcRtxMessageQueuePut                    0x08001b89   Thumb Code   280  rtx_msgqueue.o(.text.svcRtxMessageQueuePut)
    svcRtxMutexAcquire                       0x08001ca1   Thumb Code   158  rtx_mutex.o(.text.svcRtxMutexAcquire)
    svcRtxMutexDelete                        0x08001d41   Thumb Code   214  rtx_mutex.o(.text.svcRtxMutexDelete)
    svcRtxMutexNew                           0x08001e19   Thumb Code   114  rtx_mutex.o(.text.svcRtxMutexNew)
    svcRtxMutexRelease                       0x08001e8d   Thumb Code   200  rtx_mutex.o(.text.svcRtxMutexRelease)
    svcRtxThreadExit                         0x08001f55   Thumb Code   322  rtx_thread.o(.text.svcRtxThreadExit)
    svcRtxThreadNew                          0x08002099   Thumb Code   576  rtx_thread.o(.text.svcRtxThreadNew)
    svcRtxThreadYield                        0x080022d9   Thumb Code   142  rtx_thread.o(.text.svcRtxThreadYield)
    GPIO_Init                                0x08002367   Thumb Code   278  stm32f10x_gpio.o(i.GPIO_Init)
    GPIO_ResetBits                           0x0800247d   Thumb Code     4  stm32f10x_gpio.o(i.GPIO_ResetBits)
    GPIO_SetBits                             0x08002481   Thumb Code     4  stm32f10x_gpio.o(i.GPIO_SetBits)
    GPIO_WriteBit                            0x08002485   Thumb Code    10  stm32f10x_gpio.o(i.GPIO_WriteBit)
    LED_heartbeat                            0x08002491   Thumb Code    16  led_driver.o(i.LED_heartbeat)
    LED_init                                 0x080024a5   Thumb Code    80  led_driver.o(i.LED_init)
    LED_triangle_l                           0x080024f9   Thumb Code    40  led_driver.o(i.LED_triangle_l)
    NVIC_Init                                0x08002525   Thumb Code   100  misc.o(i.NVIC_Init)
    RCC_APB1PeriphClockCmd                   0x08002595   Thumb Code    26  stm32f10x_rcc.o(i.RCC_APB1PeriphClockCmd)
    RCC_APB1PeriphResetCmd                   0x080025b5   Thumb Code    26  stm32f10x_rcc.o(i.RCC_APB1PeriphResetCmd)
    RCC_APB2PeriphClockCmd                   0x080025d5   Thumb Code    26  stm32f10x_rcc.o(i.RCC_APB2PeriphClockCmd)
    RCC_APB2PeriphResetCmd                   0x080025f5   Thumb Code    26  stm32f10x_rcc.o(i.RCC_APB2PeriphResetCmd)
    RCC_GetClocksFreq                        0x08002615   Thumb Code   374  stm32f10x_rcc.o(i.RCC_GetClocksFreq)
    SystemCoreClockUpdate                    0x080028c5   Thumb Code   232  system_stm32f10x.o(i.SystemCoreClockUpdate)
    SystemInit                               0x080029c5   Thumb Code    92  system_stm32f10x.o(i.SystemInit)
    USART1_IRQHandler                        0x08002a31   Thumb Code    30  svvis_cortex_threads.o(i.USART1_IRQHandler)
    USART2_IRQHandler                        0x08002a59   Thumb Code    30  svvis_cortex_threads.o(i.USART2_IRQHandler)
    USART3_IRQHandler                        0x08002a81   Thumb Code    30  svvis_cortex_threads.o(i.USART3_IRQHandler)
    USART_ClockInit                          0x08002aa9   Thumb Code    34  stm32f10x_usart.o(i.USART_ClockInit)
    USART_Cmd                                0x08002acb   Thumb Code    24  stm32f10x_usart.o(i.USART_Cmd)
    USART_DeInit                             0x08002ae5   Thumb Code   134  stm32f10x_usart.o(i.USART_DeInit)
    USART_GetFlagStatus                      0x08002b81   Thumb Code    26  stm32f10x_usart.o(i.USART_GetFlagStatus)
    USART_ITConfig                           0x08002b9b   Thumb Code    74  stm32f10x_usart.o(i.USART_ITConfig)
    USART_Init                               0x08002be5   Thumb Code   210  stm32f10x_usart.o(i.USART_Init)
    USART_ReceiveData                        0x08002cbd   Thumb Code    10  stm32f10x_usart.o(i.USART_ReceiveData)
    USART_SendData                           0x08002cc7   Thumb Code     8  stm32f10x_usart.o(i.USART_SendData)
    init_usart(USART_TypeDef*, unsigned)     0x08002cd1   Thumb Code   378  svvis_cortex.o(i._Z10init_usartP13USART_TypeDefj)
    recv_thread(void*)                       0x08002e61   Thumb Code   186  svvis_cortex_threads.o(i._Z11recv_threadPv)
    send_thread(void*)                       0x08002f1b   Thumb Code    46  svvis_cortex_threads.o(i._Z11send_threadPv)
    LED_heartbeat(void*)                     0x08002f49   Thumb Code    32  main.o(i._Z13LED_heartbeatPv)
    USART_send_byte(USART_TypeDef*, unsigned char) 0x08002f69   Thumb Code    34  svvis_cortex.o(i._Z15USART_send_byteP13USART_TypeDefh)
    USART_send_bytes(USART_TypeDef*, void*, unsigned) 0x08002f8b   Thumb Code    32  svvis_cortex.o(i._Z16USART_send_bytesP13USART_TypeDefPvj)
    main_thread_func(void*)                  0x08002fad   Thumb Code   100  main.o(i._Z16main_thread_funcPv)
    chid2len(unsigned char)                  0x08003099   Thumb Code    50  svvis_cortex_threads.o(i._Z8chid2lenh)
    SvVis3_t::init(USART_TypeDef*, unsigned) 0x080030cd   Thumb Code   114  svvis_cortex.o(i._ZN8SvVis3_t4initEP13USART_TypeDefj)
    SvVis3_t::recv_msg(SvVis3_message_t&)    0x08003161   Thumb Code    22  svvis_cortex.o(i._ZN8SvVis3_t8recv_msgER16SvVis3_message_t)
    SvVis3_t::send_msg(SvVis3_message_t&)    0x08003177   Thumb Code    38  svvis_cortex.o(i._ZN8SvVis3_t8send_msgER16SvVis3_message_t)
    SvVis3_t::send_str(const char*)          0x0800319d   Thumb Code    74  svvis_cortex.o(i._ZN8SvVis3_t8send_strEPKc)
    _mutex_acquire                           0x080031e7   Thumb Code    22  rtx_lib.o(i._mutex_acquire)
    _mutex_free                              0x080031fd   Thumb Code    12  rtx_lib.o(i._mutex_free)
    _mutex_initialize                        0x08003209   Thumb Code    32  rtx_lib.o(i._mutex_initialize)
    _mutex_release                           0x08003229   Thumb Code    18  rtx_lib.o(i._mutex_release)
    _platform_post_stackheap_init            0x0800323b   Thumb Code     8  rtx_lib.o(i._platform_post_stackheap_init)
    generate_pwm                             0x08003245   Thumb Code    64  motor_driver.o(i.generate_pwm)
    main                                     0x08003295   Thumb Code   134  main.o(i.main)
    motor_cmd_bin                            0x08003331   Thumb Code   152  motor_driver.o(i.motor_cmd_bin)
    motor_cmd_str                            0x080033d1   Thumb Code   102  motor_driver.o(i.motor_cmd_str)
    motor_init                               0x08003451   Thumb Code   104  motor_driver.o(i.motor_init)
    osRtxErrorNotify                         0x080034c1   Thumb Code    32  rtx_config.o(i.osRtxErrorNotify)
    osRtxIdleThread                          0x080034e1   Thumb Code     4  rtx_config.o(i.osRtxIdleThread)
    __aeabi_d2uiz                            0x08003509   Thumb Code     0  dfixu.o(x$fpl$dfixu)
    _dfixu                                   0x08003509   Thumb Code    90  dfixu.o(x$fpl$dfixu)
    __aeabi_dmul                             0x08003565   Thumb Code     0  dmul.o(x$fpl$dmul)
    _dmul                                    0x08003565   Thumb Code   332  dmul.o(x$fpl$dmul)
    __fpl_dnaninf                            0x080036b9   Thumb Code   156  dnaninf.o(x$fpl$dnaninf)
    __fpl_dretinf                            0x08003755   Thumb Code    12  dretinf.o(x$fpl$dretinf)
    __I$use$fp                               0x08003760   Number         0  usenofp.o(x$fpl$usenofp)
    osRtxUserSVC                             0x080037c0   Data           4  rtx_lib.o(.constdata)
    irqRtxLib                                0x080037c4   Data           1  irq_cm3.o(.constdata)
    osRtxConfig                              0x080037c8   Data         104  rtx_lib.o(.rodata)
    Region$$Table$$Base                      0x0800383c   Number         0  anon$$obj.o(Region$$Table)
    Region$$Table$$Limit                     0x0800385c   Number         0  anon$$obj.o(Region$$Table)
    _usart1_handler                          0x200014d0   Data           4  svvis_cortex.o(.data)
    _usart2_handler                          0x200014d4   Data           4  svvis_cortex.o(.data)
    _usart3_handler                          0x200014d8   Data           4  svvis_cortex.o(.data)
    main_thread_handle                       0x200014dc   Data           4  main.o(.data)
    heartbeat_thread_handle                  0x200014e0   Data           4  main.o(.data)
    DUTY_CYCLE                               0x200014e8   Data           8  motor_driver.o(.data)
    running                                  0x200014f0   Data           1  motor_driver.o(.data)
    irqRtxLibRef                             0x200014f4   Data           4  rtx_lib.o(.data)
    SystemCoreClock                          0x20001510   Data           4  system_stm32f10x.o(.data)
    AHBPrescTable                            0x20001514   Data          16  system_stm32f10x.o(.data)
    osRtxInfo                                0x20001528   Data         168  rtx_kernel.o(.data.os)
    __libspace_start                         0x200015d0   Data          96  libspace.o(.bss)
    __temporary_stack_top$libspace           0x20001630   Data           0  libspace.o(.bss)



==============================================================================

Memory Map of the image

  Image Entry point : 0x08000235

  Load Region LR_1 (Base: 0x08000000, Size: 0x00004e2c, Max: 0xffffffff, ABSOLUTE, COMPRESSED[0x000038b0])

    Execution Region ER_RO (Exec base: 0x08000000, Load base: 0x08000000, Size: 0x0000385c, Max: 0xffffffff, ABSOLUTE)

    Exec Addr    Load Addr    Size         Type   Attr      Idx    E Section Name        Object

    0x08000000   0x08000000   0x00000150   Data   RO         1147    RESET               startup_stm32f10x_cl.o
    0x08000150   0x08000150   0x00000008   Code   RO         1665  * !!!main             c_w.l(__main.o)
    0x08000158   0x08000158   0x00000034   Code   RO         1847    !!!scatter          c_w.l(__scatter.o)
    0x0800018c   0x0800018c   0x0000005a   Code   RO         1845    !!dczerorl2         c_w.l(__dczerorl2.o)
    0x080001e6   0x080001e6   0x00000002   PAD
    0x080001e8   0x080001e8   0x0000001c   Code   RO         1849    !!handler_zi        c_w.l(__scatter_zi.o)
    0x08000204   0x08000204   0x00000002   Code   RO         1715    .ARM.Collect$$libinit$$00000000  c_w.l(libinit.o)
    0x08000206   0x08000206   0x00000000   Code   RO         1722    .ARM.Collect$$libinit$$00000002  c_w.l(libinit2.o)
    0x08000206   0x08000206   0x00000000   Code   RO         1724    .ARM.Collect$$libinit$$00000004  c_w.l(libinit2.o)
    0x08000206   0x08000206   0x00000000   Code   RO         1727    .ARM.Collect$$libinit$$0000000A  c_w.l(libinit2.o)
    0x08000206   0x08000206   0x00000000   Code   RO         1729    .ARM.Collect$$libinit$$0000000C  c_w.l(libinit2.o)
    0x08000206   0x08000206   0x00000000   Code   RO         1731    .ARM.Collect$$libinit$$0000000E  c_w.l(libinit2.o)
    0x08000206   0x08000206   0x00000000   Code   RO         1734    .ARM.Collect$$libinit$$00000011  c_w.l(libinit2.o)
    0x08000206   0x08000206   0x00000000   Code   RO         1736    .ARM.Collect$$libinit$$00000013  c_w.l(libinit2.o)
    0x08000206   0x08000206   0x00000000   Code   RO         1738    .ARM.Collect$$libinit$$00000015  c_w.l(libinit2.o)
    0x08000206   0x08000206   0x00000000   Code   RO         1740    .ARM.Collect$$libinit$$00000017  c_w.l(libinit2.o)
    0x08000206   0x08000206   0x00000000   Code   RO         1742    .ARM.Collect$$libinit$$00000019  c_w.l(libinit2.o)
    0x08000206   0x08000206   0x00000000   Code   RO         1744    .ARM.Collect$$libinit$$0000001B  c_w.l(libinit2.o)
    0x08000206   0x08000206   0x00000000   Code   RO         1746    .ARM.Collect$$libinit$$0000001D  c_w.l(libinit2.o)
    0x08000206   0x08000206   0x00000000   Code   RO         1748    .ARM.Collect$$libinit$$0000001F  c_w.l(libinit2.o)
    0x08000206   0x08000206   0x00000000   Code   RO         1750    .ARM.Collect$$libinit$$00000021  c_w.l(libinit2.o)
    0x08000206   0x08000206   0x00000000   Code   RO         1752    .ARM.Collect$$libinit$$00000023  c_w.l(libinit2.o)
    0x08000206   0x08000206   0x00000000   Code   RO         1754    .ARM.Collect$$libinit$$00000025  c_w.l(libinit2.o)
    0x08000206   0x08000206   0x00000000   Code   RO         1758    .ARM.Collect$$libinit$$0000002C  c_w.l(libinit2.o)
    0x08000206   0x08000206   0x00000000   Code   RO         1760    .ARM.Collect$$libinit$$0000002E  c_w.l(libinit2.o)
    0x08000206   0x08000206   0x00000000   Code   RO         1762    .ARM.Collect$$libinit$$00000030  c_w.l(libinit2.o)
    0x08000206   0x08000206   0x00000000   Code   RO         1764    .ARM.Collect$$libinit$$00000032  c_w.l(libinit2.o)
    0x08000206   0x08000206   0x00000002   Code   RO         1765    .ARM.Collect$$libinit$$00000033  c_w.l(libinit2.o)
    0x08000208   0x08000208   0x00000002   Code   RO         1785    .ARM.Collect$$libshutdown$$00000000  c_w.l(libshutdown.o)
    0x0800020a   0x0800020a   0x00000000   Code   RO         1798    .ARM.Collect$$libshutdown$$00000002  c_w.l(libshutdown2.o)
    0x0800020a   0x0800020a   0x00000000   Code   RO         1800    .ARM.Collect$$libshutdown$$00000004  c_w.l(libshutdown2.o)
    0x0800020a   0x0800020a   0x00000000   Code   RO         1803    .ARM.Collect$$libshutdown$$00000007  c_w.l(libshutdown2.o)
    0x0800020a   0x0800020a   0x00000000   Code   RO         1806    .ARM.Collect$$libshutdown$$0000000A  c_w.l(libshutdown2.o)
    0x0800020a   0x0800020a   0x00000000   Code   RO         1808    .ARM.Collect$$libshutdown$$0000000C  c_w.l(libshutdown2.o)
    0x0800020a   0x0800020a   0x00000000   Code   RO         1811    .ARM.Collect$$libshutdown$$0000000F  c_w.l(libshutdown2.o)
    0x0800020a   0x0800020a   0x00000002   Code   RO         1812    .ARM.Collect$$libshutdown$$00000010  c_w.l(libshutdown2.o)
    0x0800020c   0x0800020c   0x00000000   Code   RO         1683    .ARM.Collect$$rtentry$$00000000  c_w.l(__rtentry.o)
    0x0800020c   0x0800020c   0x00000000   Code   RO         1694    .ARM.Collect$$rtentry$$00000002  c_w.l(__rtentry2.o)
    0x0800020c   0x0800020c   0x00000006   Code   RO         1706    .ARM.Collect$$rtentry$$00000004  c_w.l(__rtentry4.o)
    0x08000212   0x08000212   0x00000008   Code   RO         1695    .ARM.Collect$$rtentry$$00000008  c_w.l(__rtentry2.o)
    0x0800021a   0x0800021a   0x00000004   Code   RO         1697    .ARM.Collect$$rtentry$$0000000A  c_w.l(__rtentry2.o)
    0x0800021e   0x0800021e   0x00000000   Code   RO         1699    .ARM.Collect$$rtentry$$0000000C  c_w.l(__rtentry2.o)
    0x0800021e   0x0800021e   0x00000008   Code   RO         1700    .ARM.Collect$$rtentry$$0000000D  c_w.l(__rtentry2.o)
    0x08000226   0x08000226   0x00000002   Code   RO         1719    .ARM.Collect$$rtexit$$00000000  c_w.l(rtexit.o)
    0x08000228   0x08000228   0x00000000   Code   RO         1767    .ARM.Collect$$rtexit$$00000002  c_w.l(rtexit2.o)
    0x08000228   0x08000228   0x00000004   Code   RO         1768    .ARM.Collect$$rtexit$$00000003  c_w.l(rtexit2.o)
    0x0800022c   0x0800022c   0x00000006   Code   RO         1769    .ARM.Collect$$rtexit$$00000004  c_w.l(rtexit2.o)
    0x08000232   0x08000232   0x00000002   PAD
    0x08000234   0x08000234   0x00000040   Code   RO         1148  * .text               startup_stm32f10x_cl.o
    0x08000274   0x08000274   0x00000088   Code   RO         1505    .text               RTX_CM3.lib(irq_cm3.o)
    0x080002fc   0x080002fc   0x0000003e   Code   RO         1651    .text               c_w.l(strlen.o)
    0x0800033a   0x0800033a   0x0000008a   Code   RO         1653    .text               c_w.l(rt_memcpy_v6.o)
    0x080003c4   0x080003c4   0x00000010   Code   RO         1655    .text               c_w.l(aeabi_memset4.o)
    0x080003d4   0x080003d4   0x00000044   Code   RO         1657    .text               c_w.l(rt_memclr.o)
    0x08000418   0x08000418   0x0000004e   Code   RO         1659    .text               c_w.l(rt_memclr_w.o)
    0x08000466   0x08000466   0x00000002   PAD
    0x08000468   0x08000468   0x00000080   Code   RO         1661    .text               c_w.l(strcmpv7m.o)
    0x080004e8   0x080004e8   0x00000006   Code   RO         1663    .text               c_w.l(heapauxi.o)
    0x080004ee   0x080004ee   0x00000064   Code   RO         1684    .text               c_w.l(rt_memcpy_w.o)
    0x08000552   0x08000552   0x0000004a   Code   RO         1708    .text               c_w.l(sys_stackheap_outer.o)
    0x0800059c   0x0800059c   0x00000012   Code   RO         1710    .text               c_w.l(exit.o)
    0x080005ae   0x080005ae   0x00000002   PAD
    0x080005b0   0x080005b0   0x00000008   Code   RO         1716    .text               c_w.l(libspace.o)
    0x080005b8   0x080005b8   0x0000000c   Code   RO         1777    .text               c_w.l(sys_exit.o)
    0x080005c4   0x080005c4   0x00000002   Code   RO         1788    .text               c_w.l(use_no_semi.o)
    0x080005c6   0x080005c6   0x00000000   Code   RO         1790    .text               c_w.l(indicate_semi.o)
    0x080005c6   0x080005c6   0x00000002   PAD
    0x080005c8   0x080005c8   0x00000024   Code   RO         1400    .text.osDelay       RTX_CM3.lib(rtx_delay.o)
    0x080005ec   0x080005ec   0x0000003a   Code   RO         1229    .text.osKernelGetState  RTX_CM3.lib(rtx_kernel.o)
    0x08000626   0x08000626   0x00000002   PAD
    0x08000628   0x08000628   0x0000003c   Code   RO         1225    .text.osKernelInitialize  RTX_CM3.lib(rtx_kernel.o)
    0x08000664   0x08000664   0x0000003c   Code   RO         1231    .text.osKernelStart  RTX_CM3.lib(rtx_kernel.o)
    0x080006a0   0x080006a0   0x000000b4   Code   RO         1480    .text.osMessageQueueGet  RTX_CM3.lib(rtx_msgqueue.o)
    0x08000754   0x08000754   0x00000038   Code   RO         1488    .text.osMessageQueueGetSpace  RTX_CM3.lib(rtx_msgqueue.o)
    0x0800078c   0x0800078c   0x0000003a   Code   RO         1474    .text.osMessageQueueNew  RTX_CM3.lib(rtx_msgqueue.o)
    0x080007c6   0x080007c6   0x00000002   PAD
    0x080007c8   0x080007c8   0x00000084   Code   RO         1478    .text.osMessageQueuePut  RTX_CM3.lib(rtx_msgqueue.o)
    0x0800084c   0x0800084c   0x00000024   Code   RO         1433    .text.osMutexAcquire  RTX_CM3.lib(rtx_mutex.o)
    0x08000870   0x08000870   0x00000024   Code   RO         1439    .text.osMutexDelete  RTX_CM3.lib(rtx_mutex.o)
    0x08000894   0x08000894   0x0000003a   Code   RO         1429    .text.osMutexNew    RTX_CM3.lib(rtx_mutex.o)
    0x080008ce   0x080008ce   0x00000002   PAD
    0x080008d0   0x080008d0   0x00000024   Code   RO         1435    .text.osMutexRelease  RTX_CM3.lib(rtx_mutex.o)
    0x080008f4   0x080008f4   0x0000006e   Code   RO         1551    .text.osRtxMemoryAlloc  RTX_CM3.lib(rtx_memory.o)
    0x08000962   0x08000962   0x00000002   PAD
    0x08000964   0x08000964   0x00000058   Code   RO         1553    .text.osRtxMemoryFree  RTX_CM3.lib(rtx_memory.o)
    0x080009bc   0x080009bc   0x00000030   Code   RO         1549    .text.osRtxMemoryInit  RTX_CM3.lib(rtx_memory.o)
    0x080009ec   0x080009ec   0x0000004c   Code   RO         1568    .text.osRtxMemoryPoolAlloc  RTX_CM3.lib(rtx_mempool.o)
    0x08000a38   0x08000a38   0x0000005a   Code   RO         1570    .text.osRtxMemoryPoolFree  RTX_CM3.lib(rtx_mempool.o)
    0x08000a92   0x08000a92   0x00000002   PAD
    0x08000a94   0x08000a94   0x00000050   Code   RO         1566    .text.osRtxMemoryPoolInit  RTX_CM3.lib(rtx_mempool.o)
    0x08000ae4   0x08000ae4   0x000001be   Code   RO         1452    .text.osRtxMessageQueuePostProcess  RTX_CM3.lib(rtx_msgqueue.o)
    0x08000ca2   0x08000ca2   0x00000002   PAD
    0x08000ca4   0x08000ca4   0x0000004c   Code   RO         1415    .text.osRtxMutexOwnerRelease  RTX_CM3.lib(rtx_mutex.o)
    0x08000cf0   0x08000cf0   0x000000a8   Code   RO         1625    .text.osRtxPendSV_Handler  RTX_CM3.lib(rtx_system.o)
    0x08000d98   0x08000d98   0x00000078   Code   RO         1627    .text.osRtxPostProcess  RTX_CM3.lib(rtx_system.o)
    0x08000e10   0x08000e10   0x0000000c   Code   RO         1623    .text.osRtxSysTimerAckIRQ  RTX_CM3.lib(rtx_system.o)
    0x08000e1c   0x08000e1c   0x0000000e   Code   RO         1631    .text.osRtxSysTimerEnable  RTX_CM3.lib(rtx_system.o)
    0x08000e2a   0x08000e2a   0x00000002   PAD
    0x08000e2c   0x08000e2c   0x0000003a   Code   RO         1629    .text.osRtxSysTimerSetup  RTX_CM3.lib(rtx_system.o)
    0x08000e66   0x08000e66   0x00000002   PAD
    0x08000e68   0x08000e68   0x00000088   Code   RO         1283    .text.osRtxThreadDelayTick  RTX_CM3.lib(rtx_thread.o)
    0x08000ef0   0x08000ef0   0x00000158   Code   RO         1293    .text.osRtxThreadDispatch  RTX_CM3.lib(rtx_thread.o)
    0x08001048   0x08001048   0x0000001a   Code   RO         1267    .text.osRtxThreadListGet  RTX_CM3.lib(rtx_thread.o)
    0x08001062   0x08001062   0x00000002   PAD
    0x08001064   0x08001064   0x00000038   Code   RO         1265    .text.osRtxThreadListPut  RTX_CM3.lib(rtx_thread.o)
    0x0800109c   0x0800109c   0x0000001a   Code   RO         1273    .text.osRtxThreadListRemove  RTX_CM3.lib(rtx_thread.o)
    0x080010b6   0x080010b6   0x00000002   PAD
    0x080010b8   0x080010b8   0x00000060   Code   RO         1271    .text.osRtxThreadListSort  RTX_CM3.lib(rtx_thread.o)
    0x08001118   0x08001118   0x00000128   Code   RO         1299    .text.osRtxThreadPostProcess  RTX_CM3.lib(rtx_thread.o)
    0x08001240   0x08001240   0x00000048   Code   RO         1277    .text.osRtxThreadReadyPut  RTX_CM3.lib(rtx_thread.o)
    0x08001288   0x08001288   0x00000006   Code   RO         1285    .text.osRtxThreadRegPtr  RTX_CM3.lib(rtx_thread.o)
    0x0800128e   0x0800128e   0x00000002   PAD
    0x08001290   0x08001290   0x0000002e   Code   RO         1291    .text.osRtxThreadStackCheck  RTX_CM3.lib(rtx_thread.o)
    0x080012be   0x080012be   0x00000002   PAD
    0x080012c0   0x080012c0   0x00000012   Code   RO         1289    .text.osRtxThreadSwitch  RTX_CM3.lib(rtx_thread.o)
    0x080012d2   0x080012d2   0x00000002   PAD
    0x080012d4   0x080012d4   0x000000e2   Code   RO         1297    .text.osRtxThreadWaitEnter  RTX_CM3.lib(rtx_thread.o)
    0x080013b6   0x080013b6   0x00000002   PAD
    0x080013b8   0x080013b8   0x000000be   Code   RO         1295    .text.osRtxThreadWaitExit  RTX_CM3.lib(rtx_thread.o)
    0x08001476   0x08001476   0x00000002   PAD
    0x08001478   0x08001478   0x00000078   Code   RO         1621    .text.osRtxTick_Handler  RTX_CM3.lib(rtx_system.o)
    0x080014f0   0x080014f0   0x000000aa   Code   RO         1510    .text.osRtxTimerTick  RTX_CM3.lib(rtx_timer.o)
    0x0800159a   0x0800159a   0x00000002   PAD
    0x0800159c   0x0800159c   0x0000000e   Code   RO         1303    .text.osThreadExit  RTX_CM3.lib(rtx_thread.o)
    0x080015aa   0x080015aa   0x00000002   PAD
    0x080015ac   0x080015ac   0x0000003a   Code   RO         1345    .text.osThreadNew   RTX_CM3.lib(rtx_thread.o)
    0x080015e6   0x080015e6   0x00000002   PAD
    0x080015e8   0x080015e8   0x00000024   Code   RO         1361    .text.osThreadYield  RTX_CM3.lib(rtx_thread.o)
    0x0800160c   0x0800160c   0x00000014   Code   RO         1396    .text.svcRtxDelay   RTX_CM3.lib(rtx_delay.o)
    0x08001620   0x08001620   0x0000000c   Code   RO         1203    .text.svcRtxKernelGetState  RTX_CM3.lib(rtx_kernel.o)
    0x0800162c   0x0800162c   0x000001ac   Code   RO         1199    .text.svcRtxKernelInitialize  RTX_CM3.lib(rtx_kernel.o)
    0x080017d8   0x080017d8   0x00000096   Code   RO         1205    .text.svcRtxKernelStart  RTX_CM3.lib(rtx_kernel.o)
    0x0800186e   0x0800186e   0x00000002   PAD
    0x08001870   0x08001870   0x0000019a   Code   RO         1460    .text.svcRtxMessageQueueGet  RTX_CM3.lib(rtx_msgqueue.o)
    0x08001a0a   0x08001a0a   0x00000002   PAD
    0x08001a0c   0x08001a0c   0x0000001a   Code   RO         1468    .text.svcRtxMessageQueueGetSpace  RTX_CM3.lib(rtx_msgqueue.o)
    0x08001a26   0x08001a26   0x00000002   PAD
    0x08001a28   0x08001a28   0x00000160   Code   RO         1454    .text.svcRtxMessageQueueNew  RTX_CM3.lib(rtx_msgqueue.o)
    0x08001b88   0x08001b88   0x00000118   Code   RO         1458    .text.svcRtxMessageQueuePut  RTX_CM3.lib(rtx_msgqueue.o)
    0x08001ca0   0x08001ca0   0x0000009e   Code   RO         1421    .text.svcRtxMutexAcquire  RTX_CM3.lib(rtx_mutex.o)
    0x08001d3e   0x08001d3e   0x00000002   PAD
    0x08001d40   0x08001d40   0x000000d6   Code   RO         1427    .text.svcRtxMutexDelete  RTX_CM3.lib(rtx_mutex.o)
    0x08001e16   0x08001e16   0x00000002   PAD
    0x08001e18   0x08001e18   0x00000072   Code   RO         1417    .text.svcRtxMutexNew  RTX_CM3.lib(rtx_mutex.o)
    0x08001e8a   0x08001e8a   0x00000002   PAD
    0x08001e8c   0x08001e8c   0x000000c8   Code   RO         1423    .text.svcRtxMutexRelease  RTX_CM3.lib(rtx_mutex.o)
    0x08001f54   0x08001f54   0x00000142   Code   RO         1329    .text.svcRtxThreadExit  RTX_CM3.lib(rtx_thread.o)
    0x08002096   0x08002096   0x00000002   PAD
    0x08002098   0x08002098   0x00000240   Code   RO         1301    .text.svcRtxThreadNew  RTX_CM3.lib(rtx_thread.o)
    0x080022d8   0x080022d8   0x0000008e   Code   RO         1319    .text.svcRtxThreadYield  RTX_CM3.lib(rtx_thread.o)
    0x08002366   0x08002366   0x00000116   Code   RO          570    i.GPIO_Init         stm32f10x_gpio.o
    0x0800247c   0x0800247c   0x00000004   Code   RO          577    i.GPIO_ResetBits    stm32f10x_gpio.o
    0x08002480   0x08002480   0x00000004   Code   RO          578    i.GPIO_SetBits      stm32f10x_gpio.o
    0x08002484   0x08002484   0x0000000a   Code   RO          581    i.GPIO_WriteBit     stm32f10x_gpio.o
    0x0800248e   0x0800248e   0x00000002   PAD
    0x08002490   0x08002490   0x00000014   Code   RO          266    i.LED_heartbeat     led_driver.o
    0x080024a4   0x080024a4   0x00000054   Code   RO          267    i.LED_init          led_driver.o
    0x080024f8   0x080024f8   0x0000002c   Code   RO          268    i.LED_triangle_l    led_driver.o
    0x08002524   0x08002524   0x00000070   Code   RO          516    i.NVIC_Init         misc.o
    0x08002594   0x08002594   0x00000020   Code   RO          693    i.RCC_APB1PeriphClockCmd  stm32f10x_rcc.o
    0x080025b4   0x080025b4   0x00000020   Code   RO          694    i.RCC_APB1PeriphResetCmd  stm32f10x_rcc.o
    0x080025d4   0x080025d4   0x00000020   Code   RO          695    i.RCC_APB2PeriphClockCmd  stm32f10x_rcc.o
    0x080025f4   0x080025f4   0x00000020   Code   RO          696    i.RCC_APB2PeriphResetCmd  stm32f10x_rcc.o
    0x08002614   0x08002614   0x00000190   Code   RO          703    i.RCC_GetClocksFreq  stm32f10x_rcc.o
    0x080027a4   0x080027a4   0x00000008   Code   RO         1155    i.SetSysClock       system_stm32f10x.o
    0x080027ac   0x080027ac   0x00000118   Code   RO         1156    i.SetSysClockTo72   system_stm32f10x.o
    0x080028c4   0x080028c4   0x00000100   Code   RO         1157    i.SystemCoreClockUpdate  system_stm32f10x.o
    0x080029c4   0x080029c4   0x0000006c   Code   RO         1158    i.SystemInit        system_stm32f10x.o
    0x08002a30   0x08002a30   0x00000028   Code   RO          206    i.USART1_IRQHandler  svvis_cortex_threads.o
    0x08002a58   0x08002a58   0x00000028   Code   RO          207    i.USART2_IRQHandler  svvis_cortex_threads.o
    0x08002a80   0x08002a80   0x00000028   Code   RO          208    i.USART3_IRQHandler  svvis_cortex_threads.o
    0x08002aa8   0x08002aa8   0x00000022   Code   RO          958    i.USART_ClockInit   stm32f10x_usart.o
    0x08002aca   0x08002aca   0x00000018   Code   RO          960    i.USART_Cmd         stm32f10x_usart.o
    0x08002ae2   0x08002ae2   0x00000002   PAD
    0x08002ae4   0x08002ae4   0x0000009c   Code   RO          962    i.USART_DeInit      stm32f10x_usart.o
    0x08002b80   0x08002b80   0x0000001a   Code   RO          963    i.USART_GetFlagStatus  stm32f10x_usart.o
    0x08002b9a   0x08002b9a   0x0000004a   Code   RO          966    i.USART_ITConfig    stm32f10x_usart.o
    0x08002be4   0x08002be4   0x000000d8   Code   RO          967    i.USART_Init        stm32f10x_usart.o
    0x08002cbc   0x08002cbc   0x0000000a   Code   RO          974    i.USART_ReceiveData  stm32f10x_usart.o
    0x08002cc6   0x08002cc6   0x00000008   Code   RO          977    i.USART_SendData    stm32f10x_usart.o
    0x08002cce   0x08002cce   0x00000002   PAD
    0x08002cd0   0x08002cd0   0x00000190   Code   RO            4    i._Z10init_usartP13USART_TypeDefj  svvis_cortex.o
    0x08002e60   0x08002e60   0x000000ba   Code   RO          209    i._Z11recv_threadPv  svvis_cortex_threads.o
    0x08002f1a   0x08002f1a   0x0000002e   Code   RO          210    i._Z11send_threadPv  svvis_cortex_threads.o
    0x08002f48   0x08002f48   0x00000020   Code   RO          151    i._Z13LED_heartbeatPv  main.o
    0x08002f68   0x08002f68   0x00000022   Code   RO            5    i._Z15USART_send_byteP13USART_TypeDefh  svvis_cortex.o
    0x08002f8a   0x08002f8a   0x00000020   Code   RO            6    i._Z16USART_send_bytesP13USART_TypeDefPvj  svvis_cortex.o
    0x08002faa   0x08002faa   0x00000002   PAD
    0x08002fac   0x08002fac   0x000000ec   Code   RO          152    i._Z16main_thread_funcPv  main.o
    0x08003098   0x08003098   0x00000032   Code   RO          211    i._Z8chid2lenh      svvis_cortex_threads.o
    0x080030ca   0x080030ca   0x00000002   PAD
    0x080030cc   0x080030cc   0x00000094   Code   RO            9    i._ZN8SvVis3_t4initEP13USART_TypeDefj  svvis_cortex.o
    0x08003160   0x08003160   0x00000016   Code   RO           10    i._ZN8SvVis3_t8recv_msgER16SvVis3_message_t  svvis_cortex.o
    0x08003176   0x08003176   0x00000026   Code   RO           13    i._ZN8SvVis3_t8send_msgER16SvVis3_message_t  svvis_cortex.o
    0x0800319c   0x0800319c   0x0000004a   Code   RO           14    i._ZN8SvVis3_t8send_strEPKc  svvis_cortex.o
    0x080031e6   0x080031e6   0x00000016   Code   RO          406    i._mutex_acquire    rtx_lib.o
    0x080031fc   0x080031fc   0x0000000c   Code   RO          407    i._mutex_free       rtx_lib.o
    0x08003208   0x08003208   0x00000020   Code   RO          408    i._mutex_initialize  rtx_lib.o
    0x08003228   0x08003228   0x00000012   Code   RO          409    i._mutex_release    rtx_lib.o
    0x0800323a   0x0800323a   0x00000008   Code   RO          410    i._platform_post_stackheap_init  rtx_lib.o
    0x08003242   0x08003242   0x00000002   PAD
    0x08003244   0x08003244   0x00000050   Code   RO          347    i.generate_pwm      motor_driver.o
    0x08003294   0x08003294   0x0000009c   Code   RO          153    i.main              main.o
    0x08003330   0x08003330   0x000000a0   Code   RO          348    i.motor_cmd_bin     motor_driver.o
    0x080033d0   0x080033d0   0x00000080   Code   RO          349    i.motor_cmd_str     motor_driver.o
    0x08003450   0x08003450   0x00000070   Code   RO          350    i.motor_init        motor_driver.o
    0x080034c0   0x080034c0   0x00000020   Code   RO          482    i.osRtxErrorNotify  rtx_config.o
    0x080034e0   0x080034e0   0x00000004   Code   RO          483    i.osRtxIdleThread   rtx_config.o
    0x080034e4   0x080034e4   0x00000024   Code   RO          411    i.os_kernel_is_active  rtx_lib.o
    0x08003508   0x08003508   0x0000005a   Code   RO         1667    x$fpl$dfixu         fz_ws.l(dfixu.o)
    0x08003562   0x08003562   0x00000002   PAD
    0x08003564   0x08003564   0x00000154   Code   RO         1671    x$fpl$dmul          fz_ws.l(dmul.o)
    0x080036b8   0x080036b8   0x0000009c   Code   RO         1686    x$fpl$dnaninf       fz_ws.l(dnaninf.o)
    0x08003754   0x08003754   0x0000000c   Code   RO         1688    x$fpl$dretinf       fz_ws.l(dretinf.o)
    0x08003760   0x08003760   0x00000000   Code   RO         1692    x$fpl$usenofp       fz_ws.l(usenofp.o)
    0x08003760   0x08003760   0x00000064   Data   RO          417    .constdata          rtx_lib.o
    0x080037c4   0x080037c4   0x00000001   Data   RO         1504    .constdata          RTX_CM3.lib(irq_cm3.o)
    0x080037c5   0x080037c5   0x00000003   PAD
    0x080037c8   0x080037c8   0x00000068   Data   RO          419    .rodata             rtx_lib.o
    0x08003830   0x08003830   0x0000000b   Data   RO         1251    .rodata.str1.4      RTX_CM3.lib(rtx_kernel.o)
    0x0800383b   0x0800383b   0x00000001   PAD
    0x0800383c   0x0800383c   0x00000020   Data   RO         1843    Region$$Table       anon$$obj.o


    Execution Region ER_RW (Exec base: 0x20000000, Load base: 0x0800385c, Size: 0x000015d0, Max: 0xffffffff, ABSOLUTE, COMPRESSED[0x00000054])

    Exec Addr    Load Addr    Size         Type   Attr      Idx    E Section Name        Object

    0x20000000   COMPRESSED   0x00001230   Data   RW          412    .bss.os             rtx_lib.o
    0x20001230   COMPRESSED   0x00000034   Data   RW          413    .bss.os.msgqueue.cb  rtx_lib.o
    0x20001264   COMPRESSED   0x00000050   Data   RW          414    .bss.os.msgqueue.mem  rtx_lib.o
    0x200012b4   COMPRESSED   0x00000088   Data   RW          415    .bss.os.thread.cb   rtx_lib.o
    0x2000133c   COMPRESSED   0x00000004   PAD
    0x20001340   COMPRESSED   0x00000190   Data   RW          416    .bss.os.thread.stack  rtx_lib.o
    0x200014d0   COMPRESSED   0x0000000c   Data   RW           26    .data               svvis_cortex.o
    0x200014dc   COMPRESSED   0x00000008   Data   RW          157    .data               main.o
    0x200014e4   COMPRESSED   0x00000004   PAD
    0x200014e8   COMPRESSED   0x00000009   Data   RW          352    .data               motor_driver.o
    0x200014f1   COMPRESSED   0x00000003   PAD
    0x200014f4   COMPRESSED   0x00000005   Data   RW          418    .data               rtx_lib.o
    0x200014f9   COMPRESSED   0x00000014   Data   RW          731    .data               stm32f10x_rcc.o
    0x2000150d   COMPRESSED   0x00000003   PAD
    0x20001510   COMPRESSED   0x00000014   Data   RW         1159    .data               system_stm32f10x.o
    0x20001524   COMPRESSED   0x00000004   PAD
    0x20001528   COMPRESSED   0x000000a8   Data   RW         1252    .data.os            RTX_CM3.lib(rtx_kernel.o)


    Execution Region ER_ZI (Exec base: 0x200015d0, Load base: 0x080038b0, Size: 0x00000660, Max: 0xffffffff, ABSOLUTE)

    Exec Addr    Load Addr    Size         Type   Attr      Idx    E Section Name        Object

    0x200015d0        -       0x00000060   Zero   RW         1717    .bss                c_w.l(libspace.o)
    0x20001630        -       0x00000200   Zero   RW         1146    HEAP                startup_stm32f10x_cl.o
    0x20001830        -       0x00000400   Zero   RW         1145    STACK               startup_stm32f10x_cl.o


==============================================================================

Image component sizes


      Code (inc. data)   RO Data    RW Data    ZI Data      Debug   Object Name

       148         12          0          0          0     255528   led_driver.o
       424        158          0          8          0       3169   main.o
       112         12          0          0          0       1140   misc.o
       480         64          0          9          0       7074   motor_driver.o
        36          6          0          0          0        965   rtx_config.o
       128          4        204       5329          0      11336   rtx_lib.o
        64         26        336          0       1536        812   startup_stm32f10x_cl.o
       296          0          0          0          0       3828   stm32f10x_gpio.o
       528         50          0         20          0       6612   stm32f10x_rcc.o
       548         28          0          0          0       6998   stm32f10x_usart.o
       748         56          0         12          0     251633   svvis_cortex.o
       402         30          0          0          0       3163   svvis_cortex_threads.o
       652         56          0         20          0       3045   system_stm32f10x.o

    ----------------------------------------------------------------------
      4578        502        572       5416       1536     555303   Object Totals
         0          0         32          0          0          0   (incl. Generated)
        12          0          0         18          0          0   (incl. Padding)

    ----------------------------------------------------------------------

      Code (inc. data)   RO Data    RW Data    ZI Data      Debug   Library Member Name

       136         10          1          0          0        480   irq_cm3.o
        56          0          0          0          0       2892   rtx_delay.o
       768          0         11        168          0      17856   rtx_kernel.o
       246          0          0          0          0       1937   rtx_memory.o
       246          0          0          0          0      17021   rtx_mempool.o
      1940          0          0          0          0      18585   rtx_msgqueue.o
       928          0          0          0          0       8779   rtx_mutex.o
       492          8          0          0          0       8155   rtx_system.o
      2686          0          0          0          0      40733   rtx_thread.o
       170          0          0          0          0       8770   rtx_timer.o
        90          0          0          0          0          0   __dczerorl2.o
         8          0          0          0          0         68   __main.o
         0          0          0          0          0          0   __rtentry.o
        20          0          0          0          0          0   __rtentry2.o
         6          0          0          0          0          0   __rtentry4.o
        52          8          0          0          0          0   __scatter.o
        28          0          0          0          0          0   __scatter_zi.o
        16          0          0          0          0         68   aeabi_memset4.o
        18          0          0          0          0         80   exit.o
         6          0          0          0          0        152   heapauxi.o
         0          0          0          0          0          0   indicate_semi.o
         2          0          0          0          0          0   libinit.o
         2          0          0          0          0          0   libinit2.o
         2          0          0          0          0          0   libshutdown.o
         2          0          0          0          0          0   libshutdown2.o
         8          4          0          0         96         68   libspace.o
        68          0          0          0          0         68   rt_memclr.o
        78          0          0          0          0         80   rt_memclr_w.o
       138          0          0          0          0         68   rt_memcpy_v6.o
       100          0          0          0          0         80   rt_memcpy_w.o
         2          0          0          0          0          0   rtexit.o
        10          0          0          0          0          0   rtexit2.o
       128          0          0          0          0         68   strcmpv7m.o
        62          0          0          0          0         76   strlen.o
        12          4          0          0          0         68   sys_exit.o
        74          0          0          0          0         80   sys_stackheap_outer.o
         2          0          0          0          0         68   use_no_semi.o
        90          4          0          0          0         92   dfixu.o
       340         12          0          0          0        104   dmul.o
       156          4          0          0          0         92   dnaninf.o
        12          0          0          0          0         68   dretinf.o
         0          0          0          0          0          0   usenofp.o

    ----------------------------------------------------------------------
      9262         54         16        168         96     126656   Library Totals
        62          0          4          0          0          0   (incl. Padding)

    ----------------------------------------------------------------------

      Code (inc. data)   RO Data    RW Data    ZI Data      Debug   Library Name

      7668         18         12        168          0     125208   RTX_CM3.lib
       934         16          0          0         96       1092   c_w.l
       598         20          0          0          0        356   fz_ws.l

    ----------------------------------------------------------------------
      9262         54         16        168         96     126656   Library Totals

    ----------------------------------------------------------------------

==============================================================================


      Code (inc. data)   RO Data    RW Data    ZI Data      Debug   

     13840        556        588       5584       1632     678447   Grand Totals
     13840        556        588         84       1632     678447   ELF Image Totals (compressed)
     13840        556        588         84          0          0   ROM Totals

==============================================================================

    Total RO  Size (Code + RO Data)                14428 (  14.09kB)
    Total RW  Size (RW Data + ZI Data)              7216 (   7.05kB)
    Total ROM Size (Code + RO Data + RW Data)      14512 (  14.17kB)

==============================================================================

