Component: ARM Compiler 5.06 update 5 (build 528) Tool: armlink [4d35e2]

==============================================================================

Section Cross References

    svvis_cortex.o(i._ZN13SvVis3_data_t9apply_msgER15SvVis_message_t) refers to fflt_clz.o(x$fpl$fflt) for __aeabi_i2f
    svvis_cortex.o(i._ZN13SvVis3_data_t9apply_msgER15SvVis_message_t) refers to ffix.o(x$fpl$ffix) for __aeabi_f2iz
    svvis_cortex.o(i._ZN7SvVis_t10send_floatEhf) refers to svvis_cortex.o(i._ZN7SvVis_t8send_msgER15SvVis_message_t) for SvVis_t::send_msg(SvVis_message_t&)
    svvis_cortex.o(i._ZN7SvVis_t4initEP13USART_TypeDefj) refers to usart_driver.o(i.init_usart) for init_usart
    svvis_cortex.o(i._ZN7SvVis_t4initEP13USART_TypeDefj) refers to rtx_msgqueue.o(.text.osMessageQueueNew) for osMessageQueueNew
    svvis_cortex.o(i._ZN7SvVis_t4initEP13USART_TypeDefj) refers to rtx_thread.o(.text.osThreadNew) for osThreadNew
    svvis_cortex.o(i._ZN7SvVis_t4initEP13USART_TypeDefj) refers to svvis_cortex.o(.data) for _usart1_handler
    svvis_cortex.o(i._ZN7SvVis_t4initEP13USART_TypeDefj) refers to svvis_cortex_threads.o(i._Z11recv_threadPv) for recv_thread(void*)
    svvis_cortex.o(i._ZN7SvVis_t4initEP13USART_TypeDefj) refers to svvis_cortex_threads.o(i._Z11send_threadPv) for send_thread(void*)
    svvis_cortex.o(i._ZN7SvVis_t8recv_msgER15SvVis_message_t) refers to rtx_msgqueue.o(.text.osMessageQueueGet) for osMessageQueueGet
    svvis_cortex.o(i._ZN7SvVis_t8send_i16Ehs) refers to svvis_cortex.o(i._ZN7SvVis_t8send_msgER15SvVis_message_t) for SvVis_t::send_msg(SvVis_message_t&)
    svvis_cortex.o(i._ZN7SvVis_t8send_i32Ehi) refers to svvis_cortex.o(i._ZN7SvVis_t8send_msgER15SvVis_message_t) for SvVis_t::send_msg(SvVis_message_t&)
    svvis_cortex.o(i._ZN7SvVis_t8send_msgER15SvVis_message_t) refers to rtx_thread.o(.text.osThreadYield) for osThreadYield
    svvis_cortex.o(i._ZN7SvVis_t8send_msgER15SvVis_message_t) refers to rtx_msgqueue.o(.text.osMessageQueueGetSpace) for osMessageQueueGetSpace
    svvis_cortex.o(i._ZN7SvVis_t8send_msgER15SvVis_message_t) refers to rtx_msgqueue.o(.text.osMessageQueuePut) for osMessageQueuePut
    svvis_cortex.o(i._ZN7SvVis_t8send_strEPKc) refers to strlen.o(.text) for strlen
    svvis_cortex.o(i._ZN7SvVis_t8send_strEPKc) refers to rt_memcpy_v6.o(.text) for __aeabi_memcpy
    svvis_cortex.o(i._ZN7SvVis_t8send_strEPKc) refers to svvis_cortex.o(i._ZN7SvVis_t8send_msgER15SvVis_message_t) for SvVis_t::send_msg(SvVis_message_t&)
    svvis_cortex.o(i._ZN7SvVis_t9availableEv) refers to rtx_msgqueue.o(.text.osMessageQueueGetCount) for osMessageQueueGetCount
    svvis_cortex.o(.ARM.exidx) refers to svvis_cortex.o(i._ZN13SvVis3_data_t9apply_msgER15SvVis_message_t) for i._ZN13SvVis3_data_t9apply_msgER15SvVis_message_t
    svvis_cortex.o(.ARM.exidx) refers to svvis_cortex.o(i._ZN7SvVis_t4initEP13USART_TypeDefj) for i._ZN7SvVis_t4initEP13USART_TypeDefj
    svvis_cortex.o(.ARM.exidx) refers to svvis_cortex.o(i._ZN7SvVis_t8send_msgER15SvVis_message_t) for i._ZN7SvVis_t8send_msgER15SvVis_message_t
    svvis_cortex.o(.ARM.exidx) refers to svvis_cortex.o(i._ZN7SvVis_t8send_strEPKc) for i._ZN7SvVis_t8send_strEPKc
    svvis_cortex.o(.ARM.exidx) refers to svvis_cortex.o(i._ZN7SvVis_t8send_i16Ehs) for i._ZN7SvVis_t8send_i16Ehs
    svvis_cortex.o(.ARM.exidx) refers to svvis_cortex.o(i._ZN7SvVis_t8send_i32Ehi) for i._ZN7SvVis_t8send_i32Ehi
    svvis_cortex.o(.ARM.exidx) refers to svvis_cortex.o(i._ZN7SvVis_t10send_floatEhf) for i._ZN7SvVis_t10send_floatEhf
    svvis_cortex.o(.ARM.exidx) refers to svvis_cortex.o(i._ZN7SvVis_t9availableEv) for i._ZN7SvVis_t9availableEv
    svvis_cortex.o(.ARM.exidx) refers to svvis_cortex.o(i._ZN7SvVis_t8recv_msgER15SvVis_message_t) for i._ZN7SvVis_t8recv_msgER15SvVis_message_t
    main.o(i._Z16main_thread_funcPv) refers to motor_driver.o(i.motor_init) for motor_init
    main.o(i._Z16main_thread_funcPv) refers to led_driver.o(i.LED_init) for LED_init
    main.o(i._Z16main_thread_funcPv) refers to led_driver.o(i.LED_triangle_l) for LED_triangle_l
    main.o(i._Z16main_thread_funcPv) refers to rtx_delay.o(.text.osDelay) for osDelay
    main.o(i._Z16main_thread_funcPv) refers to svvis_cortex.o(i._ZN7SvVis_t9availableEv) for SvVis_t::available()
    main.o(i._Z16main_thread_funcPv) refers to rtx_thread.o(.text.osThreadYield) for osThreadYield
    main.o(i._Z16main_thread_funcPv) refers to svvis_cortex.o(i._ZN7SvVis_t8recv_msgER15SvVis_message_t) for SvVis_t::recv_msg(SvVis_message_t&)
    main.o(i._Z16main_thread_funcPv) refers to svvis_cortex.o(i._ZN7SvVis_t8send_strEPKc) for SvVis_t::send_str(const char*)
    main.o(i._Z16main_thread_funcPv) refers to svvis_cortex.o(i._ZN7SvVis_t8send_msgER15SvVis_message_t) for SvVis_t::send_msg(SvVis_message_t&)
    main.o(i._Z16main_thread_funcPv) refers to strcmpv7m.o(.text) for strcmp
    main.o(i._Z16main_thread_funcPv) refers to motor_driver.o(i.motor_cmd_str) for motor_cmd_str
    main.o(i.main) refers to system_stm32f10x.o(i.SystemCoreClockUpdate) for SystemCoreClockUpdate
    main.o(i.main) refers to rtx_kernel.o(.text.osKernelInitialize) for osKernelInitialize
    main.o(i.main) refers to svvis_cortex.o(i._ZN7SvVis_t4initEP13USART_TypeDefj) for SvVis_t::init(USART_TypeDef*, unsigned)
    main.o(i.main) refers to rtx_thread.o(.text.osThreadNew) for osThreadNew
    main.o(i.main) refers to rtx_kernel.o(.text.osKernelStart) for osKernelStart
    main.o(i.main) refers to main.o(i._Z16main_thread_funcPv) for main_thread_func(void*)
    main.o(i.main) refers to main.o(.data) for main_thread_handle
    main.o(.ARM.exidx) refers to main.o(i._Z16main_thread_funcPv) for i._Z16main_thread_funcPv
    main.o(.ARM.exidx) refers to main.o(i.main) for i.main
    svvis_cortex_threads.o(i._Z11recv_threadPv) refers to rtx_msgqueue.o(.text.osMessageQueueGet) for osMessageQueueGet
    svvis_cortex_threads.o(i._Z11recv_threadPv) refers to svvis_cortex_threads.o(i._Z8chid2lenh) for chid2len(unsigned char)
    svvis_cortex_threads.o(i._Z11recv_threadPv) refers to rt_memclr_w.o(.text) for __aeabi_memclr4
    svvis_cortex_threads.o(i._Z11recv_threadPv) refers to rtx_msgqueue.o(.text.osMessageQueuePut) for osMessageQueuePut
    svvis_cortex_threads.o(i._Z11send_threadPv) refers to rtx_msgqueue.o(.text.osMessageQueueGet) for osMessageQueueGet
    svvis_cortex_threads.o(i._Z11send_threadPv) refers to usart_driver.o(i.USART_send_byte) for USART_send_byte
    svvis_cortex_threads.o(i._Z11send_threadPv) refers to usart_driver.o(i.USART_send_bytes) for USART_send_bytes
    svvis_cortex_threads.o(.ARM.exidx) refers to svvis_cortex_threads.o(i._Z8chid2lenh) for i._Z8chid2lenh
    svvis_cortex_threads.o(.ARM.exidx) refers to svvis_cortex_threads.o(i._Z11recv_threadPv) for i._Z11recv_threadPv
    svvis_cortex_threads.o(.ARM.exidx) refers to svvis_cortex_threads.o(i._Z11send_threadPv) for i._Z11send_threadPv
    led_driver.o(i.LED_heartbeat) refers to stm32f10x_gpio.o(i.GPIO_WriteBit) for GPIO_WriteBit
    led_driver.o(i.LED_init) refers to stm32f10x_rcc.o(i.RCC_APB2PeriphClockCmd) for RCC_APB2PeriphClockCmd
    led_driver.o(i.LED_init) refers to stm32f10x_gpio.o(i.GPIO_Init) for GPIO_Init
    led_driver.o(i.LED_init) refers to rtx_thread.o(.text.osThreadNew) for osThreadNew
    led_driver.o(i.LED_init) refers to led_driver.o(i.__LED_heartbeat_function) for __LED_heartbeat_function
    led_driver.o(i.LED_init) refers to led_driver.o(.data) for __LED_heartbeat_handle
    led_driver.o(i.LED_triangle_l) refers to stm32f10x_gpio.o(i.GPIO_WriteBit) for GPIO_WriteBit
    led_driver.o(i.__LED_heartbeat_function) refers to led_driver.o(i.LED_heartbeat) for LED_heartbeat
    led_driver.o(i.__LED_heartbeat_function) refers to rtx_delay.o(.text.osDelay) for osDelay
    motor_driver.o(i.TIM3_IRQHandler) refers to stm32f10x_tim.o(i.TIM_ClearITPendingBit) for TIM_ClearITPendingBit
    motor_driver.o(i.motor_cmd_bin) refers to motor_driver.o(i.motor_stop) for motor_stop
    motor_driver.o(i.motor_cmd_bin) refers to stm32f10x_gpio.o(i.GPIO_SetBits) for GPIO_SetBits
    motor_driver.o(i.motor_cmd_bin) refers to stm32f10x_gpio.o(i.GPIO_ResetBits) for GPIO_ResetBits
    motor_driver.o(i.motor_cmd_bin) refers to rtx_timer.o(.text.osTimerStart) for osTimerStart
    motor_driver.o(i.motor_cmd_bin) refers to motor_driver.o(.data) for os_timer_stop
    motor_driver.o(i.motor_cmd_str) refers to strncmp.o(.text) for strncmp
    motor_driver.o(i.motor_cmd_str) refers to strtoul.o(.text) for strtoul
    motor_driver.o(i.motor_cmd_str) refers to motor_driver.o(i.motor_cmd_bin) for motor_cmd_bin
    motor_driver.o(i.motor_init) refers to stm32f10x_rcc.o(i.RCC_APB2PeriphClockCmd) for RCC_APB2PeriphClockCmd
    motor_driver.o(i.motor_init) refers to stm32f10x_gpio.o(i.GPIO_Init) for GPIO_Init
    motor_driver.o(i.motor_init) refers to motor_driver.o(i.timer_init) for timer_init
    motor_driver.o(i.motor_init) refers to rtx_timer.o(.text.osTimerNew) for osTimerNew
    motor_driver.o(i.motor_init) refers to motor_driver.o(i.motor_stop) for motor_stop
    motor_driver.o(i.motor_init) refers to motor_driver.o(.data) for os_timer_stop
    motor_driver.o(i.motor_stop) refers to stm32f10x_gpio.o(i.GPIO_ResetBits) for GPIO_ResetBits
    motor_driver.o(i.timer_init) refers to stm32f10x_rcc.o(i.RCC_APB2PeriphClockCmd) for RCC_APB2PeriphClockCmd
    motor_driver.o(i.timer_init) refers to stm32f10x_gpio.o(i.GPIO_Init) for GPIO_Init
    motor_driver.o(i.timer_init) refers to stm32f10x_rcc.o(i.RCC_APB1PeriphClockCmd) for RCC_APB1PeriphClockCmd
    motor_driver.o(i.timer_init) refers to stm32f10x_tim.o(i.TIM_TimeBaseInit) for TIM_TimeBaseInit
    motor_driver.o(i.timer_init) refers to dflt_clz.o(x$fpl$dfltu) for __aeabi_ui2d
    motor_driver.o(i.timer_init) refers to dmul.o(x$fpl$dmul) for __aeabi_dmul
    motor_driver.o(i.timer_init) refers to dfixu.o(x$fpl$dfixu) for __aeabi_d2uiz
    motor_driver.o(i.timer_init) refers to stm32f10x_tim.o(i.TIM_OC3Init) for TIM_OC3Init
    motor_driver.o(i.timer_init) refers to stm32f10x_tim.o(i.TIM_ITConfig) for TIM_ITConfig
    motor_driver.o(i.timer_init) refers to stm32f10x_tim.o(i.TIM_OC4Init) for TIM_OC4Init
    motor_driver.o(i.timer_init) refers to stm32f10x_tim.o(i.TIM_Cmd) for TIM_Cmd
    motor_driver.o(i.timer_init) refers to motor_driver.o(.data) for duty_cycle_left
    usart_driver.o(i.USART1_IRQHandler) refers to stm32f10x_usart.o(i.USART_ReceiveData) for USART_ReceiveData
    usart_driver.o(i.USART1_IRQHandler) refers to rtx_msgqueue.o(.text.osMessageQueuePut) for osMessageQueuePut
    usart_driver.o(i.USART1_IRQHandler) refers to svvis_cortex.o(.data) for _usart1_handler
    usart_driver.o(i.USART2_IRQHandler) refers to stm32f10x_usart.o(i.USART_ReceiveData) for USART_ReceiveData
    usart_driver.o(i.USART2_IRQHandler) refers to rtx_msgqueue.o(.text.osMessageQueuePut) for osMessageQueuePut
    usart_driver.o(i.USART2_IRQHandler) refers to svvis_cortex.o(.data) for _usart2_handler
    usart_driver.o(i.USART3_IRQHandler) refers to stm32f10x_usart.o(i.USART_ReceiveData) for USART_ReceiveData
    usart_driver.o(i.USART3_IRQHandler) refers to rtx_msgqueue.o(.text.osMessageQueuePut) for osMessageQueuePut
    usart_driver.o(i.USART3_IRQHandler) refers to svvis_cortex.o(.data) for _usart3_handler
    usart_driver.o(i.USART_send_byte) refers to rtx_thread.o(.text.osThreadYield) for osThreadYield
    usart_driver.o(i.USART_send_byte) refers to stm32f10x_usart.o(i.USART_GetFlagStatus) for USART_GetFlagStatus
    usart_driver.o(i.USART_send_byte) refers to stm32f10x_usart.o(i.USART_SendData) for USART_SendData
    usart_driver.o(i.USART_send_bytes) refers to usart_driver.o(i.USART_send_byte) for USART_send_byte
    usart_driver.o(i.init_usart) refers to system_stm32f10x.o(i.SystemCoreClockUpdate) for SystemCoreClockUpdate
    usart_driver.o(i.init_usart) refers to stm32f10x_rcc.o(i.RCC_APB2PeriphClockCmd) for RCC_APB2PeriphClockCmd
    usart_driver.o(i.init_usart) refers to stm32f10x_gpio.o(i.GPIO_Init) for GPIO_Init
    usart_driver.o(i.init_usart) refers to stm32f10x_rcc.o(i.RCC_APB1PeriphClockCmd) for RCC_APB1PeriphClockCmd
    usart_driver.o(i.init_usart) refers to stm32f10x_usart.o(i.USART_DeInit) for USART_DeInit
    usart_driver.o(i.init_usart) refers to stm32f10x_usart.o(i.USART_ClockInit) for USART_ClockInit
    usart_driver.o(i.init_usart) refers to stm32f10x_usart.o(i.USART_Init) for USART_Init
    usart_driver.o(i.init_usart) refers to misc.o(i.NVIC_Init) for NVIC_Init
    usart_driver.o(i.init_usart) refers to stm32f10x_usart.o(i.USART_ITConfig) for USART_ITConfig
    usart_driver.o(i.init_usart) refers to stm32f10x_usart.o(i.USART_Cmd) for USART_Cmd
    usart_driver.o(.ARM.exidx) refers to usart_driver.o(i.USART1_IRQHandler) for i.USART1_IRQHandler
    usart_driver.o(.ARM.exidx) refers to usart_driver.o(i.USART2_IRQHandler) for i.USART2_IRQHandler
    usart_driver.o(.ARM.exidx) refers to usart_driver.o(i.USART3_IRQHandler) for i.USART3_IRQHandler
    usart_driver.o(.ARM.exidx) refers to usart_driver.o(i.USART_send_byte) for i.USART_send_byte
    usart_driver.o(.ARM.exidx) refers to usart_driver.o(i.USART_send_bytes) for i.USART_send_bytes
    usart_driver.o(.ARM.exidx) refers to usart_driver.o(i.init_usart) for i.init_usart
    rtx_lib.o(i.__user_perthread_libspace) refers to rtx_lib.o(i.os_kernel_is_active) for os_kernel_is_active
    rtx_lib.o(i.__user_perthread_libspace) refers to rtx_thread.o(.text.osThreadGetId) for osThreadGetId
    rtx_lib.o(i.__user_perthread_libspace) refers to rtx_config.o(i.osRtxErrorNotify) for osRtxErrorNotify
    rtx_lib.o(i.__user_perthread_libspace) refers to rtx_lib.o(.bss.os) for os_libspace
    rtx_lib.o(i._mutex_acquire) refers to rtx_lib.o(i.os_kernel_is_active) for os_kernel_is_active
    rtx_lib.o(i._mutex_acquire) refers to rtx_mutex.o(.text.osMutexAcquire) for osMutexAcquire
    rtx_lib.o(i._mutex_free) refers to rtx_mutex.o(.text.osMutexDelete) for osMutexDelete
    rtx_lib.o(i._mutex_initialize) refers to rtx_mutex.o(.text.osMutexNew) for osMutexNew
    rtx_lib.o(i._mutex_initialize) refers to rtx_config.o(i.osRtxErrorNotify) for osRtxErrorNotify
    rtx_lib.o(i._mutex_release) refers to rtx_lib.o(i.os_kernel_is_active) for os_kernel_is_active
    rtx_lib.o(i._mutex_release) refers to rtx_mutex.o(.text.osMutexRelease) for osMutexRelease
    rtx_lib.o(i._platform_post_stackheap_init) refers to rtx_kernel.o(.text.osKernelInitialize) for osKernelInitialize
    rtx_lib.o(i.os_kernel_is_active) refers to rtx_kernel.o(.text.osKernelGetState) for osKernelGetState
    rtx_lib.o(i.os_kernel_is_active) refers to rtx_lib.o(.data) for os_kernel_active
    rtx_lib.o(.constdata) refers to rtx_lib.o(.bss.os.thread.cb) for os_idle_thread_cb
    rtx_lib.o(.constdata) refers to rtx_lib.o(.bss.os.thread.stack) for os_idle_thread_stack
    rtx_lib.o(.constdata) refers to rtx_lib.o(.bss.os.msgqueue.cb) for os_timer_mq_cb
    rtx_lib.o(.constdata) refers to rtx_lib.o(.bss.os.msgqueue.mem) for os_timer_mq_data
    rtx_lib.o(.data) refers to irq_cm3.o(.constdata) for irqRtxLib
    rtx_lib.o(.rodata) refers to rtx_lib.o(.bss.os) for os_isr_queue
    rtx_lib.o(.rodata) refers to rtx_lib.o(.constdata) for os_idle_thread_attr
    stm32f10x_gpio.o(i.GPIO_AFIODeInit) refers to stm32f10x_rcc.o(i.RCC_APB2PeriphResetCmd) for RCC_APB2PeriphResetCmd
    stm32f10x_gpio.o(i.GPIO_DeInit) refers to stm32f10x_rcc.o(i.RCC_APB2PeriphResetCmd) for RCC_APB2PeriphResetCmd
    stm32f10x_rcc.o(i.RCC_GetClocksFreq) refers to stm32f10x_rcc.o(.data) for APBAHBPrescTable
    stm32f10x_rcc.o(i.RCC_WaitForHSEStartUp) refers to stm32f10x_rcc.o(i.RCC_GetFlagStatus) for RCC_GetFlagStatus
    stm32f10x_tim.o(i.TIM_DeInit) refers to stm32f10x_rcc.o(i.RCC_APB2PeriphResetCmd) for RCC_APB2PeriphResetCmd
    stm32f10x_tim.o(i.TIM_DeInit) refers to stm32f10x_rcc.o(i.RCC_APB1PeriphResetCmd) for RCC_APB1PeriphResetCmd
    stm32f10x_tim.o(i.TIM_ETRClockMode1Config) refers to stm32f10x_tim.o(i.TIM_ETRConfig) for TIM_ETRConfig
    stm32f10x_tim.o(i.TIM_ETRClockMode2Config) refers to stm32f10x_tim.o(i.TIM_ETRConfig) for TIM_ETRConfig
    stm32f10x_tim.o(i.TIM_ICInit) refers to stm32f10x_tim.o(i.TI1_Config) for TI1_Config
    stm32f10x_tim.o(i.TIM_ICInit) refers to stm32f10x_tim.o(i.TIM_SetIC1Prescaler) for TIM_SetIC1Prescaler
    stm32f10x_tim.o(i.TIM_ICInit) refers to stm32f10x_tim.o(i.TI2_Config) for TI2_Config
    stm32f10x_tim.o(i.TIM_ICInit) refers to stm32f10x_tim.o(i.TIM_SetIC2Prescaler) for TIM_SetIC2Prescaler
    stm32f10x_tim.o(i.TIM_ICInit) refers to stm32f10x_tim.o(i.TI3_Config) for TI3_Config
    stm32f10x_tim.o(i.TIM_ICInit) refers to stm32f10x_tim.o(i.TIM_SetIC3Prescaler) for TIM_SetIC3Prescaler
    stm32f10x_tim.o(i.TIM_ICInit) refers to stm32f10x_tim.o(i.TI4_Config) for TI4_Config
    stm32f10x_tim.o(i.TIM_ICInit) refers to stm32f10x_tim.o(i.TIM_SetIC4Prescaler) for TIM_SetIC4Prescaler
    stm32f10x_tim.o(i.TIM_ITRxExternalClockConfig) refers to stm32f10x_tim.o(i.TIM_SelectInputTrigger) for TIM_SelectInputTrigger
    stm32f10x_tim.o(i.TIM_PWMIConfig) refers to stm32f10x_tim.o(i.TI1_Config) for TI1_Config
    stm32f10x_tim.o(i.TIM_PWMIConfig) refers to stm32f10x_tim.o(i.TIM_SetIC1Prescaler) for TIM_SetIC1Prescaler
    stm32f10x_tim.o(i.TIM_PWMIConfig) refers to stm32f10x_tim.o(i.TI2_Config) for TI2_Config
    stm32f10x_tim.o(i.TIM_PWMIConfig) refers to stm32f10x_tim.o(i.TIM_SetIC2Prescaler) for TIM_SetIC2Prescaler
    stm32f10x_tim.o(i.TIM_TIxExternalClockConfig) refers to stm32f10x_tim.o(i.TI2_Config) for TI2_Config
    stm32f10x_tim.o(i.TIM_TIxExternalClockConfig) refers to stm32f10x_tim.o(i.TI1_Config) for TI1_Config
    stm32f10x_tim.o(i.TIM_TIxExternalClockConfig) refers to stm32f10x_tim.o(i.TIM_SelectInputTrigger) for TIM_SelectInputTrigger
    stm32f10x_usart.o(i.USART_DeInit) refers to stm32f10x_rcc.o(i.RCC_APB2PeriphResetCmd) for RCC_APB2PeriphResetCmd
    stm32f10x_usart.o(i.USART_DeInit) refers to stm32f10x_rcc.o(i.RCC_APB1PeriphResetCmd) for RCC_APB1PeriphResetCmd
    stm32f10x_usart.o(i.USART_Init) refers to stm32f10x_rcc.o(i.RCC_GetClocksFreq) for RCC_GetClocksFreq
    startup_stm32f10x_cl.o(STACK) refers (Special) to heapauxi.o(.text) for __use_two_region_memory
    startup_stm32f10x_cl.o(HEAP) refers (Special) to heapauxi.o(.text) for __use_two_region_memory
    startup_stm32f10x_cl.o(RESET) refers (Special) to heapauxi.o(.text) for __use_two_region_memory
    startup_stm32f10x_cl.o(RESET) refers to startup_stm32f10x_cl.o(STACK) for __initial_sp
    startup_stm32f10x_cl.o(RESET) refers to startup_stm32f10x_cl.o(.text) for Reset_Handler
    startup_stm32f10x_cl.o(RESET) refers to irq_cm3.o(.text) for SVC_Handler
    startup_stm32f10x_cl.o(RESET) refers to motor_driver.o(i.TIM3_IRQHandler) for TIM3_IRQHandler
    startup_stm32f10x_cl.o(RESET) refers to usart_driver.o(i.USART1_IRQHandler) for USART1_IRQHandler
    startup_stm32f10x_cl.o(RESET) refers to usart_driver.o(i.USART2_IRQHandler) for USART2_IRQHandler
    startup_stm32f10x_cl.o(RESET) refers to usart_driver.o(i.USART3_IRQHandler) for USART3_IRQHandler
    startup_stm32f10x_cl.o(.text) refers (Special) to heapauxi.o(.text) for __use_two_region_memory
    startup_stm32f10x_cl.o(.text) refers to system_stm32f10x.o(i.SystemInit) for SystemInit
    startup_stm32f10x_cl.o(.text) refers to __main.o(!!!main) for __main
    startup_stm32f10x_cl.o(.text) refers to startup_stm32f10x_cl.o(HEAP) for Heap_Mem
    startup_stm32f10x_cl.o(.text) refers to startup_stm32f10x_cl.o(STACK) for Stack_Mem
    system_stm32f10x.o(i.SetSysClock) refers to system_stm32f10x.o(i.SetSysClockTo72) for SetSysClockTo72
    system_stm32f10x.o(i.SystemCoreClockUpdate) refers to system_stm32f10x.o(.data) for SystemCoreClock
    system_stm32f10x.o(i.SystemInit) refers to system_stm32f10x.o(i.SetSysClock) for SetSysClock
    rtx_kernel.o(.text.svcRtxKernelInitialize) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_kernel.o(.text.svcRtxKernelInitialize) refers to rt_memclr_w.o(.text) for __aeabi_memclr8
    rtx_kernel.o(.text.svcRtxKernelInitialize) refers to rtx_lib.o(.rodata) for osRtxConfig
    rtx_kernel.o(.text.svcRtxKernelInitialize) refers to rtx_memory.o(.text.osRtxMemoryInit) for osRtxMemoryInit
    rtx_kernel.o(.text.svcRtxKernelInitialize) refers to rtx_mempool.o(.text.osRtxMemoryPoolInit) for osRtxMemoryPoolInit
    rtx_kernel.o(.ARM.exidx.text.svcRtxKernelInitialize) refers to rtx_kernel.o(.text.svcRtxKernelInitialize) for [Anonymous Symbol]
    rtx_kernel.o(.text.svcRtxKernelGetInfo) refers to rtx_kernel.o(.rodata.str1.4) for .L.str
    rtx_kernel.o(.text.svcRtxKernelGetInfo) refers to rt_memcpy_v6.o(.text) for __aeabi_memcpy
    rtx_kernel.o(.ARM.exidx.text.svcRtxKernelGetInfo) refers to rtx_kernel.o(.text.svcRtxKernelGetInfo) for [Anonymous Symbol]
    rtx_kernel.o(.text.svcRtxKernelGetState) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_kernel.o(.ARM.exidx.text.svcRtxKernelGetState) refers to rtx_kernel.o(.text.svcRtxKernelGetState) for [Anonymous Symbol]
    rtx_kernel.o(.text.svcRtxKernelStart) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_kernel.o(.text.svcRtxKernelStart) refers to rtx_lib.o(.rodata) for osRtxConfig
    rtx_kernel.o(.text.svcRtxKernelStart) refers to rtx_config.o(i.osRtxIdleThread) for osRtxIdleThread
    rtx_kernel.o(.text.svcRtxKernelStart) refers to rtx_thread.o(.text.svcRtxThreadNew) for svcRtxThreadNew
    rtx_kernel.o(.text.svcRtxKernelStart) refers to rtx_thread.o(.text.osRtxThreadListGet) for osRtxThreadListGet
    rtx_kernel.o(.text.svcRtxKernelStart) refers to rtx_thread.o(.text.osRtxThreadSwitch) for osRtxThreadSwitch
    rtx_kernel.o(.text.svcRtxKernelStart) refers to system_stm32f10x.o(.data) for SystemCoreClock
    rtx_kernel.o(.text.svcRtxKernelStart) refers to rtx_system.o(.text.osRtxSysTimerSetup) for osRtxSysTimerSetup
    rtx_kernel.o(.text.svcRtxKernelStart) refers to rtx_system.o(.text.osRtxSysTimerEnable) for osRtxSysTimerEnable
    rtx_kernel.o(.ARM.exidx.text.svcRtxKernelStart) refers to rtx_kernel.o(.text.svcRtxKernelStart) for [Anonymous Symbol]
    rtx_kernel.o(.text.svcRtxKernelLock) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_kernel.o(.ARM.exidx.text.svcRtxKernelLock) refers to rtx_kernel.o(.text.svcRtxKernelLock) for [Anonymous Symbol]
    rtx_kernel.o(.text.svcRtxKernelUnlock) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_kernel.o(.ARM.exidx.text.svcRtxKernelUnlock) refers to rtx_kernel.o(.text.svcRtxKernelUnlock) for [Anonymous Symbol]
    rtx_kernel.o(.text.svcRtxKernelRestoreLock) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_kernel.o(.ARM.exidx.text.svcRtxKernelRestoreLock) refers to rtx_kernel.o(.text.svcRtxKernelRestoreLock) for [Anonymous Symbol]
    rtx_kernel.o(.text.svcRtxKernelSuspend) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_kernel.o(.text.svcRtxKernelSuspend) refers to rtx_system.o(.text.osRtxSysTimerDisable) for osRtxSysTimerDisable
    rtx_kernel.o(.ARM.exidx.text.svcRtxKernelSuspend) refers to rtx_kernel.o(.text.svcRtxKernelSuspend) for [Anonymous Symbol]
    rtx_kernel.o(.text.svcRtxKernelResume) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_kernel.o(.text.svcRtxKernelResume) refers to rtx_thread.o(.text.osRtxThreadDelayTick) for osRtxThreadDelayTick
    rtx_kernel.o(.text.svcRtxKernelResume) refers to rtx_timer.o(.text.osRtxTimerTick) for osRtxTimerTick
    rtx_kernel.o(.text.svcRtxKernelResume) refers to rtx_thread.o(.text.osRtxThreadDispatch) for osRtxThreadDispatch
    rtx_kernel.o(.text.svcRtxKernelResume) refers to rtx_system.o(.text.osRtxSysTimerEnable) for osRtxSysTimerEnable
    rtx_kernel.o(.ARM.exidx.text.svcRtxKernelResume) refers to rtx_kernel.o(.text.svcRtxKernelResume) for [Anonymous Symbol]
    rtx_kernel.o(.text.svcRtxKernelGetTickCount) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_kernel.o(.ARM.exidx.text.svcRtxKernelGetTickCount) refers to rtx_kernel.o(.text.svcRtxKernelGetTickCount) for [Anonymous Symbol]
    rtx_kernel.o(.text.svcRtxKernelGetTickFreq) refers to rtx_lib.o(.rodata) for osRtxConfig
    rtx_kernel.o(.ARM.exidx.text.svcRtxKernelGetTickFreq) refers to rtx_kernel.o(.text.svcRtxKernelGetTickFreq) for [Anonymous Symbol]
    rtx_kernel.o(.text.svcRtxKernelGetSysTimerCount) refers to rtx_system.o(.text.osRtxSysTimerGetCount) for osRtxSysTimerGetCount
    rtx_kernel.o(.ARM.exidx.text.svcRtxKernelGetSysTimerCount) refers to rtx_kernel.o(.text.svcRtxKernelGetSysTimerCount) for [Anonymous Symbol]
    rtx_kernel.o(.text.svcRtxKernelGetSysTimerFreq) refers to rtx_system.o(.text.osRtxSysTimerGetFreq) for osRtxSysTimerGetFreq
    rtx_kernel.o(.ARM.exidx.text.svcRtxKernelGetSysTimerFreq) refers to rtx_kernel.o(.text.svcRtxKernelGetSysTimerFreq) for [Anonymous Symbol]
    rtx_kernel.o(.text.osKernelInitialize) refers to rtx_kernel.o(.text.svcRtxKernelInitialize) for svcRtxKernelInitialize
    rtx_kernel.o(.ARM.exidx.text.osKernelInitialize) refers to rtx_kernel.o(.text.osKernelInitialize) for [Anonymous Symbol]
    rtx_kernel.o(.text.osKernelGetInfo) refers to rtx_kernel.o(.rodata.str1.4) for .L.str
    rtx_kernel.o(.text.osKernelGetInfo) refers to rt_memcpy_v6.o(.text) for __aeabi_memcpy
    rtx_kernel.o(.text.osKernelGetInfo) refers to rtx_kernel.o(.text.svcRtxKernelGetInfo) for svcRtxKernelGetInfo
    rtx_kernel.o(.ARM.exidx.text.osKernelGetInfo) refers to rtx_kernel.o(.text.osKernelGetInfo) for [Anonymous Symbol]
    rtx_kernel.o(.text.osKernelGetState) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_kernel.o(.text.osKernelGetState) refers to rtx_kernel.o(.text.svcRtxKernelGetState) for svcRtxKernelGetState
    rtx_kernel.o(.ARM.exidx.text.osKernelGetState) refers to rtx_kernel.o(.text.osKernelGetState) for [Anonymous Symbol]
    rtx_kernel.o(.text.osKernelStart) refers to rtx_kernel.o(.text.svcRtxKernelStart) for svcRtxKernelStart
    rtx_kernel.o(.ARM.exidx.text.osKernelStart) refers to rtx_kernel.o(.text.osKernelStart) for [Anonymous Symbol]
    rtx_kernel.o(.text.osKernelLock) refers to rtx_kernel.o(.text.svcRtxKernelLock) for svcRtxKernelLock
    rtx_kernel.o(.ARM.exidx.text.osKernelLock) refers to rtx_kernel.o(.text.osKernelLock) for [Anonymous Symbol]
    rtx_kernel.o(.text.osKernelUnlock) refers to rtx_kernel.o(.text.svcRtxKernelUnlock) for svcRtxKernelUnlock
    rtx_kernel.o(.ARM.exidx.text.osKernelUnlock) refers to rtx_kernel.o(.text.osKernelUnlock) for [Anonymous Symbol]
    rtx_kernel.o(.text.osKernelRestoreLock) refers to rtx_kernel.o(.text.svcRtxKernelRestoreLock) for svcRtxKernelRestoreLock
    rtx_kernel.o(.ARM.exidx.text.osKernelRestoreLock) refers to rtx_kernel.o(.text.osKernelRestoreLock) for [Anonymous Symbol]
    rtx_kernel.o(.text.osKernelSuspend) refers to rtx_kernel.o(.text.svcRtxKernelSuspend) for svcRtxKernelSuspend
    rtx_kernel.o(.ARM.exidx.text.osKernelSuspend) refers to rtx_kernel.o(.text.osKernelSuspend) for [Anonymous Symbol]
    rtx_kernel.o(.text.osKernelResume) refers to rtx_kernel.o(.text.svcRtxKernelResume) for svcRtxKernelResume
    rtx_kernel.o(.ARM.exidx.text.osKernelResume) refers to rtx_kernel.o(.text.osKernelResume) for [Anonymous Symbol]
    rtx_kernel.o(.text.osKernelGetTickCount) refers to rtx_kernel.o(.text.svcRtxKernelGetTickCount) for svcRtxKernelGetTickCount
    rtx_kernel.o(.ARM.exidx.text.osKernelGetTickCount) refers to rtx_kernel.o(.text.osKernelGetTickCount) for [Anonymous Symbol]
    rtx_kernel.o(.text.osKernelGetTickFreq) refers to rtx_kernel.o(.text.svcRtxKernelGetTickFreq) for svcRtxKernelGetTickFreq
    rtx_kernel.o(.ARM.exidx.text.osKernelGetTickFreq) refers to rtx_kernel.o(.text.osKernelGetTickFreq) for [Anonymous Symbol]
    rtx_kernel.o(.text.osKernelGetSysTimerCount) refers to rtx_system.o(.text.osRtxSysTimerGetCount) for osRtxSysTimerGetCount
    rtx_kernel.o(.text.osKernelGetSysTimerCount) refers to rtx_kernel.o(.text.svcRtxKernelGetSysTimerCount) for svcRtxKernelGetSysTimerCount
    rtx_kernel.o(.ARM.exidx.text.osKernelGetSysTimerCount) refers to rtx_kernel.o(.text.osKernelGetSysTimerCount) for [Anonymous Symbol]
    rtx_kernel.o(.text.osKernelGetSysTimerFreq) refers to rtx_system.o(.text.osRtxSysTimerGetFreq) for osRtxSysTimerGetFreq
    rtx_kernel.o(.text.osKernelGetSysTimerFreq) refers to rtx_kernel.o(.text.svcRtxKernelGetSysTimerFreq) for svcRtxKernelGetSysTimerFreq
    rtx_kernel.o(.ARM.exidx.text.osKernelGetSysTimerFreq) refers to rtx_kernel.o(.text.osKernelGetSysTimerFreq) for [Anonymous Symbol]
    rtx_kernel.o(.data.os) refers to rtx_kernel.o(.rodata.str1.4) for .L.str
    rtx_kernel.o(.data.irqRtxLibRef) refers to irq_cm3.o(.constdata) for irqRtxLib
    rtx_thread.o(.ARM.exidx.text.osRtxThreadListPut) refers to rtx_thread.o(.text.osRtxThreadListPut) for [Anonymous Symbol]
    rtx_thread.o(.ARM.exidx.text.osRtxThreadListGet) refers to rtx_thread.o(.text.osRtxThreadListGet) for [Anonymous Symbol]
    rtx_thread.o(.ARM.exidx.text.osRtxThreadListRoot) refers to rtx_thread.o(.text.osRtxThreadListRoot) for [Anonymous Symbol]
    rtx_thread.o(.ARM.exidx.text.osRtxThreadListSort) refers to rtx_thread.o(.text.osRtxThreadListSort) for [Anonymous Symbol]
    rtx_thread.o(.ARM.exidx.text.osRtxThreadListRemove) refers to rtx_thread.o(.text.osRtxThreadListRemove) for [Anonymous Symbol]
    rtx_thread.o(.ARM.exidx.text.osRtxThreadListUnlink) refers to rtx_thread.o(.text.osRtxThreadListUnlink) for [Anonymous Symbol]
    rtx_thread.o(.text.osRtxThreadReadyPut) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_thread.o(.ARM.exidx.text.osRtxThreadReadyPut) refers to rtx_thread.o(.text.osRtxThreadReadyPut) for [Anonymous Symbol]
    rtx_thread.o(.text.osRtxThreadDelayInsert) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_thread.o(.ARM.exidx.text.osRtxThreadDelayInsert) refers to rtx_thread.o(.text.osRtxThreadDelayInsert) for [Anonymous Symbol]
    rtx_thread.o(.text.osRtxThreadDelayRemove) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_thread.o(.ARM.exidx.text.osRtxThreadDelayRemove) refers to rtx_thread.o(.text.osRtxThreadDelayRemove) for [Anonymous Symbol]
    rtx_thread.o(.text.osRtxThreadDelayTick) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_thread.o(.ARM.exidx.text.osRtxThreadDelayTick) refers to rtx_thread.o(.text.osRtxThreadDelayTick) for [Anonymous Symbol]
    rtx_thread.o(.ARM.exidx.text.osRtxThreadRegPtr) refers to rtx_thread.o(.text.osRtxThreadRegPtr) for [Anonymous Symbol]
    rtx_thread.o(.text.osRtxThreadBlock) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_thread.o(.ARM.exidx.text.osRtxThreadBlock) refers to rtx_thread.o(.text.osRtxThreadBlock) for [Anonymous Symbol]
    rtx_thread.o(.text.osRtxThreadSwitch) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_thread.o(.text.osRtxThreadSwitch) refers to rtx_thread.o(.text.osRtxThreadStackCheck) for osRtxThreadStackCheck
    rtx_thread.o(.ARM.exidx.text.osRtxThreadSwitch) refers to rtx_thread.o(.text.osRtxThreadSwitch) for [Anonymous Symbol]
    rtx_thread.o(.text.osRtxThreadStackCheck) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_thread.o(.text.osRtxThreadStackCheck) refers to rtx_config.o(i.osRtxErrorNotify) for osRtxErrorNotify
    rtx_thread.o(.ARM.exidx.text.osRtxThreadStackCheck) refers to rtx_thread.o(.text.osRtxThreadStackCheck) for [Anonymous Symbol]
    rtx_thread.o(.text.osRtxThreadDispatch) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_thread.o(.text.osRtxThreadDispatch) refers to rtx_thread.o(.text.osRtxThreadStackCheck) for osRtxThreadStackCheck
    rtx_thread.o(.ARM.exidx.text.osRtxThreadDispatch) refers to rtx_thread.o(.text.osRtxThreadDispatch) for [Anonymous Symbol]
    rtx_thread.o(.text.osRtxThreadWaitExit) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_thread.o(.text.osRtxThreadWaitExit) refers to rtx_thread.o(.text.osRtxThreadDispatch) for osRtxThreadDispatch
    rtx_thread.o(.ARM.exidx.text.osRtxThreadWaitExit) refers to rtx_thread.o(.text.osRtxThreadWaitExit) for [Anonymous Symbol]
    rtx_thread.o(.text.osRtxThreadWaitEnter) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_thread.o(.text.osRtxThreadWaitEnter) refers to rtx_thread.o(.text.osRtxThreadStackCheck) for osRtxThreadStackCheck
    rtx_thread.o(.ARM.exidx.text.osRtxThreadWaitEnter) refers to rtx_thread.o(.text.osRtxThreadWaitEnter) for [Anonymous Symbol]
    rtx_thread.o(.text.osRtxThreadPostProcess) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_thread.o(.ARM.exidx.text.osRtxThreadPostProcess) refers to rtx_thread.o(.text.osRtxThreadPostProcess) for [Anonymous Symbol]
    rtx_thread.o(.text.svcRtxThreadNew) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_thread.o(.text.svcRtxThreadNew) refers to rtx_mempool.o(.text.osRtxMemoryPoolAlloc) for osRtxMemoryPoolAlloc
    rtx_thread.o(.text.svcRtxThreadNew) refers to rtx_memory.o(.text.osRtxMemoryAlloc) for osRtxMemoryAlloc
    rtx_thread.o(.text.svcRtxThreadNew) refers to rtx_lib.o(.rodata) for osRtxConfig
    rtx_thread.o(.text.svcRtxThreadNew) refers to aeabi_memset4.o(.text) for __aeabi_memset4
    rtx_thread.o(.text.svcRtxThreadNew) refers to rt_memclr_w.o(.text) for __aeabi_memclr4
    rtx_thread.o(.text.svcRtxThreadNew) refers to rtx_thread.o(.text.osThreadExit) for osThreadExit
    rtx_thread.o(.text.svcRtxThreadNew) refers to rtx_thread.o(.text.osRtxThreadPostProcess) for osRtxThreadPostProcess
    rtx_thread.o(.text.svcRtxThreadNew) refers to rtx_thread.o(.text.osRtxThreadDispatch) for osRtxThreadDispatch
    rtx_thread.o(.text.svcRtxThreadNew) refers to rtx_mempool.o(.text.osRtxMemoryPoolFree) for osRtxMemoryPoolFree
    rtx_thread.o(.text.svcRtxThreadNew) refers to rtx_memory.o(.text.osRtxMemoryFree) for osRtxMemoryFree
    rtx_thread.o(.ARM.exidx.text.svcRtxThreadNew) refers to rtx_thread.o(.text.svcRtxThreadNew) for [Anonymous Symbol]
    rtx_thread.o(.text.osThreadExit) refers to rtx_thread.o(.text.svcRtxThreadExit) for svcRtxThreadExit
    rtx_thread.o(.ARM.exidx.text.osThreadExit) refers to rtx_thread.o(.text.osThreadExit) for [Anonymous Symbol]
    rtx_thread.o(.ARM.exidx.text.svcRtxThreadGetName) refers to rtx_thread.o(.text.svcRtxThreadGetName) for [Anonymous Symbol]
    rtx_thread.o(.text.svcRtxThreadGetId) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_thread.o(.ARM.exidx.text.svcRtxThreadGetId) refers to rtx_thread.o(.text.svcRtxThreadGetId) for [Anonymous Symbol]
    rtx_thread.o(.ARM.exidx.text.svcRtxThreadGetState) refers to rtx_thread.o(.text.svcRtxThreadGetState) for [Anonymous Symbol]
    rtx_thread.o(.ARM.exidx.text.svcRtxThreadGetStackSize) refers to rtx_thread.o(.text.svcRtxThreadGetStackSize) for [Anonymous Symbol]
    rtx_thread.o(.text.svcRtxThreadGetStackSpace) refers to rtx_lib.o(.rodata) for osRtxConfig
    rtx_thread.o(.ARM.exidx.text.svcRtxThreadGetStackSpace) refers to rtx_thread.o(.text.svcRtxThreadGetStackSpace) for [Anonymous Symbol]
    rtx_thread.o(.text.svcRtxThreadSetPriority) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_thread.o(.text.svcRtxThreadSetPriority) refers to rtx_thread.o(.text.osRtxThreadStackCheck) for osRtxThreadStackCheck
    rtx_thread.o(.ARM.exidx.text.svcRtxThreadSetPriority) refers to rtx_thread.o(.text.svcRtxThreadSetPriority) for [Anonymous Symbol]
    rtx_thread.o(.ARM.exidx.text.svcRtxThreadGetPriority) refers to rtx_thread.o(.text.svcRtxThreadGetPriority) for [Anonymous Symbol]
    rtx_thread.o(.text.svcRtxThreadYield) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_thread.o(.text.svcRtxThreadYield) refers to rtx_thread.o(.text.osRtxThreadStackCheck) for osRtxThreadStackCheck
    rtx_thread.o(.ARM.exidx.text.svcRtxThreadYield) refers to rtx_thread.o(.text.svcRtxThreadYield) for [Anonymous Symbol]
    rtx_thread.o(.text.svcRtxThreadSuspend) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_thread.o(.text.svcRtxThreadSuspend) refers to rtx_thread.o(.text.osRtxThreadStackCheck) for osRtxThreadStackCheck
    rtx_thread.o(.ARM.exidx.text.svcRtxThreadSuspend) refers to rtx_thread.o(.text.svcRtxThreadSuspend) for [Anonymous Symbol]
    rtx_thread.o(.text.svcRtxThreadResume) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_thread.o(.text.svcRtxThreadResume) refers to rtx_thread.o(.text.osRtxThreadDispatch) for osRtxThreadDispatch
    rtx_thread.o(.ARM.exidx.text.svcRtxThreadResume) refers to rtx_thread.o(.text.svcRtxThreadResume) for [Anonymous Symbol]
    rtx_thread.o(.text.svcRtxThreadDetach) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_thread.o(.text.svcRtxThreadDetach) refers to rtx_memory.o(.text.osRtxMemoryFree) for osRtxMemoryFree
    rtx_thread.o(.text.svcRtxThreadDetach) refers to rtx_mempool.o(.text.osRtxMemoryPoolFree) for osRtxMemoryPoolFree
    rtx_thread.o(.ARM.exidx.text.svcRtxThreadDetach) refers to rtx_thread.o(.text.svcRtxThreadDetach) for [Anonymous Symbol]
    rtx_thread.o(.text.svcRtxThreadJoin) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_thread.o(.text.svcRtxThreadJoin) refers to rtx_thread.o(.text.osRtxThreadStackCheck) for osRtxThreadStackCheck
    rtx_thread.o(.text.svcRtxThreadJoin) refers to rtx_memory.o(.text.osRtxMemoryFree) for osRtxMemoryFree
    rtx_thread.o(.text.svcRtxThreadJoin) refers to rtx_mempool.o(.text.osRtxMemoryPoolFree) for osRtxMemoryPoolFree
    rtx_thread.o(.ARM.exidx.text.svcRtxThreadJoin) refers to rtx_thread.o(.text.svcRtxThreadJoin) for [Anonymous Symbol]
    rtx_thread.o(.text.svcRtxThreadExit) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_thread.o(.text.svcRtxThreadExit) refers to rtx_mutex.o(.text.osRtxMutexOwnerRelease) for osRtxMutexOwnerRelease
    rtx_thread.o(.text.svcRtxThreadExit) refers to rtx_thread.o(.text.osRtxThreadStackCheck) for osRtxThreadStackCheck
    rtx_thread.o(.text.svcRtxThreadExit) refers to rtx_memory.o(.text.osRtxMemoryFree) for osRtxMemoryFree
    rtx_thread.o(.text.svcRtxThreadExit) refers to rtx_mempool.o(.text.osRtxMemoryPoolFree) for osRtxMemoryPoolFree
    rtx_thread.o(.ARM.exidx.text.svcRtxThreadExit) refers to rtx_thread.o(.text.svcRtxThreadExit) for [Anonymous Symbol]
    rtx_thread.o(.text.svcRtxThreadTerminate) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_thread.o(.text.svcRtxThreadTerminate) refers to rtx_mutex.o(.text.osRtxMutexOwnerRelease) for osRtxMutexOwnerRelease
    rtx_thread.o(.text.svcRtxThreadTerminate) refers to rtx_thread.o(.text.osRtxThreadStackCheck) for osRtxThreadStackCheck
    rtx_thread.o(.text.svcRtxThreadTerminate) refers to rtx_memory.o(.text.osRtxMemoryFree) for osRtxMemoryFree
    rtx_thread.o(.text.svcRtxThreadTerminate) refers to rtx_mempool.o(.text.osRtxMemoryPoolFree) for osRtxMemoryPoolFree
    rtx_thread.o(.ARM.exidx.text.svcRtxThreadTerminate) refers to rtx_thread.o(.text.svcRtxThreadTerminate) for [Anonymous Symbol]
    rtx_thread.o(.text.svcRtxThreadGetCount) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_thread.o(.ARM.exidx.text.svcRtxThreadGetCount) refers to rtx_thread.o(.text.svcRtxThreadGetCount) for [Anonymous Symbol]
    rtx_thread.o(.text.svcRtxThreadEnumerate) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_thread.o(.ARM.exidx.text.svcRtxThreadEnumerate) refers to rtx_thread.o(.text.svcRtxThreadEnumerate) for [Anonymous Symbol]
    rtx_thread.o(.text.svcRtxThreadFlagsSet) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_thread.o(.text.svcRtxThreadFlagsSet) refers to rtx_thread.o(.text.osRtxThreadStackCheck) for osRtxThreadStackCheck
    rtx_thread.o(.ARM.exidx.text.svcRtxThreadFlagsSet) refers to rtx_thread.o(.text.svcRtxThreadFlagsSet) for [Anonymous Symbol]
    rtx_thread.o(.text.svcRtxThreadFlagsClear) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_thread.o(.ARM.exidx.text.svcRtxThreadFlagsClear) refers to rtx_thread.o(.text.svcRtxThreadFlagsClear) for [Anonymous Symbol]
    rtx_thread.o(.text.svcRtxThreadFlagsGet) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_thread.o(.ARM.exidx.text.svcRtxThreadFlagsGet) refers to rtx_thread.o(.text.svcRtxThreadFlagsGet) for [Anonymous Symbol]
    rtx_thread.o(.text.svcRtxThreadFlagsWait) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_thread.o(.text.svcRtxThreadFlagsWait) refers to rtx_thread.o(.text.osRtxThreadWaitEnter) for osRtxThreadWaitEnter
    rtx_thread.o(.ARM.exidx.text.svcRtxThreadFlagsWait) refers to rtx_thread.o(.text.svcRtxThreadFlagsWait) for [Anonymous Symbol]
    rtx_thread.o(.text.osThreadNew) refers to rtx_thread.o(.text.svcRtxThreadNew) for svcRtxThreadNew
    rtx_thread.o(.ARM.exidx.text.osThreadNew) refers to rtx_thread.o(.text.osThreadNew) for [Anonymous Symbol]
    rtx_thread.o(.text.osThreadGetName) refers to rtx_thread.o(.text.svcRtxThreadGetName) for svcRtxThreadGetName
    rtx_thread.o(.ARM.exidx.text.osThreadGetName) refers to rtx_thread.o(.text.osThreadGetName) for [Anonymous Symbol]
    rtx_thread.o(.text.osThreadGetId) refers to rtx_thread.o(.text.svcRtxThreadGetId) for svcRtxThreadGetId
    rtx_thread.o(.ARM.exidx.text.osThreadGetId) refers to rtx_thread.o(.text.osThreadGetId) for [Anonymous Symbol]
    rtx_thread.o(.text.osThreadGetState) refers to rtx_thread.o(.text.svcRtxThreadGetState) for svcRtxThreadGetState
    rtx_thread.o(.ARM.exidx.text.osThreadGetState) refers to rtx_thread.o(.text.osThreadGetState) for [Anonymous Symbol]
    rtx_thread.o(.text.osThreadGetStackSize) refers to rtx_thread.o(.text.svcRtxThreadGetStackSize) for svcRtxThreadGetStackSize
    rtx_thread.o(.ARM.exidx.text.osThreadGetStackSize) refers to rtx_thread.o(.text.osThreadGetStackSize) for [Anonymous Symbol]
    rtx_thread.o(.text.osThreadGetStackSpace) refers to rtx_thread.o(.text.svcRtxThreadGetStackSpace) for svcRtxThreadGetStackSpace
    rtx_thread.o(.ARM.exidx.text.osThreadGetStackSpace) refers to rtx_thread.o(.text.osThreadGetStackSpace) for [Anonymous Symbol]
    rtx_thread.o(.text.osThreadSetPriority) refers to rtx_thread.o(.text.svcRtxThreadSetPriority) for svcRtxThreadSetPriority
    rtx_thread.o(.ARM.exidx.text.osThreadSetPriority) refers to rtx_thread.o(.text.osThreadSetPriority) for [Anonymous Symbol]
    rtx_thread.o(.text.osThreadGetPriority) refers to rtx_thread.o(.text.svcRtxThreadGetPriority) for svcRtxThreadGetPriority
    rtx_thread.o(.ARM.exidx.text.osThreadGetPriority) refers to rtx_thread.o(.text.osThreadGetPriority) for [Anonymous Symbol]
    rtx_thread.o(.text.osThreadYield) refers to rtx_thread.o(.text.svcRtxThreadYield) for svcRtxThreadYield
    rtx_thread.o(.ARM.exidx.text.osThreadYield) refers to rtx_thread.o(.text.osThreadYield) for [Anonymous Symbol]
    rtx_thread.o(.text.osThreadSuspend) refers to rtx_thread.o(.text.svcRtxThreadSuspend) for svcRtxThreadSuspend
    rtx_thread.o(.ARM.exidx.text.osThreadSuspend) refers to rtx_thread.o(.text.osThreadSuspend) for [Anonymous Symbol]
    rtx_thread.o(.text.osThreadResume) refers to rtx_thread.o(.text.svcRtxThreadResume) for svcRtxThreadResume
    rtx_thread.o(.ARM.exidx.text.osThreadResume) refers to rtx_thread.o(.text.osThreadResume) for [Anonymous Symbol]
    rtx_thread.o(.text.osThreadDetach) refers to rtx_thread.o(.text.svcRtxThreadDetach) for svcRtxThreadDetach
    rtx_thread.o(.ARM.exidx.text.osThreadDetach) refers to rtx_thread.o(.text.osThreadDetach) for [Anonymous Symbol]
    rtx_thread.o(.text.osThreadJoin) refers to rtx_thread.o(.text.svcRtxThreadJoin) for svcRtxThreadJoin
    rtx_thread.o(.ARM.exidx.text.osThreadJoin) refers to rtx_thread.o(.text.osThreadJoin) for [Anonymous Symbol]
    rtx_thread.o(.text.osThreadTerminate) refers to rtx_thread.o(.text.svcRtxThreadTerminate) for svcRtxThreadTerminate
    rtx_thread.o(.ARM.exidx.text.osThreadTerminate) refers to rtx_thread.o(.text.osThreadTerminate) for [Anonymous Symbol]
    rtx_thread.o(.text.osThreadGetCount) refers to rtx_thread.o(.text.svcRtxThreadGetCount) for svcRtxThreadGetCount
    rtx_thread.o(.ARM.exidx.text.osThreadGetCount) refers to rtx_thread.o(.text.osThreadGetCount) for [Anonymous Symbol]
    rtx_thread.o(.text.osThreadEnumerate) refers to rtx_thread.o(.text.svcRtxThreadEnumerate) for svcRtxThreadEnumerate
    rtx_thread.o(.ARM.exidx.text.osThreadEnumerate) refers to rtx_thread.o(.text.osThreadEnumerate) for [Anonymous Symbol]
    rtx_thread.o(.text.osThreadFlagsSet) refers to rtx_system.o(.text.osRtxPostProcess) for osRtxPostProcess
    rtx_thread.o(.text.osThreadFlagsSet) refers to rtx_thread.o(.text.svcRtxThreadFlagsSet) for svcRtxThreadFlagsSet
    rtx_thread.o(.ARM.exidx.text.osThreadFlagsSet) refers to rtx_thread.o(.text.osThreadFlagsSet) for [Anonymous Symbol]
    rtx_thread.o(.text.osThreadFlagsClear) refers to rtx_thread.o(.text.svcRtxThreadFlagsClear) for svcRtxThreadFlagsClear
    rtx_thread.o(.ARM.exidx.text.osThreadFlagsClear) refers to rtx_thread.o(.text.osThreadFlagsClear) for [Anonymous Symbol]
    rtx_thread.o(.text.osThreadFlagsGet) refers to rtx_thread.o(.text.svcRtxThreadFlagsGet) for svcRtxThreadFlagsGet
    rtx_thread.o(.ARM.exidx.text.osThreadFlagsGet) refers to rtx_thread.o(.text.osThreadFlagsGet) for [Anonymous Symbol]
    rtx_thread.o(.text.osThreadFlagsWait) refers to rtx_thread.o(.text.svcRtxThreadFlagsWait) for svcRtxThreadFlagsWait
    rtx_thread.o(.ARM.exidx.text.osThreadFlagsWait) refers to rtx_thread.o(.text.osThreadFlagsWait) for [Anonymous Symbol]
    rtx_delay.o(.text.svcRtxDelay) refers to rtx_thread.o(.text.osRtxThreadWaitEnter) for osRtxThreadWaitEnter
    rtx_delay.o(.ARM.exidx.text.svcRtxDelay) refers to rtx_delay.o(.text.svcRtxDelay) for [Anonymous Symbol]
    rtx_delay.o(.text.svcRtxDelayUntil) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_delay.o(.text.svcRtxDelayUntil) refers to rtx_thread.o(.text.osRtxThreadWaitEnter) for osRtxThreadWaitEnter
    rtx_delay.o(.ARM.exidx.text.svcRtxDelayUntil) refers to rtx_delay.o(.text.svcRtxDelayUntil) for [Anonymous Symbol]
    rtx_delay.o(.text.osDelay) refers to rtx_delay.o(.text.svcRtxDelay) for svcRtxDelay
    rtx_delay.o(.ARM.exidx.text.osDelay) refers to rtx_delay.o(.text.osDelay) for [Anonymous Symbol]
    rtx_delay.o(.text.osDelayUntil) refers to rtx_delay.o(.text.svcRtxDelayUntil) for svcRtxDelayUntil
    rtx_delay.o(.ARM.exidx.text.osDelayUntil) refers to rtx_delay.o(.text.osDelayUntil) for [Anonymous Symbol]
    rtx_timer.o(.text.osRtxTimerTick) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_timer.o(.text.osRtxTimerTick) refers to rtx_msgqueue.o(.text.osMessageQueuePut) for osMessageQueuePut
    rtx_timer.o(.text.osRtxTimerTick) refers to rtx_config.o(i.osRtxErrorNotify) for osRtxErrorNotify
    rtx_timer.o(.ARM.exidx.text.osRtxTimerTick) refers to rtx_timer.o(.text.osRtxTimerTick) for [Anonymous Symbol]
    rtx_timer.o(.text.osRtxTimerThread) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_timer.o(.text.osRtxTimerThread) refers to rtx_msgqueue.o(.text.osMessageQueueGet) for osMessageQueueGet
    rtx_timer.o(.ARM.exidx.text.osRtxTimerThread) refers to rtx_timer.o(.text.osRtxTimerThread) for [Anonymous Symbol]
    rtx_timer.o(.text.svcRtxTimerNew) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_timer.o(.text.svcRtxTimerNew) refers to rtx_lib.o(.rodata) for osRtxConfig
    rtx_timer.o(.text.svcRtxTimerNew) refers to rtx_msgqueue.o(.text.svcRtxMessageQueueNew) for svcRtxMessageQueueNew
    rtx_timer.o(.text.svcRtxTimerNew) refers to rtx_timer.o(.text.osRtxTimerThread) for osRtxTimerThread
    rtx_timer.o(.text.svcRtxTimerNew) refers to rtx_thread.o(.text.svcRtxThreadNew) for svcRtxThreadNew
    rtx_timer.o(.text.svcRtxTimerNew) refers to rtx_mempool.o(.text.osRtxMemoryPoolAlloc) for osRtxMemoryPoolAlloc
    rtx_timer.o(.text.svcRtxTimerNew) refers to rtx_memory.o(.text.osRtxMemoryAlloc) for osRtxMemoryAlloc
    rtx_timer.o(.ARM.exidx.text.svcRtxTimerNew) refers to rtx_timer.o(.text.svcRtxTimerNew) for [Anonymous Symbol]
    rtx_timer.o(.ARM.exidx.text.svcRtxTimerGetName) refers to rtx_timer.o(.text.svcRtxTimerGetName) for [Anonymous Symbol]
    rtx_timer.o(.text.svcRtxTimerStart) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_timer.o(.ARM.exidx.text.svcRtxTimerStart) refers to rtx_timer.o(.text.svcRtxTimerStart) for [Anonymous Symbol]
    rtx_timer.o(.text.svcRtxTimerStop) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_timer.o(.ARM.exidx.text.svcRtxTimerStop) refers to rtx_timer.o(.text.svcRtxTimerStop) for [Anonymous Symbol]
    rtx_timer.o(.ARM.exidx.text.svcRtxTimerIsRunning) refers to rtx_timer.o(.text.svcRtxTimerIsRunning) for [Anonymous Symbol]
    rtx_timer.o(.text.svcRtxTimerDelete) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_timer.o(.text.svcRtxTimerDelete) refers to rtx_mempool.o(.text.osRtxMemoryPoolFree) for osRtxMemoryPoolFree
    rtx_timer.o(.text.svcRtxTimerDelete) refers to rtx_memory.o(.text.osRtxMemoryFree) for osRtxMemoryFree
    rtx_timer.o(.ARM.exidx.text.svcRtxTimerDelete) refers to rtx_timer.o(.text.svcRtxTimerDelete) for [Anonymous Symbol]
    rtx_timer.o(.text.osTimerNew) refers to rtx_timer.o(.text.svcRtxTimerNew) for svcRtxTimerNew
    rtx_timer.o(.ARM.exidx.text.osTimerNew) refers to rtx_timer.o(.text.osTimerNew) for [Anonymous Symbol]
    rtx_timer.o(.text.osTimerGetName) refers to rtx_timer.o(.text.svcRtxTimerGetName) for svcRtxTimerGetName
    rtx_timer.o(.ARM.exidx.text.osTimerGetName) refers to rtx_timer.o(.text.osTimerGetName) for [Anonymous Symbol]
    rtx_timer.o(.text.osTimerStart) refers to rtx_timer.o(.text.svcRtxTimerStart) for svcRtxTimerStart
    rtx_timer.o(.ARM.exidx.text.osTimerStart) refers to rtx_timer.o(.text.osTimerStart) for [Anonymous Symbol]
    rtx_timer.o(.text.osTimerStop) refers to rtx_timer.o(.text.svcRtxTimerStop) for svcRtxTimerStop
    rtx_timer.o(.ARM.exidx.text.osTimerStop) refers to rtx_timer.o(.text.osTimerStop) for [Anonymous Symbol]
    rtx_timer.o(.text.osTimerIsRunning) refers to rtx_timer.o(.text.svcRtxTimerIsRunning) for svcRtxTimerIsRunning
    rtx_timer.o(.ARM.exidx.text.osTimerIsRunning) refers to rtx_timer.o(.text.osTimerIsRunning) for [Anonymous Symbol]
    rtx_timer.o(.text.osTimerDelete) refers to rtx_timer.o(.text.svcRtxTimerDelete) for svcRtxTimerDelete
    rtx_timer.o(.ARM.exidx.text.osTimerDelete) refers to rtx_timer.o(.text.osTimerDelete) for [Anonymous Symbol]
    rtx_mutex.o(.text.osRtxMutexOwnerRelease) refers to rtx_thread.o(.text.osRtxThreadListGet) for osRtxThreadListGet
    rtx_mutex.o(.text.osRtxMutexOwnerRelease) refers to rtx_thread.o(.text.osRtxThreadWaitExit) for osRtxThreadWaitExit
    rtx_mutex.o(.ARM.exidx.text.osRtxMutexOwnerRelease) refers to rtx_mutex.o(.text.osRtxMutexOwnerRelease) for [Anonymous Symbol]
    rtx_mutex.o(.text.svcRtxMutexNew) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_mutex.o(.text.svcRtxMutexNew) refers to rtx_mempool.o(.text.osRtxMemoryPoolAlloc) for osRtxMemoryPoolAlloc
    rtx_mutex.o(.text.svcRtxMutexNew) refers to rtx_memory.o(.text.osRtxMemoryAlloc) for osRtxMemoryAlloc
    rtx_mutex.o(.ARM.exidx.text.svcRtxMutexNew) refers to rtx_mutex.o(.text.svcRtxMutexNew) for [Anonymous Symbol]
    rtx_mutex.o(.ARM.exidx.text.svcRtxMutexGetName) refers to rtx_mutex.o(.text.svcRtxMutexGetName) for [Anonymous Symbol]
    rtx_mutex.o(.text.svcRtxMutexAcquire) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_mutex.o(.text.svcRtxMutexAcquire) refers to rtx_thread.o(.text.osRtxThreadListSort) for osRtxThreadListSort
    rtx_mutex.o(.text.svcRtxMutexAcquire) refers to rtx_thread.o(.text.osRtxThreadListPut) for osRtxThreadListPut
    rtx_mutex.o(.text.svcRtxMutexAcquire) refers to rtx_thread.o(.text.osRtxThreadWaitEnter) for osRtxThreadWaitEnter
    rtx_mutex.o(.ARM.exidx.text.svcRtxMutexAcquire) refers to rtx_mutex.o(.text.svcRtxMutexAcquire) for [Anonymous Symbol]
    rtx_mutex.o(.text.svcRtxMutexRelease) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_mutex.o(.text.svcRtxMutexRelease) refers to rtx_thread.o(.text.osRtxThreadListGet) for osRtxThreadListGet
    rtx_mutex.o(.text.svcRtxMutexRelease) refers to rtx_thread.o(.text.osRtxThreadWaitExit) for osRtxThreadWaitExit
    rtx_mutex.o(.text.svcRtxMutexRelease) refers to rtx_thread.o(.text.osRtxThreadDispatch) for osRtxThreadDispatch
    rtx_mutex.o(.ARM.exidx.text.svcRtxMutexRelease) refers to rtx_mutex.o(.text.svcRtxMutexRelease) for [Anonymous Symbol]
    rtx_mutex.o(.ARM.exidx.text.svcRtxMutexGetOwner) refers to rtx_mutex.o(.text.svcRtxMutexGetOwner) for [Anonymous Symbol]
    rtx_mutex.o(.text.svcRtxMutexDelete) refers to rtx_thread.o(.text.osRtxThreadListSort) for osRtxThreadListSort
    rtx_mutex.o(.text.svcRtxMutexDelete) refers to rtx_thread.o(.text.osRtxThreadListGet) for osRtxThreadListGet
    rtx_mutex.o(.text.svcRtxMutexDelete) refers to rtx_thread.o(.text.osRtxThreadWaitExit) for osRtxThreadWaitExit
    rtx_mutex.o(.text.svcRtxMutexDelete) refers to rtx_thread.o(.text.osRtxThreadDispatch) for osRtxThreadDispatch
    rtx_mutex.o(.text.svcRtxMutexDelete) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_mutex.o(.text.svcRtxMutexDelete) refers to rtx_mempool.o(.text.osRtxMemoryPoolFree) for osRtxMemoryPoolFree
    rtx_mutex.o(.text.svcRtxMutexDelete) refers to rtx_memory.o(.text.osRtxMemoryFree) for osRtxMemoryFree
    rtx_mutex.o(.ARM.exidx.text.svcRtxMutexDelete) refers to rtx_mutex.o(.text.svcRtxMutexDelete) for [Anonymous Symbol]
    rtx_mutex.o(.text.osMutexNew) refers to rtx_mutex.o(.text.svcRtxMutexNew) for svcRtxMutexNew
    rtx_mutex.o(.ARM.exidx.text.osMutexNew) refers to rtx_mutex.o(.text.osMutexNew) for [Anonymous Symbol]
    rtx_mutex.o(.text.osMutexGetName) refers to rtx_mutex.o(.text.svcRtxMutexGetName) for svcRtxMutexGetName
    rtx_mutex.o(.ARM.exidx.text.osMutexGetName) refers to rtx_mutex.o(.text.osMutexGetName) for [Anonymous Symbol]
    rtx_mutex.o(.text.osMutexAcquire) refers to rtx_mutex.o(.text.svcRtxMutexAcquire) for svcRtxMutexAcquire
    rtx_mutex.o(.ARM.exidx.text.osMutexAcquire) refers to rtx_mutex.o(.text.osMutexAcquire) for [Anonymous Symbol]
    rtx_mutex.o(.text.osMutexRelease) refers to rtx_mutex.o(.text.svcRtxMutexRelease) for svcRtxMutexRelease
    rtx_mutex.o(.ARM.exidx.text.osMutexRelease) refers to rtx_mutex.o(.text.osMutexRelease) for [Anonymous Symbol]
    rtx_mutex.o(.text.osMutexGetOwner) refers to rtx_mutex.o(.text.svcRtxMutexGetOwner) for svcRtxMutexGetOwner
    rtx_mutex.o(.ARM.exidx.text.osMutexGetOwner) refers to rtx_mutex.o(.text.osMutexGetOwner) for [Anonymous Symbol]
    rtx_mutex.o(.text.osMutexDelete) refers to rtx_mutex.o(.text.svcRtxMutexDelete) for svcRtxMutexDelete
    rtx_mutex.o(.ARM.exidx.text.osMutexDelete) refers to rtx_mutex.o(.text.osMutexDelete) for [Anonymous Symbol]
    rtx_msgqueue.o(.text.osRtxMessageQueuePostProcess) refers to rtx_mempool.o(.text.osRtxMemoryPoolFree) for osRtxMemoryPoolFree
    rtx_msgqueue.o(.text.osRtxMessageQueuePostProcess) refers to rtx_mempool.o(.text.osRtxMemoryPoolAlloc) for osRtxMemoryPoolAlloc
    rtx_msgqueue.o(.text.osRtxMessageQueuePostProcess) refers to rtx_thread.o(.text.osRtxThreadListGet) for osRtxThreadListGet
    rtx_msgqueue.o(.text.osRtxMessageQueuePostProcess) refers to rtx_thread.o(.text.osRtxThreadWaitExit) for osRtxThreadWaitExit
    rtx_msgqueue.o(.text.osRtxMessageQueuePostProcess) refers to rtx_thread.o(.text.osRtxThreadRegPtr) for osRtxThreadRegPtr
    rtx_msgqueue.o(.text.osRtxMessageQueuePostProcess) refers to rt_memcpy_v6.o(.text) for __aeabi_memcpy
    rtx_msgqueue.o(.ARM.exidx.text.osRtxMessageQueuePostProcess) refers to rtx_msgqueue.o(.text.osRtxMessageQueuePostProcess) for [Anonymous Symbol]
    rtx_msgqueue.o(.text.svcRtxMessageQueueNew) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_msgqueue.o(.text.svcRtxMessageQueueNew) refers to rtx_mempool.o(.text.osRtxMemoryPoolAlloc) for osRtxMemoryPoolAlloc
    rtx_msgqueue.o(.text.svcRtxMessageQueueNew) refers to rtx_memory.o(.text.osRtxMemoryAlloc) for osRtxMemoryAlloc
    rtx_msgqueue.o(.text.svcRtxMessageQueueNew) refers to rt_memclr.o(.text) for __aeabi_memclr
    rtx_msgqueue.o(.text.svcRtxMessageQueueNew) refers to rtx_mempool.o(.text.osRtxMemoryPoolInit) for osRtxMemoryPoolInit
    rtx_msgqueue.o(.text.svcRtxMessageQueueNew) refers to rtx_msgqueue.o(.text.osRtxMessageQueuePostProcess) for osRtxMessageQueuePostProcess
    rtx_msgqueue.o(.text.svcRtxMessageQueueNew) refers to rtx_mempool.o(.text.osRtxMemoryPoolFree) for osRtxMemoryPoolFree
    rtx_msgqueue.o(.text.svcRtxMessageQueueNew) refers to rtx_memory.o(.text.osRtxMemoryFree) for osRtxMemoryFree
    rtx_msgqueue.o(.ARM.exidx.text.svcRtxMessageQueueNew) refers to rtx_msgqueue.o(.text.svcRtxMessageQueueNew) for [Anonymous Symbol]
    rtx_msgqueue.o(.ARM.exidx.text.svcRtxMessageQueueGetName) refers to rtx_msgqueue.o(.text.svcRtxMessageQueueGetName) for [Anonymous Symbol]
    rtx_msgqueue.o(.text.svcRtxMessageQueuePut) refers to rtx_thread.o(.text.osRtxThreadListGet) for osRtxThreadListGet
    rtx_msgqueue.o(.text.svcRtxMessageQueuePut) refers to rtx_thread.o(.text.osRtxThreadWaitExit) for osRtxThreadWaitExit
    rtx_msgqueue.o(.text.svcRtxMessageQueuePut) refers to rtx_thread.o(.text.osRtxThreadRegPtr) for osRtxThreadRegPtr
    rtx_msgqueue.o(.text.svcRtxMessageQueuePut) refers to rt_memcpy_v6.o(.text) for __aeabi_memcpy
    rtx_msgqueue.o(.text.svcRtxMessageQueuePut) refers to rtx_mempool.o(.text.osRtxMemoryPoolAlloc) for osRtxMemoryPoolAlloc
    rtx_msgqueue.o(.text.svcRtxMessageQueuePut) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_msgqueue.o(.text.svcRtxMessageQueuePut) refers to rtx_thread.o(.text.osRtxThreadListPut) for osRtxThreadListPut
    rtx_msgqueue.o(.text.svcRtxMessageQueuePut) refers to rtx_thread.o(.text.osRtxThreadWaitEnter) for osRtxThreadWaitEnter
    rtx_msgqueue.o(.ARM.exidx.text.svcRtxMessageQueuePut) refers to rtx_msgqueue.o(.text.svcRtxMessageQueuePut) for [Anonymous Symbol]
    rtx_msgqueue.o(.text.svcRtxMessageQueueGet) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_msgqueue.o(.text.svcRtxMessageQueueGet) refers to rtx_thread.o(.text.osRtxThreadListPut) for osRtxThreadListPut
    rtx_msgqueue.o(.text.svcRtxMessageQueueGet) refers to rtx_thread.o(.text.osRtxThreadWaitEnter) for osRtxThreadWaitEnter
    rtx_msgqueue.o(.text.svcRtxMessageQueueGet) refers to rt_memcpy_v6.o(.text) for __aeabi_memcpy
    rtx_msgqueue.o(.text.svcRtxMessageQueueGet) refers to rtx_mempool.o(.text.osRtxMemoryPoolFree) for osRtxMemoryPoolFree
    rtx_msgqueue.o(.text.svcRtxMessageQueueGet) refers to rtx_mempool.o(.text.osRtxMemoryPoolAlloc) for osRtxMemoryPoolAlloc
    rtx_msgqueue.o(.text.svcRtxMessageQueueGet) refers to rtx_thread.o(.text.osRtxThreadListGet) for osRtxThreadListGet
    rtx_msgqueue.o(.text.svcRtxMessageQueueGet) refers to rtx_thread.o(.text.osRtxThreadWaitExit) for osRtxThreadWaitExit
    rtx_msgqueue.o(.text.svcRtxMessageQueueGet) refers to rtx_thread.o(.text.osRtxThreadRegPtr) for osRtxThreadRegPtr
    rtx_msgqueue.o(.ARM.exidx.text.svcRtxMessageQueueGet) refers to rtx_msgqueue.o(.text.svcRtxMessageQueueGet) for [Anonymous Symbol]
    rtx_msgqueue.o(.ARM.exidx.text.svcRtxMessageQueueGetCapacity) refers to rtx_msgqueue.o(.text.svcRtxMessageQueueGetCapacity) for [Anonymous Symbol]
    rtx_msgqueue.o(.ARM.exidx.text.svcRtxMessageQueueGetMsgSize) refers to rtx_msgqueue.o(.text.svcRtxMessageQueueGetMsgSize) for [Anonymous Symbol]
    rtx_msgqueue.o(.ARM.exidx.text.svcRtxMessageQueueGetCount) refers to rtx_msgqueue.o(.text.svcRtxMessageQueueGetCount) for [Anonymous Symbol]
    rtx_msgqueue.o(.ARM.exidx.text.svcRtxMessageQueueGetSpace) refers to rtx_msgqueue.o(.text.svcRtxMessageQueueGetSpace) for [Anonymous Symbol]
    rtx_msgqueue.o(.text.svcRtxMessageQueueReset) refers to rtx_mempool.o(.text.osRtxMemoryPoolFree) for osRtxMemoryPoolFree
    rtx_msgqueue.o(.text.svcRtxMessageQueueReset) refers to rtx_mempool.o(.text.osRtxMemoryPoolAlloc) for osRtxMemoryPoolAlloc
    rtx_msgqueue.o(.text.svcRtxMessageQueueReset) refers to rtx_thread.o(.text.osRtxThreadListGet) for osRtxThreadListGet
    rtx_msgqueue.o(.text.svcRtxMessageQueueReset) refers to rtx_thread.o(.text.osRtxThreadWaitExit) for osRtxThreadWaitExit
    rtx_msgqueue.o(.text.svcRtxMessageQueueReset) refers to rtx_thread.o(.text.osRtxThreadRegPtr) for osRtxThreadRegPtr
    rtx_msgqueue.o(.text.svcRtxMessageQueueReset) refers to rt_memcpy_v6.o(.text) for __aeabi_memcpy
    rtx_msgqueue.o(.text.svcRtxMessageQueueReset) refers to rtx_thread.o(.text.osRtxThreadDispatch) for osRtxThreadDispatch
    rtx_msgqueue.o(.ARM.exidx.text.svcRtxMessageQueueReset) refers to rtx_msgqueue.o(.text.svcRtxMessageQueueReset) for [Anonymous Symbol]
    rtx_msgqueue.o(.text.svcRtxMessageQueueDelete) refers to rtx_thread.o(.text.osRtxThreadListGet) for osRtxThreadListGet
    rtx_msgqueue.o(.text.svcRtxMessageQueueDelete) refers to rtx_thread.o(.text.osRtxThreadWaitExit) for osRtxThreadWaitExit
    rtx_msgqueue.o(.text.svcRtxMessageQueueDelete) refers to rtx_thread.o(.text.osRtxThreadDispatch) for osRtxThreadDispatch
    rtx_msgqueue.o(.text.svcRtxMessageQueueDelete) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_msgqueue.o(.text.svcRtxMessageQueueDelete) refers to rtx_memory.o(.text.osRtxMemoryFree) for osRtxMemoryFree
    rtx_msgqueue.o(.text.svcRtxMessageQueueDelete) refers to rtx_mempool.o(.text.osRtxMemoryPoolFree) for osRtxMemoryPoolFree
    rtx_msgqueue.o(.ARM.exidx.text.svcRtxMessageQueueDelete) refers to rtx_msgqueue.o(.text.svcRtxMessageQueueDelete) for [Anonymous Symbol]
    rtx_msgqueue.o(.text.osMessageQueueNew) refers to rtx_msgqueue.o(.text.svcRtxMessageQueueNew) for svcRtxMessageQueueNew
    rtx_msgqueue.o(.ARM.exidx.text.osMessageQueueNew) refers to rtx_msgqueue.o(.text.osMessageQueueNew) for [Anonymous Symbol]
    rtx_msgqueue.o(.text.osMessageQueueGetName) refers to rtx_msgqueue.o(.text.svcRtxMessageQueueGetName) for svcRtxMessageQueueGetName
    rtx_msgqueue.o(.ARM.exidx.text.osMessageQueueGetName) refers to rtx_msgqueue.o(.text.osMessageQueueGetName) for [Anonymous Symbol]
    rtx_msgqueue.o(.text.osMessageQueuePut) refers to rtx_mempool.o(.text.osRtxMemoryPoolAlloc) for osRtxMemoryPoolAlloc
    rtx_msgqueue.o(.text.osMessageQueuePut) refers to rt_memcpy_v6.o(.text) for __aeabi_memcpy
    rtx_msgqueue.o(.text.osMessageQueuePut) refers to rtx_system.o(.text.osRtxPostProcess) for osRtxPostProcess
    rtx_msgqueue.o(.text.osMessageQueuePut) refers to rtx_msgqueue.o(.text.svcRtxMessageQueuePut) for svcRtxMessageQueuePut
    rtx_msgqueue.o(.ARM.exidx.text.osMessageQueuePut) refers to rtx_msgqueue.o(.text.osMessageQueuePut) for [Anonymous Symbol]
    rtx_msgqueue.o(.text.osMessageQueueGet) refers to rtx_msgqueue.o(.text.svcRtxMessageQueueGet) for svcRtxMessageQueueGet
    rtx_msgqueue.o(.text.osMessageQueueGet) refers to rt_memcpy_v6.o(.text) for __aeabi_memcpy
    rtx_msgqueue.o(.text.osMessageQueueGet) refers to rtx_system.o(.text.osRtxPostProcess) for osRtxPostProcess
    rtx_msgqueue.o(.ARM.exidx.text.osMessageQueueGet) refers to rtx_msgqueue.o(.text.osMessageQueueGet) for [Anonymous Symbol]
    rtx_msgqueue.o(.text.osMessageQueueGetCapacity) refers to rtx_msgqueue.o(.text.svcRtxMessageQueueGetCapacity) for svcRtxMessageQueueGetCapacity
    rtx_msgqueue.o(.ARM.exidx.text.osMessageQueueGetCapacity) refers to rtx_msgqueue.o(.text.osMessageQueueGetCapacity) for [Anonymous Symbol]
    rtx_msgqueue.o(.text.osMessageQueueGetMsgSize) refers to rtx_msgqueue.o(.text.svcRtxMessageQueueGetMsgSize) for svcRtxMessageQueueGetMsgSize
    rtx_msgqueue.o(.ARM.exidx.text.osMessageQueueGetMsgSize) refers to rtx_msgqueue.o(.text.osMessageQueueGetMsgSize) for [Anonymous Symbol]
    rtx_msgqueue.o(.text.osMessageQueueGetCount) refers to rtx_msgqueue.o(.text.svcRtxMessageQueueGetCount) for svcRtxMessageQueueGetCount
    rtx_msgqueue.o(.ARM.exidx.text.osMessageQueueGetCount) refers to rtx_msgqueue.o(.text.osMessageQueueGetCount) for [Anonymous Symbol]
    rtx_msgqueue.o(.text.osMessageQueueGetSpace) refers to rtx_msgqueue.o(.text.svcRtxMessageQueueGetSpace) for svcRtxMessageQueueGetSpace
    rtx_msgqueue.o(.ARM.exidx.text.osMessageQueueGetSpace) refers to rtx_msgqueue.o(.text.osMessageQueueGetSpace) for [Anonymous Symbol]
    rtx_msgqueue.o(.text.osMessageQueueReset) refers to rtx_msgqueue.o(.text.svcRtxMessageQueueReset) for svcRtxMessageQueueReset
    rtx_msgqueue.o(.ARM.exidx.text.osMessageQueueReset) refers to rtx_msgqueue.o(.text.osMessageQueueReset) for [Anonymous Symbol]
    rtx_msgqueue.o(.text.osMessageQueueDelete) refers to rtx_msgqueue.o(.text.svcRtxMessageQueueDelete) for svcRtxMessageQueueDelete
    rtx_msgqueue.o(.ARM.exidx.text.osMessageQueueDelete) refers to rtx_msgqueue.o(.text.osMessageQueueDelete) for [Anonymous Symbol]
    irq_cm3.o(.text) refers to rtx_system.o(.text.osRtxPendSV_Handler) for osRtxPendSV_Handler
    irq_cm3.o(.text) refers to rtx_system.o(.text.osRtxTick_Handler) for osRtxTick_Handler
    irq_cm3.o(.text) refers to rtx_kernel.o(.data.os) for osRtxInfo
    irq_cm3.o(.text) refers to rtx_lib.o(.constdata) for osRtxUserSVC
    rtx_memory.o(.ARM.exidx.text.osRtxMemoryInit) refers to rtx_memory.o(.text.osRtxMemoryInit) for [Anonymous Symbol]
    rtx_memory.o(.ARM.exidx.text.osRtxMemoryAlloc) refers to rtx_memory.o(.text.osRtxMemoryAlloc) for [Anonymous Symbol]
    rtx_memory.o(.ARM.exidx.text.osRtxMemoryFree) refers to rtx_memory.o(.text.osRtxMemoryFree) for [Anonymous Symbol]
    rtx_mempool.o(.ARM.exidx.text.osRtxMemoryPoolInit) refers to rtx_mempool.o(.text.osRtxMemoryPoolInit) for [Anonymous Symbol]
    rtx_mempool.o(.ARM.exidx.text.osRtxMemoryPoolAlloc) refers to rtx_mempool.o(.text.osRtxMemoryPoolAlloc) for [Anonymous Symbol]
    rtx_mempool.o(.ARM.exidx.text.osRtxMemoryPoolFree) refers to rtx_mempool.o(.text.osRtxMemoryPoolFree) for [Anonymous Symbol]
    rtx_mempool.o(.text.osRtxMemoryPoolPostProcess) refers to rtx_thread.o(.text.osRtxThreadListGet) for osRtxThreadListGet
    rtx_mempool.o(.text.osRtxMemoryPoolPostProcess) refers to rtx_thread.o(.text.osRtxThreadWaitExit) for osRtxThreadWaitExit
    rtx_mempool.o(.ARM.exidx.text.osRtxMemoryPoolPostProcess) refers to rtx_mempool.o(.text.osRtxMemoryPoolPostProcess) for [Anonymous Symbol]
    rtx_mempool.o(.text.svcRtxMemoryPoolNew) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_mempool.o(.text.svcRtxMemoryPoolNew) refers to rtx_memory.o(.text.osRtxMemoryAlloc) for osRtxMemoryAlloc
    rtx_mempool.o(.text.svcRtxMemoryPoolNew) refers to rt_memclr.o(.text) for __aeabi_memclr
    rtx_mempool.o(.text.svcRtxMemoryPoolNew) refers to rtx_mempool.o(.text.osRtxMemoryPoolPostProcess) for osRtxMemoryPoolPostProcess
    rtx_mempool.o(.text.svcRtxMemoryPoolNew) refers to rtx_memory.o(.text.osRtxMemoryFree) for osRtxMemoryFree
    rtx_mempool.o(.ARM.exidx.text.svcRtxMemoryPoolNew) refers to rtx_mempool.o(.text.svcRtxMemoryPoolNew) for [Anonymous Symbol]
    rtx_mempool.o(.ARM.exidx.text.svcRtxMemoryPoolGetName) refers to rtx_mempool.o(.text.svcRtxMemoryPoolGetName) for [Anonymous Symbol]
    rtx_mempool.o(.text.svcRtxMemoryPoolAlloc) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_mempool.o(.text.svcRtxMemoryPoolAlloc) refers to rtx_thread.o(.text.osRtxThreadListPut) for osRtxThreadListPut
    rtx_mempool.o(.text.svcRtxMemoryPoolAlloc) refers to rtx_thread.o(.text.osRtxThreadWaitEnter) for osRtxThreadWaitEnter
    rtx_mempool.o(.ARM.exidx.text.svcRtxMemoryPoolAlloc) refers to rtx_mempool.o(.text.svcRtxMemoryPoolAlloc) for [Anonymous Symbol]
    rtx_mempool.o(.text.svcRtxMemoryPoolFree) refers to rtx_thread.o(.text.osRtxThreadListGet) for osRtxThreadListGet
    rtx_mempool.o(.text.svcRtxMemoryPoolFree) refers to rtx_thread.o(.text.osRtxThreadWaitExit) for osRtxThreadWaitExit
    rtx_mempool.o(.ARM.exidx.text.svcRtxMemoryPoolFree) refers to rtx_mempool.o(.text.svcRtxMemoryPoolFree) for [Anonymous Symbol]
    rtx_mempool.o(.ARM.exidx.text.svcRtxMemoryPoolGetCapacity) refers to rtx_mempool.o(.text.svcRtxMemoryPoolGetCapacity) for [Anonymous Symbol]
    rtx_mempool.o(.ARM.exidx.text.svcRtxMemoryPoolGetBlockSize) refers to rtx_mempool.o(.text.svcRtxMemoryPoolGetBlockSize) for [Anonymous Symbol]
    rtx_mempool.o(.ARM.exidx.text.svcRtxMemoryPoolGetCount) refers to rtx_mempool.o(.text.svcRtxMemoryPoolGetCount) for [Anonymous Symbol]
    rtx_mempool.o(.ARM.exidx.text.svcRtxMemoryPoolGetSpace) refers to rtx_mempool.o(.text.svcRtxMemoryPoolGetSpace) for [Anonymous Symbol]
    rtx_mempool.o(.text.svcRtxMemoryPoolDelete) refers to rtx_thread.o(.text.osRtxThreadListGet) for osRtxThreadListGet
    rtx_mempool.o(.text.svcRtxMemoryPoolDelete) refers to rtx_thread.o(.text.osRtxThreadWaitExit) for osRtxThreadWaitExit
    rtx_mempool.o(.text.svcRtxMemoryPoolDelete) refers to rtx_thread.o(.text.osRtxThreadDispatch) for osRtxThreadDispatch
    rtx_mempool.o(.text.svcRtxMemoryPoolDelete) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_mempool.o(.text.svcRtxMemoryPoolDelete) refers to rtx_memory.o(.text.osRtxMemoryFree) for osRtxMemoryFree
    rtx_mempool.o(.ARM.exidx.text.svcRtxMemoryPoolDelete) refers to rtx_mempool.o(.text.svcRtxMemoryPoolDelete) for [Anonymous Symbol]
    rtx_mempool.o(.text.osMemoryPoolNew) refers to rtx_mempool.o(.text.svcRtxMemoryPoolNew) for svcRtxMemoryPoolNew
    rtx_mempool.o(.ARM.exidx.text.osMemoryPoolNew) refers to rtx_mempool.o(.text.osMemoryPoolNew) for [Anonymous Symbol]
    rtx_mempool.o(.text.osMemoryPoolGetName) refers to rtx_mempool.o(.text.svcRtxMemoryPoolGetName) for svcRtxMemoryPoolGetName
    rtx_mempool.o(.ARM.exidx.text.osMemoryPoolGetName) refers to rtx_mempool.o(.text.osMemoryPoolGetName) for [Anonymous Symbol]
    rtx_mempool.o(.text.osMemoryPoolAlloc) refers to rtx_mempool.o(.text.svcRtxMemoryPoolAlloc) for svcRtxMemoryPoolAlloc
    rtx_mempool.o(.ARM.exidx.text.osMemoryPoolAlloc) refers to rtx_mempool.o(.text.osMemoryPoolAlloc) for [Anonymous Symbol]
    rtx_mempool.o(.text.osMemoryPoolFree) refers to rtx_system.o(.text.osRtxPostProcess) for osRtxPostProcess
    rtx_mempool.o(.text.osMemoryPoolFree) refers to rtx_mempool.o(.text.svcRtxMemoryPoolFree) for svcRtxMemoryPoolFree
    rtx_mempool.o(.ARM.exidx.text.osMemoryPoolFree) refers to rtx_mempool.o(.text.osMemoryPoolFree) for [Anonymous Symbol]
    rtx_mempool.o(.text.osMemoryPoolGetCapacity) refers to rtx_mempool.o(.text.svcRtxMemoryPoolGetCapacity) for svcRtxMemoryPoolGetCapacity
    rtx_mempool.o(.ARM.exidx.text.osMemoryPoolGetCapacity) refers to rtx_mempool.o(.text.osMemoryPoolGetCapacity) for [Anonymous Symbol]
    rtx_mempool.o(.text.osMemoryPoolGetBlockSize) refers to rtx_mempool.o(.text.svcRtxMemoryPoolGetBlockSize) for svcRtxMemoryPoolGetBlockSize
    rtx_mempool.o(.ARM.exidx.text.osMemoryPoolGetBlockSize) refers to rtx_mempool.o(.text.osMemoryPoolGetBlockSize) for [Anonymous Symbol]
    rtx_mempool.o(.text.osMemoryPoolGetCount) refers to rtx_mempool.o(.text.svcRtxMemoryPoolGetCount) for svcRtxMemoryPoolGetCount
    rtx_mempool.o(.ARM.exidx.text.osMemoryPoolGetCount) refers to rtx_mempool.o(.text.osMemoryPoolGetCount) for [Anonymous Symbol]
    rtx_mempool.o(.text.osMemoryPoolGetSpace) refers to rtx_mempool.o(.text.svcRtxMemoryPoolGetSpace) for svcRtxMemoryPoolGetSpace
    rtx_mempool.o(.ARM.exidx.text.osMemoryPoolGetSpace) refers to rtx_mempool.o(.text.osMemoryPoolGetSpace) for [Anonymous Symbol]
    rtx_mempool.o(.text.osMemoryPoolDelete) refers to rtx_mempool.o(.text.svcRtxMemoryPoolDelete) for svcRtxMemoryPoolDelete
    rtx_mempool.o(.ARM.exidx.text.osMemoryPoolDelete) refers to rtx_mempool.o(.text.osMemoryPoolDelete) for [Anonymous Symbol]
    rtx_system.o(.text.osRtxTick_Handler) refers to rtx_system.o(.text.osRtxSysTimerAckIRQ) for osRtxSysTimerAckIRQ
    rtx_system.o(.text.osRtxTick_Handler) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_system.o(.text.osRtxTick_Handler) refers to rtx_timer.o(.text.osRtxTimerTick) for osRtxTimerTick
    rtx_system.o(.text.osRtxTick_Handler) refers to rtx_thread.o(.text.osRtxThreadDelayTick) for osRtxThreadDelayTick
    rtx_system.o(.text.osRtxTick_Handler) refers to rtx_thread.o(.text.osRtxThreadDispatch) for osRtxThreadDispatch
    rtx_system.o(.text.osRtxTick_Handler) refers to rtx_thread.o(.text.osRtxThreadListRemove) for osRtxThreadListRemove
    rtx_system.o(.text.osRtxTick_Handler) refers to rtx_thread.o(.text.osRtxThreadReadyPut) for osRtxThreadReadyPut
    rtx_system.o(.text.osRtxTick_Handler) refers to rtx_thread.o(.text.osRtxThreadSwitch) for osRtxThreadSwitch
    rtx_system.o(.ARM.exidx.text.osRtxTick_Handler) refers to rtx_system.o(.text.osRtxTick_Handler) for [Anonymous Symbol]
    rtx_system.o(.ARM.exidx.text.osRtxSysTimerAckIRQ) refers to rtx_system.o(.text.osRtxSysTimerAckIRQ) for [Anonymous Symbol]
    rtx_system.o(.text.osRtxPendSV_Handler) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_system.o(.text.osRtxPendSV_Handler) refers to rtx_thread.o(.text.osRtxThreadDispatch) for osRtxThreadDispatch
    rtx_system.o(.ARM.exidx.text.osRtxPendSV_Handler) refers to rtx_system.o(.text.osRtxPendSV_Handler) for [Anonymous Symbol]
    rtx_system.o(.text.osRtxPostProcess) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_system.o(.text.osRtxPostProcess) refers to rtx_config.o(i.osRtxErrorNotify) for osRtxErrorNotify
    rtx_system.o(.ARM.exidx.text.osRtxPostProcess) refers to rtx_system.o(.text.osRtxPostProcess) for [Anonymous Symbol]
    rtx_system.o(.text.osRtxSysTimerSetup) refers to rtx_lib.o(.rodata) for osRtxConfig
    rtx_system.o(.text.osRtxSysTimerSetup) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_system.o(.ARM.exidx.text.osRtxSysTimerSetup) refers to rtx_system.o(.text.osRtxSysTimerSetup) for [Anonymous Symbol]
    rtx_system.o(.ARM.exidx.text.osRtxSysTimerEnable) refers to rtx_system.o(.text.osRtxSysTimerEnable) for [Anonymous Symbol]
    rtx_system.o(.ARM.exidx.text.osRtxSysTimerDisable) refers to rtx_system.o(.text.osRtxSysTimerDisable) for [Anonymous Symbol]
    rtx_system.o(.text.osRtxSysTimerGetCount) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_system.o(.ARM.exidx.text.osRtxSysTimerGetCount) refers to rtx_system.o(.text.osRtxSysTimerGetCount) for [Anonymous Symbol]
    rtx_system.o(.text.osRtxSysTimerGetFreq) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_system.o(.ARM.exidx.text.osRtxSysTimerGetFreq) refers to rtx_system.o(.text.osRtxSysTimerGetFreq) for [Anonymous Symbol]
    strtoul.o(.text) refers to rt_errno_addr_twolibspace.o(.text) for __aeabi_errno_addr
    strtoul.o(.text) refers to rt_ctype_table.o(.text) for __rt_ctype_table
    strtoul.o(.text) refers to _strtoul.o(.text) for _strtoul
    rt_memcpy_v6.o(.text) refers to rt_memcpy_w.o(.text) for __aeabi_memcpy4
    aeabi_memset4.o(.text) refers to rt_memclr_w.o(.text) for _memset_w
    rt_memclr.o(.text) refers to rt_memclr_w.o(.text) for _memset_w
    __main.o(!!!main) refers to __rtentry.o(.ARM.Collect$$rtentry$$00000000) for __rt_entry
    dfixu.o(x$fpl$dfixu) refers (Special) to usenofp.o(x$fpl$usenofp) for __I$use$fp
    dfixu.o(x$fpl$dfixu) refers to dnaninf.o(x$fpl$dnaninf) for __fpl_dnaninf
    dfixu.o(x$fpl$dfixur) refers (Special) to usenofp.o(x$fpl$usenofp) for __I$use$fp
    dfixu.o(x$fpl$dfixur) refers to dnaninf.o(x$fpl$dnaninf) for __fpl_dnaninf
    dflt_clz.o(x$fpl$dfltu) refers (Special) to usenofp.o(x$fpl$usenofp) for __I$use$fp
    dflt_clz.o(x$fpl$dflt) refers (Special) to usenofp.o(x$fpl$usenofp) for __I$use$fp
    dflt_clz.o(x$fpl$dfltn) refers (Special) to usenofp.o(x$fpl$usenofp) for __I$use$fp
    dmul.o(x$fpl$dmul) refers (Special) to usenofp.o(x$fpl$usenofp) for __I$use$fp
    dmul.o(x$fpl$dmul) refers to dretinf.o(x$fpl$dretinf) for __fpl_dretinf
    dmul.o(x$fpl$dmul) refers to dnaninf.o(x$fpl$dnaninf) for __fpl_dnaninf
    ffix.o(x$fpl$ffix) refers (Special) to usenofp.o(x$fpl$usenofp) for __I$use$fp
    ffix.o(x$fpl$ffix) refers to fnaninf.o(x$fpl$fnaninf) for __fpl_fnaninf
    ffix.o(x$fpl$ffixr) refers (Special) to usenofp.o(x$fpl$usenofp) for __I$use$fp
    ffix.o(x$fpl$ffixr) refers to fnaninf.o(x$fpl$fnaninf) for __fpl_fnaninf
    fflt_clz.o(x$fpl$ffltu) refers (Special) to usenofp.o(x$fpl$usenofp) for __I$use$fp
    fflt_clz.o(x$fpl$fflt) refers (Special) to usenofp.o(x$fpl$usenofp) for __I$use$fp
    fflt_clz.o(x$fpl$ffltn) refers (Special) to usenofp.o(x$fpl$usenofp) for __I$use$fp
    __rtentry.o(.ARM.Collect$$rtentry$$00000000) refers (Special) to __rtentry2.o(.ARM.Collect$$rtentry$$0000000A) for __rt_entry_li
    __rtentry.o(.ARM.Collect$$rtentry$$00000000) refers (Special) to __rtentry2.o(.ARM.Collect$$rtentry$$0000000D) for __rt_entry_main
    __rtentry.o(.ARM.Collect$$rtentry$$00000000) refers (Special) to __rtentry2.o(.ARM.Collect$$rtentry$$0000000C) for __rt_entry_postli_1
    __rtentry.o(.ARM.Collect$$rtentry$$00000000) refers (Special) to __rtentry2.o(.ARM.Collect$$rtentry$$00000008) for __rt_entry_postsh_1
    __rtentry.o(.ARM.Collect$$rtentry$$00000000) refers (Special) to __rtentry2.o(.ARM.Collect$$rtentry$$00000002) for __rt_entry_presh_1
    __rtentry.o(.ARM.Collect$$rtentry$$00000000) refers (Special) to __rtentry4.o(.ARM.Collect$$rtentry$$00000004) for __rt_entry_sh
    rt_ctype_table.o(.text) refers to rt_locale_twolibspace.o(.text) for __rt_locale
    rt_ctype_table.o(.text) refers to lc_ctype_c.o(locale$$code) for _get_lc_ctype
    rt_errno_addr.o(.text) refers to rt_errno_addr.o(.bss) for __aeabi_errno_addr_data
    rt_errno_addr_intlibspace.o(.text) refers to libspace.o(.bss) for __libspace_start
    rt_errno_addr_twolibspace.o(.text) refers to rtx_lib.o(i.__user_perthread_libspace) for __user_perthread_libspace
    _strtoul.o(.text) refers to _chval.o(.text) for _chval
    _strtoul.o(.text) refers to rt_errno_addr_twolibspace.o(.text) for __aeabi_errno_addr
    dnaninf.o(x$fpl$dnaninf) refers (Special) to usenofp.o(x$fpl$usenofp) for __I$use$fp
    dretinf.o(x$fpl$dretinf) refers (Special) to usenofp.o(x$fpl$usenofp) for __I$use$fp
    fnaninf.o(x$fpl$fnaninf) refers (Special) to usenofp.o(x$fpl$usenofp) for __I$use$fp
    libspace.o(.text) refers to libspace.o(.bss) for __libspace_start
    __rtentry2.o(.ARM.Collect$$rtentry$$00000008) refers to rtx_lib.o(i._platform_post_stackheap_init) for _platform_post_stackheap_init
    __rtentry2.o(.ARM.Collect$$rtentry$$0000000A) refers to libinit.o(.ARM.Collect$$libinit$$00000000) for __rt_lib_init
    __rtentry2.o(.ARM.Collect$$rtentry$$0000000B) refers to boardinit3.o(.text) for _platform_post_lib_init
    __rtentry2.o(.ARM.Collect$$rtentry$$0000000D) refers to main.o(i.main) for main
    __rtentry2.o(.ARM.Collect$$rtentry$$0000000D) refers to exit.o(.text) for exit
    __rtentry2.o(.ARM.exidx) refers to __rtentry2.o(.ARM.Collect$$rtentry$$00000001) for .ARM.Collect$$rtentry$$00000001
    __rtentry2.o(.ARM.exidx) refers to __rtentry2.o(.ARM.Collect$$rtentry$$00000008) for .ARM.Collect$$rtentry$$00000008
    __rtentry2.o(.ARM.exidx) refers to __rtentry2.o(.ARM.Collect$$rtentry$$0000000A) for .ARM.Collect$$rtentry$$0000000A
    __rtentry2.o(.ARM.exidx) refers to __rtentry2.o(.ARM.Collect$$rtentry$$0000000B) for .ARM.Collect$$rtentry$$0000000B
    __rtentry2.o(.ARM.exidx) refers to __rtentry2.o(.ARM.Collect$$rtentry$$0000000D) for .ARM.Collect$$rtentry$$0000000D
    __rtentry4.o(.ARM.Collect$$rtentry$$00000004) refers to sys_stackheap_outer.o(.text) for __user_setup_stackheap
    __rtentry4.o(.ARM.exidx) refers to __rtentry4.o(.ARM.Collect$$rtentry$$00000004) for .ARM.Collect$$rtentry$$00000004
    rt_locale.o(.text) refers to rt_locale.o(.bss) for __rt_locale_data
    rt_locale_intlibspace.o(.text) refers to libspace.o(.bss) for __libspace_start
    rt_locale_twolibspace.o(.text) refers to libspace.o(.text) for __user_perproc_libspace
    lc_ctype_c.o(locale$$data) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000012) for __rt_lib_init_lc_ctype_2
    lc_ctype_c.o(locale$$code) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000012) for __rt_lib_init_lc_ctype_2
    lc_ctype_c.o(locale$$code) refers to strcmpv7m.o(.text) for strcmp
    lc_ctype_c.o(locale$$code) refers to lc_ctype_c.o(locale$$data) for __lcctype_c_name
    sys_stackheap_outer.o(.text) refers to libspace.o(.text) for __user_perproc_libspace
    sys_stackheap_outer.o(.text) refers to startup_stm32f10x_cl.o(.text) for __user_initial_stackheap
    exit.o(.text) refers to rtexit.o(.ARM.Collect$$rtexit$$00000000) for __rt_exit
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$0000002E) for __rt_lib_init_alloca_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$0000002C) for __rt_lib_init_argv_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$0000001B) for __rt_lib_init_atexit_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000021) for __rt_lib_init_clock_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000032) for __rt_lib_init_cpp_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000030) for __rt_lib_init_exceptions_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000002) for __rt_lib_init_fp_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$0000001F) for __rt_lib_init_fp_trap_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000023) for __rt_lib_init_getenv_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$0000000A) for __rt_lib_init_heap_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000011) for __rt_lib_init_lc_collate_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000013) for __rt_lib_init_lc_ctype_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000015) for __rt_lib_init_lc_monetary_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000017) for __rt_lib_init_lc_numeric_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000019) for __rt_lib_init_lc_time_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000004) for __rt_lib_init_preinit_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$0000000E) for __rt_lib_init_rand_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000033) for __rt_lib_init_return
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$0000001D) for __rt_lib_init_signal_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000025) for __rt_lib_init_stdio_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$0000000C) for __rt_lib_init_user_alloc_1
    libinit2.o(.ARM.Collect$$libinit$$0000000F) refers (Weak) to rt_locale_twolibspace.o(.text) for __rt_locale
    libinit2.o(.ARM.Collect$$libinit$$00000010) refers to libinit2.o(.ARM.Collect$$libinit$$0000000F) for .ARM.Collect$$libinit$$0000000F
    libinit2.o(.ARM.Collect$$libinit$$00000012) refers to libinit2.o(.ARM.Collect$$libinit$$0000000F) for .ARM.Collect$$libinit$$0000000F
    libinit2.o(.ARM.Collect$$libinit$$00000012) refers (Weak) to lc_ctype_c.o(locale$$code) for _get_lc_ctype
    libinit2.o(.ARM.Collect$$libinit$$00000014) refers to libinit2.o(.ARM.Collect$$libinit$$0000000F) for .ARM.Collect$$libinit$$0000000F
    libinit2.o(.ARM.Collect$$libinit$$00000016) refers to libinit2.o(.ARM.Collect$$libinit$$0000000F) for .ARM.Collect$$libinit$$0000000F
    libinit2.o(.ARM.Collect$$libinit$$00000018) refers to libinit2.o(.ARM.Collect$$libinit$$0000000F) for .ARM.Collect$$libinit$$0000000F
    libinit2.o(.ARM.Collect$$libinit$$00000026) refers to argv_veneer.o(.emb_text) for __ARM_argv_veneer
    libinit2.o(.ARM.Collect$$libinit$$00000027) refers to argv_veneer.o(.emb_text) for __ARM_argv_veneer
    rtexit.o(.ARM.Collect$$rtexit$$00000000) refers (Special) to rtexit2.o(.ARM.Collect$$rtexit$$00000004) for __rt_exit_exit
    rtexit.o(.ARM.Collect$$rtexit$$00000000) refers (Special) to rtexit2.o(.ARM.Collect$$rtexit$$00000003) for __rt_exit_ls
    rtexit.o(.ARM.Collect$$rtexit$$00000000) refers (Special) to rtexit2.o(.ARM.Collect$$rtexit$$00000002) for __rt_exit_prels_1
    rtexit.o(.ARM.exidx) refers (Special) to rtexit2.o(.ARM.Collect$$rtexit$$00000004) for __rt_exit_exit
    rtexit.o(.ARM.exidx) refers (Special) to rtexit2.o(.ARM.Collect$$rtexit$$00000003) for __rt_exit_ls
    rtexit.o(.ARM.exidx) refers (Special) to rtexit2.o(.ARM.Collect$$rtexit$$00000002) for __rt_exit_prels_1
    rtexit.o(.ARM.exidx) refers to rtexit.o(.ARM.Collect$$rtexit$$00000000) for .ARM.Collect$$rtexit$$00000000
    argv_veneer.o(.emb_text) refers to no_argv.o(.text) for __ARM_get_argv
    rtexit2.o(.ARM.Collect$$rtexit$$00000003) refers to libshutdown.o(.ARM.Collect$$libshutdown$$00000000) for __rt_lib_shutdown
    rtexit2.o(.ARM.Collect$$rtexit$$00000004) refers to sys_exit.o(.text) for _sys_exit
    rtexit2.o(.ARM.exidx) refers to rtexit2.o(.ARM.Collect$$rtexit$$00000001) for .ARM.Collect$$rtexit$$00000001
    rtexit2.o(.ARM.exidx) refers to rtexit2.o(.ARM.Collect$$rtexit$$00000003) for .ARM.Collect$$rtexit$$00000003
    rtexit2.o(.ARM.exidx) refers to rtexit2.o(.ARM.Collect$$rtexit$$00000004) for .ARM.Collect$$rtexit$$00000004
    _get_argv_nomalloc.o(.text) refers (Special) to hrguard.o(.text) for __heap_region$guard
    _get_argv_nomalloc.o(.text) refers to defsig_rtmem_outer.o(.text) for __rt_SIGRTMEM
    _get_argv_nomalloc.o(.text) refers to sys_command.o(.text) for _sys_command_string
    sys_command.o(.text) refers (Special) to use_no_semi.o(.text) for __I$use$semihosting
    sys_command.o(.text) refers (Special) to indicate_semi.o(.text) for __semihosting_library_function
    sys_exit.o(.text) refers (Special) to use_no_semi.o(.text) for __I$use$semihosting
    sys_exit.o(.text) refers (Special) to indicate_semi.o(.text) for __semihosting_library_function
    defsig_rtmem_outer.o(.text) refers to defsig_rtmem_inner.o(.text) for __rt_SIGRTMEM_inner
    defsig_rtmem_outer.o(.text) refers to defsig_exit.o(.text) for __sig_exit
    defsig_rtmem_formal.o(.text) refers to rt_raise.o(.text) for __rt_raise
    libshutdown.o(.ARM.Collect$$libshutdown$$00000000) refers (Special) to libshutdown2.o(.ARM.Collect$$libshutdown$$00000002) for __rt_lib_shutdown_cpp_1
    libshutdown.o(.ARM.Collect$$libshutdown$$00000000) refers (Special) to libshutdown2.o(.ARM.Collect$$libshutdown$$00000007) for __rt_lib_shutdown_fp_trap_1
    libshutdown.o(.ARM.Collect$$libshutdown$$00000000) refers (Special) to libshutdown2.o(.ARM.Collect$$libshutdown$$0000000F) for __rt_lib_shutdown_heap_1
    libshutdown.o(.ARM.Collect$$libshutdown$$00000000) refers (Special) to libshutdown2.o(.ARM.Collect$$libshutdown$$00000010) for __rt_lib_shutdown_return
    libshutdown.o(.ARM.Collect$$libshutdown$$00000000) refers (Special) to libshutdown2.o(.ARM.Collect$$libshutdown$$0000000A) for __rt_lib_shutdown_signal_1
    libshutdown.o(.ARM.Collect$$libshutdown$$00000000) refers (Special) to libshutdown2.o(.ARM.Collect$$libshutdown$$00000004) for __rt_lib_shutdown_stdio_1
    libshutdown.o(.ARM.Collect$$libshutdown$$00000000) refers (Special) to libshutdown2.o(.ARM.Collect$$libshutdown$$0000000C) for __rt_lib_shutdown_user_alloc_1
    rt_raise.o(.text) refers to __raise.o(.text) for __raise
    rt_raise.o(.text) refers to sys_exit.o(.text) for _sys_exit
    defsig_exit.o(.text) refers to sys_exit.o(.text) for _sys_exit
    defsig_rtmem_inner.o(.text) refers to defsig_general.o(.text) for __default_signal_display
    __raise.o(.text) refers to defsig.o(CL$$defsig) for __default_signal_handler
    defsig_general.o(.text) refers to sys_wrch.o(.text) for _ttywrch
    sys_wrch.o(.text) refers (Special) to use_no_semi.o(.text) for __I$use$semihosting
    sys_wrch.o(.text) refers (Special) to indicate_semi.o(.text) for __semihosting_library_function
    defsig.o(CL$$defsig) refers to defsig_rtmem_inner.o(.text) for __rt_SIGRTMEM_inner
    defsig_abrt_inner.o(.text) refers to defsig_general.o(.text) for __default_signal_display
    defsig_fpe_inner.o(.text) refers to defsig_general.o(.text) for __default_signal_display
    defsig_rtred_inner.o(.text) refers to defsig_general.o(.text) for __default_signal_display
    defsig_stak_inner.o(.text) refers to defsig_general.o(.text) for __default_signal_display
    defsig_pvfn_inner.o(.text) refers to defsig_general.o(.text) for __default_signal_display
    defsig_cppl_inner.o(.text) refers to defsig_general.o(.text) for __default_signal_display
    defsig_segv_inner.o(.text) refers to defsig_general.o(.text) for __default_signal_display
    defsig_other.o(.text) refers to defsig_general.o(.text) for __default_signal_display


==============================================================================

Removing Unused input sections from the image.

    Removing svvis_cortex.o(.rev16_text), (4 bytes).
    Removing svvis_cortex.o(.revsh_text), (4 bytes).
    Removing svvis_cortex.o(.rrx_text), (6 bytes).
    Removing svvis_cortex.o(i._ZN13SvVis3_data_t9apply_msgER15SvVis_message_t), (210 bytes).
    Removing svvis_cortex.o(i._ZN7SvVis_t10send_floatEhf), (40 bytes).
    Removing svvis_cortex.o(i._ZN7SvVis_t8send_i16Ehs), (42 bytes).
    Removing svvis_cortex.o(i._ZN7SvVis_t8send_i32Ehi), (38 bytes).
    Removing svvis_cortex.o(.ARM.exidx), (8 bytes).
    Removing svvis_cortex.o(.ARM.exidx), (8 bytes).
    Removing svvis_cortex.o(.ARM.exidx), (8 bytes).
    Removing svvis_cortex.o(.ARM.exidx), (8 bytes).
    Removing svvis_cortex.o(.ARM.exidx), (8 bytes).
    Removing svvis_cortex.o(.ARM.exidx), (8 bytes).
    Removing svvis_cortex.o(.ARM.exidx), (8 bytes).
    Removing svvis_cortex.o(.ARM.exidx), (8 bytes).
    Removing svvis_cortex.o(.ARM.exidx), (8 bytes).
    Removing main.o(.rev16_text), (4 bytes).
    Removing main.o(.revsh_text), (4 bytes).
    Removing main.o(.rrx_text), (6 bytes).
    Removing main.o(.ARM.exidx), (8 bytes).
    Removing main.o(.ARM.exidx), (8 bytes).
    Removing svvis_cortex_threads.o(.rev16_text), (4 bytes).
    Removing svvis_cortex_threads.o(.revsh_text), (4 bytes).
    Removing svvis_cortex_threads.o(.rrx_text), (6 bytes).
    Removing svvis_cortex_threads.o(.ARM.exidx), (8 bytes).
    Removing svvis_cortex_threads.o(.ARM.exidx), (8 bytes).
    Removing svvis_cortex_threads.o(.ARM.exidx), (8 bytes).
    Removing led_driver.o(.rev16_text), (4 bytes).
    Removing led_driver.o(.revsh_text), (4 bytes).
    Removing led_driver.o(.rrx_text), (6 bytes).
    Removing motor_driver.o(.rev16_text), (4 bytes).
    Removing motor_driver.o(.revsh_text), (4 bytes).
    Removing motor_driver.o(.rrx_text), (6 bytes).
    Removing usart_driver.o(.rev16_text), (4 bytes).
    Removing usart_driver.o(.revsh_text), (4 bytes).
    Removing usart_driver.o(.rrx_text), (6 bytes).
    Removing usart_driver.o(.ARM.exidx), (8 bytes).
    Removing usart_driver.o(.ARM.exidx), (8 bytes).
    Removing usart_driver.o(.ARM.exidx), (8 bytes).
    Removing usart_driver.o(.ARM.exidx), (8 bytes).
    Removing usart_driver.o(.ARM.exidx), (8 bytes).
    Removing usart_driver.o(.ARM.exidx), (8 bytes).
    Removing rtx_lib.o(.rev16_text), (4 bytes).
    Removing rtx_lib.o(.revsh_text), (4 bytes).
    Removing rtx_lib.o(.rrx_text), (6 bytes).
    Removing rtx_config.o(.rev16_text), (4 bytes).
    Removing rtx_config.o(.revsh_text), (4 bytes).
    Removing rtx_config.o(.rrx_text), (6 bytes).
    Removing misc.o(.rev16_text), (4 bytes).
    Removing misc.o(.revsh_text), (4 bytes).
    Removing misc.o(.rrx_text), (6 bytes).
    Removing misc.o(i.NVIC_PriorityGroupConfig), (20 bytes).
    Removing misc.o(i.NVIC_SetVectorTable), (20 bytes).
    Removing misc.o(i.NVIC_SystemLPConfig), (32 bytes).
    Removing misc.o(i.SysTick_CLKSourceConfig), (40 bytes).
    Removing stm32f10x_gpio.o(.rev16_text), (4 bytes).
    Removing stm32f10x_gpio.o(.revsh_text), (4 bytes).
    Removing stm32f10x_gpio.o(.rrx_text), (6 bytes).
    Removing stm32f10x_gpio.o(i.GPIO_AFIODeInit), (20 bytes).
    Removing stm32f10x_gpio.o(i.GPIO_DeInit), (200 bytes).
    Removing stm32f10x_gpio.o(i.GPIO_ETH_MediaInterfaceConfig), (12 bytes).
    Removing stm32f10x_gpio.o(i.GPIO_EXTILineConfig), (64 bytes).
    Removing stm32f10x_gpio.o(i.GPIO_EventOutputCmd), (12 bytes).
    Removing stm32f10x_gpio.o(i.GPIO_EventOutputConfig), (32 bytes).
    Removing stm32f10x_gpio.o(i.GPIO_PinLockConfig), (18 bytes).
    Removing stm32f10x_gpio.o(i.GPIO_PinRemapConfig), (144 bytes).
    Removing stm32f10x_gpio.o(i.GPIO_ReadInputData), (8 bytes).
    Removing stm32f10x_gpio.o(i.GPIO_ReadInputDataBit), (18 bytes).
    Removing stm32f10x_gpio.o(i.GPIO_ReadOutputData), (8 bytes).
    Removing stm32f10x_gpio.o(i.GPIO_ReadOutputDataBit), (18 bytes).
    Removing stm32f10x_gpio.o(i.GPIO_StructInit), (16 bytes).
    Removing stm32f10x_gpio.o(i.GPIO_Write), (4 bytes).
    Removing stm32f10x_rcc.o(.rev16_text), (4 bytes).
    Removing stm32f10x_rcc.o(.revsh_text), (4 bytes).
    Removing stm32f10x_rcc.o(.rrx_text), (6 bytes).
    Removing stm32f10x_rcc.o(i.RCC_ADCCLKConfig), (24 bytes).
    Removing stm32f10x_rcc.o(i.RCC_AHBPeriphClockCmd), (32 bytes).
    Removing stm32f10x_rcc.o(i.RCC_AHBPeriphResetCmd), (32 bytes).
    Removing stm32f10x_rcc.o(i.RCC_AdjustHSICalibrationValue), (24 bytes).
    Removing stm32f10x_rcc.o(i.RCC_BackupResetCmd), (12 bytes).
    Removing stm32f10x_rcc.o(i.RCC_ClearFlag), (20 bytes).
    Removing stm32f10x_rcc.o(i.RCC_ClearITPendingBit), (12 bytes).
    Removing stm32f10x_rcc.o(i.RCC_ClockSecuritySystemCmd), (12 bytes).
    Removing stm32f10x_rcc.o(i.RCC_DeInit), (92 bytes).
    Removing stm32f10x_rcc.o(i.RCC_GetFlagStatus), (60 bytes).
    Removing stm32f10x_rcc.o(i.RCC_GetITStatus), (24 bytes).
    Removing stm32f10x_rcc.o(i.RCC_GetSYSCLKSource), (16 bytes).
    Removing stm32f10x_rcc.o(i.RCC_HCLKConfig), (24 bytes).
    Removing stm32f10x_rcc.o(i.RCC_HSEConfig), (76 bytes).
    Removing stm32f10x_rcc.o(i.RCC_HSICmd), (12 bytes).
    Removing stm32f10x_rcc.o(i.RCC_I2S2CLKConfig), (12 bytes).
    Removing stm32f10x_rcc.o(i.RCC_I2S3CLKConfig), (12 bytes).
    Removing stm32f10x_rcc.o(i.RCC_ITConfig), (32 bytes).
    Removing stm32f10x_rcc.o(i.RCC_LSEConfig), (52 bytes).
    Removing stm32f10x_rcc.o(i.RCC_LSICmd), (12 bytes).
    Removing stm32f10x_rcc.o(i.RCC_MCOConfig), (12 bytes).
    Removing stm32f10x_rcc.o(i.RCC_OTGFSCLKConfig), (12 bytes).
    Removing stm32f10x_rcc.o(i.RCC_PCLK1Config), (24 bytes).
    Removing stm32f10x_rcc.o(i.RCC_PCLK2Config), (24 bytes).
    Removing stm32f10x_rcc.o(i.RCC_PLL2Cmd), (12 bytes).
    Removing stm32f10x_rcc.o(i.RCC_PLL2Config), (24 bytes).
    Removing stm32f10x_rcc.o(i.RCC_PLL3Cmd), (12 bytes).
    Removing stm32f10x_rcc.o(i.RCC_PLL3Config), (24 bytes).
    Removing stm32f10x_rcc.o(i.RCC_PLLCmd), (12 bytes).
    Removing stm32f10x_rcc.o(i.RCC_PLLConfig), (28 bytes).
    Removing stm32f10x_rcc.o(i.RCC_PREDIV1Config), (32 bytes).
    Removing stm32f10x_rcc.o(i.RCC_PREDIV2Config), (24 bytes).
    Removing stm32f10x_rcc.o(i.RCC_RTCCLKCmd), (12 bytes).
    Removing stm32f10x_rcc.o(i.RCC_RTCCLKConfig), (16 bytes).
    Removing stm32f10x_rcc.o(i.RCC_SYSCLKConfig), (24 bytes).
    Removing stm32f10x_rcc.o(i.RCC_WaitForHSEStartUp), (56 bytes).
    Removing stm32f10x_tim.o(.rev16_text), (4 bytes).
    Removing stm32f10x_tim.o(.revsh_text), (4 bytes).
    Removing stm32f10x_tim.o(.rrx_text), (6 bytes).
    Removing stm32f10x_tim.o(i.TI1_Config), (128 bytes).
    Removing stm32f10x_tim.o(i.TI2_Config), (152 bytes).
    Removing stm32f10x_tim.o(i.TI3_Config), (144 bytes).
    Removing stm32f10x_tim.o(i.TI4_Config), (152 bytes).
    Removing stm32f10x_tim.o(i.TIM_ARRPreloadConfig), (24 bytes).
    Removing stm32f10x_tim.o(i.TIM_BDTRConfig), (32 bytes).
    Removing stm32f10x_tim.o(i.TIM_BDTRStructInit), (18 bytes).
    Removing stm32f10x_tim.o(i.TIM_CCPreloadControl), (24 bytes).
    Removing stm32f10x_tim.o(i.TIM_CCxCmd), (30 bytes).
    Removing stm32f10x_tim.o(i.TIM_CCxNCmd), (30 bytes).
    Removing stm32f10x_tim.o(i.TIM_ClearFlag), (6 bytes).
    Removing stm32f10x_tim.o(i.TIM_ClearOC1Ref), (18 bytes).
    Removing stm32f10x_tim.o(i.TIM_ClearOC2Ref), (24 bytes).
    Removing stm32f10x_tim.o(i.TIM_ClearOC3Ref), (18 bytes).
    Removing stm32f10x_tim.o(i.TIM_ClearOC4Ref), (24 bytes).
    Removing stm32f10x_tim.o(i.TIM_CounterModeConfig), (18 bytes).
    Removing stm32f10x_tim.o(i.TIM_CtrlPWMOutputs), (30 bytes).
    Removing stm32f10x_tim.o(i.TIM_DMACmd), (18 bytes).
    Removing stm32f10x_tim.o(i.TIM_DMAConfig), (10 bytes).
    Removing stm32f10x_tim.o(i.TIM_DeInit), (488 bytes).
    Removing stm32f10x_tim.o(i.TIM_ETRClockMode1Config), (54 bytes).
    Removing stm32f10x_tim.o(i.TIM_ETRClockMode2Config), (32 bytes).
    Removing stm32f10x_tim.o(i.TIM_ETRConfig), (28 bytes).
    Removing stm32f10x_tim.o(i.TIM_EncoderInterfaceConfig), (66 bytes).
    Removing stm32f10x_tim.o(i.TIM_ForcedOC1Config), (18 bytes).
    Removing stm32f10x_tim.o(i.TIM_ForcedOC2Config), (26 bytes).
    Removing stm32f10x_tim.o(i.TIM_ForcedOC3Config), (18 bytes).
    Removing stm32f10x_tim.o(i.TIM_ForcedOC4Config), (26 bytes).
    Removing stm32f10x_tim.o(i.TIM_GenerateEvent), (4 bytes).
    Removing stm32f10x_tim.o(i.TIM_GetCapture1), (6 bytes).
    Removing stm32f10x_tim.o(i.TIM_GetCapture2), (6 bytes).
    Removing stm32f10x_tim.o(i.TIM_GetCapture3), (6 bytes).
    Removing stm32f10x_tim.o(i.TIM_GetCapture4), (8 bytes).
    Removing stm32f10x_tim.o(i.TIM_GetCounter), (6 bytes).
    Removing stm32f10x_tim.o(i.TIM_GetFlagStatus), (18 bytes).
    Removing stm32f10x_tim.o(i.TIM_GetITStatus), (34 bytes).
    Removing stm32f10x_tim.o(i.TIM_GetPrescaler), (6 bytes).
    Removing stm32f10x_tim.o(i.TIM_ICInit), (172 bytes).
    Removing stm32f10x_tim.o(i.TIM_ICStructInit), (18 bytes).
    Removing stm32f10x_tim.o(i.TIM_ITRxExternalClockConfig), (24 bytes).
    Removing stm32f10x_tim.o(i.TIM_InternalClockConfig), (12 bytes).
    Removing stm32f10x_tim.o(i.TIM_OC1FastConfig), (18 bytes).
    Removing stm32f10x_tim.o(i.TIM_OC1Init), (152 bytes).
    Removing stm32f10x_tim.o(i.TIM_OC1NPolarityConfig), (18 bytes).
    Removing stm32f10x_tim.o(i.TIM_OC1PolarityConfig), (18 bytes).
    Removing stm32f10x_tim.o(i.TIM_OC1PreloadConfig), (18 bytes).
    Removing stm32f10x_tim.o(i.TIM_OC2FastConfig), (26 bytes).
    Removing stm32f10x_tim.o(i.TIM_OC2Init), (164 bytes).
    Removing stm32f10x_tim.o(i.TIM_OC2NPolarityConfig), (26 bytes).
    Removing stm32f10x_tim.o(i.TIM_OC2PolarityConfig), (26 bytes).
    Removing stm32f10x_tim.o(i.TIM_OC2PreloadConfig), (26 bytes).
    Removing stm32f10x_tim.o(i.TIM_OC3FastConfig), (18 bytes).
    Removing stm32f10x_tim.o(i.TIM_OC3NPolarityConfig), (26 bytes).
    Removing stm32f10x_tim.o(i.TIM_OC3PolarityConfig), (26 bytes).
    Removing stm32f10x_tim.o(i.TIM_OC3PreloadConfig), (18 bytes).
    Removing stm32f10x_tim.o(i.TIM_OC4FastConfig), (26 bytes).
    Removing stm32f10x_tim.o(i.TIM_OC4PolarityConfig), (26 bytes).
    Removing stm32f10x_tim.o(i.TIM_OC4PreloadConfig), (26 bytes).
    Removing stm32f10x_tim.o(i.TIM_OCStructInit), (20 bytes).
    Removing stm32f10x_tim.o(i.TIM_PWMIConfig), (124 bytes).
    Removing stm32f10x_tim.o(i.TIM_PrescalerConfig), (6 bytes).
    Removing stm32f10x_tim.o(i.TIM_SelectCCDMA), (24 bytes).
    Removing stm32f10x_tim.o(i.TIM_SelectCOM), (24 bytes).
    Removing stm32f10x_tim.o(i.TIM_SelectHallSensor), (24 bytes).
    Removing stm32f10x_tim.o(i.TIM_SelectInputTrigger), (18 bytes).
    Removing stm32f10x_tim.o(i.TIM_SelectMasterSlaveMode), (18 bytes).
    Removing stm32f10x_tim.o(i.TIM_SelectOCxM), (82 bytes).
    Removing stm32f10x_tim.o(i.TIM_SelectOnePulseMode), (18 bytes).
    Removing stm32f10x_tim.o(i.TIM_SelectOutputTrigger), (18 bytes).
    Removing stm32f10x_tim.o(i.TIM_SelectSlaveMode), (18 bytes).
    Removing stm32f10x_tim.o(i.TIM_SetAutoreload), (4 bytes).
    Removing stm32f10x_tim.o(i.TIM_SetClockDivision), (18 bytes).
    Removing stm32f10x_tim.o(i.TIM_SetCompare1), (4 bytes).
    Removing stm32f10x_tim.o(i.TIM_SetCompare2), (4 bytes).
    Removing stm32f10x_tim.o(i.TIM_SetCompare3), (4 bytes).
    Removing stm32f10x_tim.o(i.TIM_SetCompare4), (6 bytes).
    Removing stm32f10x_tim.o(i.TIM_SetCounter), (4 bytes).
    Removing stm32f10x_tim.o(i.TIM_SetIC1Prescaler), (18 bytes).
    Removing stm32f10x_tim.o(i.TIM_SetIC2Prescaler), (26 bytes).
    Removing stm32f10x_tim.o(i.TIM_SetIC3Prescaler), (18 bytes).
    Removing stm32f10x_tim.o(i.TIM_SetIC4Prescaler), (26 bytes).
    Removing stm32f10x_tim.o(i.TIM_TIxExternalClockConfig), (62 bytes).
    Removing stm32f10x_tim.o(i.TIM_TimeBaseStructInit), (18 bytes).
    Removing stm32f10x_tim.o(i.TIM_UpdateDisableConfig), (24 bytes).
    Removing stm32f10x_tim.o(i.TIM_UpdateRequestConfig), (24 bytes).
    Removing stm32f10x_usart.o(.rev16_text), (4 bytes).
    Removing stm32f10x_usart.o(.revsh_text), (4 bytes).
    Removing stm32f10x_usart.o(.rrx_text), (6 bytes).
    Removing stm32f10x_usart.o(i.USART_ClearFlag), (18 bytes).
    Removing stm32f10x_usart.o(i.USART_ClearITPendingBit), (30 bytes).
    Removing stm32f10x_usart.o(i.USART_ClockStructInit), (12 bytes).
    Removing stm32f10x_usart.o(i.USART_DMACmd), (18 bytes).
    Removing stm32f10x_usart.o(i.USART_GetITStatus), (84 bytes).
    Removing stm32f10x_usart.o(i.USART_HalfDuplexCmd), (24 bytes).
    Removing stm32f10x_usart.o(i.USART_IrDACmd), (24 bytes).
    Removing stm32f10x_usart.o(i.USART_IrDAConfig), (18 bytes).
    Removing stm32f10x_usart.o(i.USART_LINBreakDetectLengthConfig), (18 bytes).
    Removing stm32f10x_usart.o(i.USART_LINCmd), (24 bytes).
    Removing stm32f10x_usart.o(i.USART_OneBitMethodCmd), (24 bytes).
    Removing stm32f10x_usart.o(i.USART_OverSampling8Cmd), (22 bytes).
    Removing stm32f10x_usart.o(i.USART_ReceiverWakeUpCmd), (24 bytes).
    Removing stm32f10x_usart.o(i.USART_SendBreak), (10 bytes).
    Removing stm32f10x_usart.o(i.USART_SetAddress), (18 bytes).
    Removing stm32f10x_usart.o(i.USART_SetGuardTime), (16 bytes).
    Removing stm32f10x_usart.o(i.USART_SetPrescaler), (16 bytes).
    Removing stm32f10x_usart.o(i.USART_SmartCardCmd), (24 bytes).
    Removing stm32f10x_usart.o(i.USART_SmartCardNACKCmd), (24 bytes).
    Removing stm32f10x_usart.o(i.USART_StructInit), (24 bytes).
    Removing stm32f10x_usart.o(i.USART_WakeUpConfig), (18 bytes).
    Removing system_stm32f10x.o(.rev16_text), (4 bytes).
    Removing system_stm32f10x.o(.revsh_text), (4 bytes).
    Removing system_stm32f10x.o(.rrx_text), (6 bytes).
    Removing rtx_kernel.o(.text), (0 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.svcRtxKernelInitialize), (8 bytes).
    Removing rtx_kernel.o(.text.svcRtxKernelGetInfo), (66 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.svcRtxKernelGetInfo), (8 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.svcRtxKernelGetState), (8 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.svcRtxKernelStart), (8 bytes).
    Removing rtx_kernel.o(.text.svcRtxKernelLock), (36 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.svcRtxKernelLock), (8 bytes).
    Removing rtx_kernel.o(.text.svcRtxKernelUnlock), (36 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.svcRtxKernelUnlock), (8 bytes).
    Removing rtx_kernel.o(.text.svcRtxKernelRestoreLock), (46 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.svcRtxKernelRestoreLock), (8 bytes).
    Removing rtx_kernel.o(.text.svcRtxKernelSuspend), (134 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.svcRtxKernelSuspend), (8 bytes).
    Removing rtx_kernel.o(.text.svcRtxKernelResume), (226 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.svcRtxKernelResume), (8 bytes).
    Removing rtx_kernel.o(.text.svcRtxKernelGetTickCount), (14 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.svcRtxKernelGetTickCount), (8 bytes).
    Removing rtx_kernel.o(.text.svcRtxKernelGetTickFreq), (12 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.svcRtxKernelGetTickFreq), (8 bytes).
    Removing rtx_kernel.o(.text.svcRtxKernelGetSysTimerCount), (4 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.svcRtxKernelGetSysTimerCount), (8 bytes).
    Removing rtx_kernel.o(.text.svcRtxKernelGetSysTimerFreq), (4 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.svcRtxKernelGetSysTimerFreq), (8 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.osKernelInitialize), (8 bytes).
    Removing rtx_kernel.o(.text.osKernelGetInfo), (112 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.osKernelGetInfo), (8 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.osKernelGetState), (8 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.osKernelStart), (8 bytes).
    Removing rtx_kernel.o(.text.osKernelLock), (36 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.osKernelLock), (8 bytes).
    Removing rtx_kernel.o(.text.osKernelUnlock), (36 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.osKernelUnlock), (8 bytes).
    Removing rtx_kernel.o(.text.osKernelRestoreLock), (36 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.osKernelRestoreLock), (8 bytes).
    Removing rtx_kernel.o(.text.osKernelSuspend), (34 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.osKernelSuspend), (8 bytes).
    Removing rtx_kernel.o(.text.osKernelResume), (34 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.osKernelResume), (8 bytes).
    Removing rtx_kernel.o(.text.osKernelGetTickCount), (36 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.osKernelGetTickCount), (8 bytes).
    Removing rtx_kernel.o(.text.osKernelGetTickFreq), (34 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.osKernelGetTickFreq), (8 bytes).
    Removing rtx_kernel.o(.text.osKernelGetSysTimerCount), (40 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.osKernelGetSysTimerCount), (8 bytes).
    Removing rtx_kernel.o(.text.osKernelGetSysTimerFreq), (40 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.osKernelGetSysTimerFreq), (8 bytes).
    Removing rtx_kernel.o(.data.irqRtxLibRef), (4 bytes).
    Removing rtx_thread.o(.text), (0 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osRtxThreadListPut), (8 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osRtxThreadListGet), (8 bytes).
    Removing rtx_thread.o(.text.osRtxThreadListRoot), (26 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osRtxThreadListRoot), (8 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osRtxThreadListSort), (8 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osRtxThreadListRemove), (8 bytes).
    Removing rtx_thread.o(.text.osRtxThreadListUnlink), (26 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osRtxThreadListUnlink), (8 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osRtxThreadReadyPut), (8 bytes).
    Removing rtx_thread.o(.text.osRtxThreadDelayInsert), (160 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osRtxThreadDelayInsert), (8 bytes).
    Removing rtx_thread.o(.text.osRtxThreadDelayRemove), (118 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osRtxThreadDelayRemove), (8 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osRtxThreadDelayTick), (8 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osRtxThreadRegPtr), (8 bytes).
    Removing rtx_thread.o(.text.osRtxThreadBlock), (70 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osRtxThreadBlock), (8 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osRtxThreadSwitch), (8 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osRtxThreadStackCheck), (8 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osRtxThreadDispatch), (8 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osRtxThreadWaitExit), (8 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osRtxThreadWaitEnter), (8 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osRtxThreadPostProcess), (8 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.svcRtxThreadNew), (8 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osThreadExit), (8 bytes).
    Removing rtx_thread.o(.text.svcRtxThreadGetName), (22 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.svcRtxThreadGetName), (8 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.svcRtxThreadGetId), (8 bytes).
    Removing rtx_thread.o(.text.svcRtxThreadGetState), (22 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.svcRtxThreadGetState), (8 bytes).
    Removing rtx_thread.o(.text.svcRtxThreadGetStackSize), (22 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.svcRtxThreadGetStackSize), (8 bytes).
    Removing rtx_thread.o(.text.svcRtxThreadGetStackSpace), (74 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.svcRtxThreadGetStackSpace), (8 bytes).
    Removing rtx_thread.o(.text.svcRtxThreadSetPriority), (324 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.svcRtxThreadSetPriority), (8 bytes).
    Removing rtx_thread.o(.text.svcRtxThreadGetPriority), (30 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.svcRtxThreadGetPriority), (8 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.svcRtxThreadYield), (8 bytes).
    Removing rtx_thread.o(.text.svcRtxThreadSuspend), (330 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.svcRtxThreadSuspend), (8 bytes).
    Removing rtx_thread.o(.text.svcRtxThreadResume), (170 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.svcRtxThreadResume), (8 bytes).
    Removing rtx_thread.o(.text.svcRtxThreadDetach), (186 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.svcRtxThreadDetach), (8 bytes).
    Removing rtx_thread.o(.text.svcRtxThreadJoin), (336 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.svcRtxThreadJoin), (8 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.svcRtxThreadExit), (8 bytes).
    Removing rtx_thread.o(.text.svcRtxThreadTerminate), (664 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.svcRtxThreadTerminate), (8 bytes).
    Removing rtx_thread.o(.text.svcRtxThreadGetCount), (54 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.svcRtxThreadGetCount), (8 bytes).
    Removing rtx_thread.o(.text.svcRtxThreadEnumerate), (112 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.svcRtxThreadEnumerate), (8 bytes).
    Removing rtx_thread.o(.text.svcRtxThreadFlagsSet), (486 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.svcRtxThreadFlagsSet), (8 bytes).
    Removing rtx_thread.o(.text.svcRtxThreadFlagsClear), (82 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.svcRtxThreadFlagsClear), (8 bytes).
    Removing rtx_thread.o(.text.svcRtxThreadFlagsGet), (30 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.svcRtxThreadFlagsGet), (8 bytes).
    Removing rtx_thread.o(.text.svcRtxThreadFlagsWait), (194 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.svcRtxThreadFlagsWait), (8 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osThreadNew), (8 bytes).
    Removing rtx_thread.o(.text.osThreadGetName), (34 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osThreadGetName), (8 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osThreadGetId), (8 bytes).
    Removing rtx_thread.o(.text.osThreadGetState), (36 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osThreadGetState), (8 bytes).
    Removing rtx_thread.o(.text.osThreadGetStackSize), (34 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osThreadGetStackSize), (8 bytes).
    Removing rtx_thread.o(.text.osThreadGetStackSpace), (34 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osThreadGetStackSpace), (8 bytes).
    Removing rtx_thread.o(.text.osThreadSetPriority), (36 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osThreadSetPriority), (8 bytes).
    Removing rtx_thread.o(.text.osThreadGetPriority), (36 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osThreadGetPriority), (8 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osThreadYield), (8 bytes).
    Removing rtx_thread.o(.text.osThreadSuspend), (36 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osThreadSuspend), (8 bytes).
    Removing rtx_thread.o(.text.osThreadResume), (36 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osThreadResume), (8 bytes).
    Removing rtx_thread.o(.text.osThreadDetach), (36 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osThreadDetach), (8 bytes).
    Removing rtx_thread.o(.text.osThreadJoin), (36 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osThreadJoin), (8 bytes).
    Removing rtx_thread.o(.text.osThreadTerminate), (36 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osThreadTerminate), (8 bytes).
    Removing rtx_thread.o(.text.osThreadGetCount), (34 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osThreadGetCount), (8 bytes).
    Removing rtx_thread.o(.text.osThreadEnumerate), (34 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osThreadEnumerate), (8 bytes).
    Removing rtx_thread.o(.text.osThreadFlagsSet), (94 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osThreadFlagsSet), (8 bytes).
    Removing rtx_thread.o(.text.osThreadFlagsClear), (36 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osThreadFlagsClear), (8 bytes).
    Removing rtx_thread.o(.text.osThreadFlagsGet), (34 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osThreadFlagsGet), (8 bytes).
    Removing rtx_thread.o(.text.osThreadFlagsWait), (36 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osThreadFlagsWait), (8 bytes).
    Removing rtx_delay.o(.text), (0 bytes).
    Removing rtx_delay.o(.ARM.exidx.text.svcRtxDelay), (8 bytes).
    Removing rtx_delay.o(.text.svcRtxDelayUntil), (58 bytes).
    Removing rtx_delay.o(.ARM.exidx.text.svcRtxDelayUntil), (8 bytes).
    Removing rtx_delay.o(.ARM.exidx.text.osDelay), (8 bytes).
    Removing rtx_delay.o(.text.osDelayUntil), (36 bytes).
    Removing rtx_delay.o(.ARM.exidx.text.osDelayUntil), (8 bytes).
    Removing rtx_timer.o(.text), (0 bytes).
    Removing rtx_timer.o(.ARM.exidx.text.osRtxTimerTick), (8 bytes).
    Removing rtx_timer.o(.ARM.exidx.text.osRtxTimerThread), (8 bytes).
    Removing rtx_timer.o(.ARM.exidx.text.svcRtxTimerNew), (8 bytes).
    Removing rtx_timer.o(.text.svcRtxTimerGetName), (22 bytes).
    Removing rtx_timer.o(.ARM.exidx.text.svcRtxTimerGetName), (8 bytes).
    Removing rtx_timer.o(.ARM.exidx.text.svcRtxTimerStart), (8 bytes).
    Removing rtx_timer.o(.text.svcRtxTimerStop), (82 bytes).
    Removing rtx_timer.o(.ARM.exidx.text.svcRtxTimerStop), (8 bytes).
    Removing rtx_timer.o(.text.svcRtxTimerIsRunning), (24 bytes).
    Removing rtx_timer.o(.ARM.exidx.text.svcRtxTimerIsRunning), (8 bytes).
    Removing rtx_timer.o(.text.svcRtxTimerDelete), (132 bytes).
    Removing rtx_timer.o(.ARM.exidx.text.svcRtxTimerDelete), (8 bytes).
    Removing rtx_timer.o(.ARM.exidx.text.osTimerNew), (8 bytes).
    Removing rtx_timer.o(.text.osTimerGetName), (34 bytes).
    Removing rtx_timer.o(.ARM.exidx.text.osTimerGetName), (8 bytes).
    Removing rtx_timer.o(.ARM.exidx.text.osTimerStart), (8 bytes).
    Removing rtx_timer.o(.text.osTimerStop), (36 bytes).
    Removing rtx_timer.o(.ARM.exidx.text.osTimerStop), (8 bytes).
    Removing rtx_timer.o(.text.osTimerIsRunning), (34 bytes).
    Removing rtx_timer.o(.ARM.exidx.text.osTimerIsRunning), (8 bytes).
    Removing rtx_timer.o(.text.osTimerDelete), (36 bytes).
    Removing rtx_timer.o(.ARM.exidx.text.osTimerDelete), (8 bytes).
    Removing rtx_mutex.o(.text), (0 bytes).
    Removing rtx_mutex.o(.ARM.exidx.text.osRtxMutexOwnerRelease), (8 bytes).
    Removing rtx_mutex.o(.ARM.exidx.text.svcRtxMutexNew), (8 bytes).
    Removing rtx_mutex.o(.text.svcRtxMutexGetName), (22 bytes).
    Removing rtx_mutex.o(.ARM.exidx.text.svcRtxMutexGetName), (8 bytes).
    Removing rtx_mutex.o(.ARM.exidx.text.svcRtxMutexAcquire), (8 bytes).
    Removing rtx_mutex.o(.ARM.exidx.text.svcRtxMutexRelease), (8 bytes).
    Removing rtx_mutex.o(.text.svcRtxMutexGetOwner), (28 bytes).
    Removing rtx_mutex.o(.ARM.exidx.text.svcRtxMutexGetOwner), (8 bytes).
    Removing rtx_mutex.o(.ARM.exidx.text.svcRtxMutexDelete), (8 bytes).
    Removing rtx_mutex.o(.ARM.exidx.text.osMutexNew), (8 bytes).
    Removing rtx_mutex.o(.text.osMutexGetName), (34 bytes).
    Removing rtx_mutex.o(.ARM.exidx.text.osMutexGetName), (8 bytes).
    Removing rtx_mutex.o(.ARM.exidx.text.osMutexAcquire), (8 bytes).
    Removing rtx_mutex.o(.ARM.exidx.text.osMutexRelease), (8 bytes).
    Removing rtx_mutex.o(.text.osMutexGetOwner), (34 bytes).
    Removing rtx_mutex.o(.ARM.exidx.text.osMutexGetOwner), (8 bytes).
    Removing rtx_mutex.o(.ARM.exidx.text.osMutexDelete), (8 bytes).
    Removing rtx_msgqueue.o(.text), (0 bytes).
    Removing rtx_msgqueue.o(.ARM.exidx.text.osRtxMessageQueuePostProcess), (8 bytes).
    Removing rtx_msgqueue.o(.ARM.exidx.text.svcRtxMessageQueueNew), (8 bytes).
    Removing rtx_msgqueue.o(.text.svcRtxMessageQueueGetName), (22 bytes).
    Removing rtx_msgqueue.o(.ARM.exidx.text.svcRtxMessageQueueGetName), (8 bytes).
    Removing rtx_msgqueue.o(.ARM.exidx.text.svcRtxMessageQueuePut), (8 bytes).
    Removing rtx_msgqueue.o(.ARM.exidx.text.svcRtxMessageQueueGet), (8 bytes).
    Removing rtx_msgqueue.o(.text.svcRtxMessageQueueGetCapacity), (22 bytes).
    Removing rtx_msgqueue.o(.ARM.exidx.text.svcRtxMessageQueueGetCapacity), (8 bytes).
    Removing rtx_msgqueue.o(.text.svcRtxMessageQueueGetMsgSize), (22 bytes).
    Removing rtx_msgqueue.o(.ARM.exidx.text.svcRtxMessageQueueGetMsgSize), (8 bytes).
    Removing rtx_msgqueue.o(.ARM.exidx.text.svcRtxMessageQueueGetCount), (8 bytes).
    Removing rtx_msgqueue.o(.ARM.exidx.text.svcRtxMessageQueueGetSpace), (8 bytes).
    Removing rtx_msgqueue.o(.text.svcRtxMessageQueueReset), (394 bytes).
    Removing rtx_msgqueue.o(.ARM.exidx.text.svcRtxMessageQueueReset), (8 bytes).
    Removing rtx_msgqueue.o(.text.svcRtxMessageQueueDelete), (142 bytes).
    Removing rtx_msgqueue.o(.ARM.exidx.text.svcRtxMessageQueueDelete), (8 bytes).
    Removing rtx_msgqueue.o(.ARM.exidx.text.osMessageQueueNew), (8 bytes).
    Removing rtx_msgqueue.o(.text.osMessageQueueGetName), (34 bytes).
    Removing rtx_msgqueue.o(.ARM.exidx.text.osMessageQueueGetName), (8 bytes).
    Removing rtx_msgqueue.o(.ARM.exidx.text.osMessageQueuePut), (8 bytes).
    Removing rtx_msgqueue.o(.ARM.exidx.text.osMessageQueueGet), (8 bytes).
    Removing rtx_msgqueue.o(.text.osMessageQueueGetCapacity), (52 bytes).
    Removing rtx_msgqueue.o(.ARM.exidx.text.osMessageQueueGetCapacity), (8 bytes).
    Removing rtx_msgqueue.o(.text.osMessageQueueGetMsgSize), (52 bytes).
    Removing rtx_msgqueue.o(.ARM.exidx.text.osMessageQueueGetMsgSize), (8 bytes).
    Removing rtx_msgqueue.o(.ARM.exidx.text.osMessageQueueGetCount), (8 bytes).
    Removing rtx_msgqueue.o(.ARM.exidx.text.osMessageQueueGetSpace), (8 bytes).
    Removing rtx_msgqueue.o(.text.osMessageQueueReset), (36 bytes).
    Removing rtx_msgqueue.o(.ARM.exidx.text.osMessageQueueReset), (8 bytes).
    Removing rtx_msgqueue.o(.text.osMessageQueueDelete), (36 bytes).
    Removing rtx_msgqueue.o(.ARM.exidx.text.osMessageQueueDelete), (8 bytes).
    Removing rtx_memory.o(.text), (0 bytes).
    Removing rtx_memory.o(.ARM.exidx.text.osRtxMemoryInit), (8 bytes).
    Removing rtx_memory.o(.ARM.exidx.text.osRtxMemoryAlloc), (8 bytes).
    Removing rtx_memory.o(.ARM.exidx.text.osRtxMemoryFree), (8 bytes).
    Removing rtx_mempool.o(.text), (0 bytes).
    Removing rtx_mempool.o(.ARM.exidx.text.osRtxMemoryPoolInit), (8 bytes).
    Removing rtx_mempool.o(.ARM.exidx.text.osRtxMemoryPoolAlloc), (8 bytes).
    Removing rtx_mempool.o(.ARM.exidx.text.osRtxMemoryPoolFree), (8 bytes).
    Removing rtx_mempool.o(.text.osRtxMemoryPoolPostProcess), (98 bytes).
    Removing rtx_mempool.o(.ARM.exidx.text.osRtxMemoryPoolPostProcess), (8 bytes).
    Removing rtx_mempool.o(.text.svcRtxMemoryPoolNew), (508 bytes).
    Removing rtx_mempool.o(.ARM.exidx.text.svcRtxMemoryPoolNew), (8 bytes).
    Removing rtx_mempool.o(.text.svcRtxMemoryPoolGetName), (22 bytes).
    Removing rtx_mempool.o(.ARM.exidx.text.svcRtxMemoryPoolGetName), (8 bytes).
    Removing rtx_mempool.o(.text.svcRtxMemoryPoolAlloc), (122 bytes).
    Removing rtx_mempool.o(.ARM.exidx.text.svcRtxMemoryPoolAlloc), (8 bytes).
    Removing rtx_mempool.o(.text.svcRtxMemoryPoolFree), (204 bytes).
    Removing rtx_mempool.o(.ARM.exidx.text.svcRtxMemoryPoolFree), (8 bytes).
    Removing rtx_mempool.o(.text.svcRtxMemoryPoolGetCapacity), (22 bytes).
    Removing rtx_mempool.o(.ARM.exidx.text.svcRtxMemoryPoolGetCapacity), (8 bytes).
    Removing rtx_mempool.o(.text.svcRtxMemoryPoolGetBlockSize), (22 bytes).
    Removing rtx_mempool.o(.ARM.exidx.text.svcRtxMemoryPoolGetBlockSize), (8 bytes).
    Removing rtx_mempool.o(.text.svcRtxMemoryPoolGetCount), (22 bytes).
    Removing rtx_mempool.o(.ARM.exidx.text.svcRtxMemoryPoolGetCount), (8 bytes).
    Removing rtx_mempool.o(.text.svcRtxMemoryPoolGetSpace), (26 bytes).
    Removing rtx_mempool.o(.ARM.exidx.text.svcRtxMemoryPoolGetSpace), (8 bytes).
    Removing rtx_mempool.o(.text.svcRtxMemoryPoolDelete), (204 bytes).
    Removing rtx_mempool.o(.ARM.exidx.text.svcRtxMemoryPoolDelete), (8 bytes).
    Removing rtx_mempool.o(.text.osMemoryPoolNew), (58 bytes).
    Removing rtx_mempool.o(.ARM.exidx.text.osMemoryPoolNew), (8 bytes).
    Removing rtx_mempool.o(.text.osMemoryPoolGetName), (34 bytes).
    Removing rtx_mempool.o(.ARM.exidx.text.osMemoryPoolGetName), (8 bytes).
    Removing rtx_mempool.o(.text.osMemoryPoolAlloc), (132 bytes).
    Removing rtx_mempool.o(.ARM.exidx.text.osMemoryPoolAlloc), (8 bytes).
    Removing rtx_mempool.o(.text.osMemoryPoolFree), (154 bytes).
    Removing rtx_mempool.o(.ARM.exidx.text.osMemoryPoolFree), (8 bytes).
    Removing rtx_mempool.o(.text.osMemoryPoolGetCapacity), (52 bytes).
    Removing rtx_mempool.o(.ARM.exidx.text.osMemoryPoolGetCapacity), (8 bytes).
    Removing rtx_mempool.o(.text.osMemoryPoolGetBlockSize), (52 bytes).
    Removing rtx_mempool.o(.ARM.exidx.text.osMemoryPoolGetBlockSize), (8 bytes).
    Removing rtx_mempool.o(.text.osMemoryPoolGetCount), (52 bytes).
    Removing rtx_mempool.o(.ARM.exidx.text.osMemoryPoolGetCount), (8 bytes).
    Removing rtx_mempool.o(.text.osMemoryPoolGetSpace), (56 bytes).
    Removing rtx_mempool.o(.ARM.exidx.text.osMemoryPoolGetSpace), (8 bytes).
    Removing rtx_mempool.o(.text.osMemoryPoolDelete), (36 bytes).
    Removing rtx_mempool.o(.ARM.exidx.text.osMemoryPoolDelete), (8 bytes).
    Removing rtx_system.o(.text), (0 bytes).
    Removing rtx_system.o(.ARM.exidx.text.osRtxTick_Handler), (8 bytes).
    Removing rtx_system.o(.ARM.exidx.text.osRtxSysTimerAckIRQ), (8 bytes).
    Removing rtx_system.o(.ARM.exidx.text.osRtxPendSV_Handler), (8 bytes).
    Removing rtx_system.o(.ARM.exidx.text.osRtxPostProcess), (8 bytes).
    Removing rtx_system.o(.ARM.exidx.text.osRtxSysTimerSetup), (8 bytes).
    Removing rtx_system.o(.ARM.exidx.text.osRtxSysTimerEnable), (8 bytes).
    Removing rtx_system.o(.text.osRtxSysTimerDisable), (14 bytes).
    Removing rtx_system.o(.ARM.exidx.text.osRtxSysTimerDisable), (8 bytes).
    Removing rtx_system.o(.text.osRtxSysTimerGetCount), (58 bytes).
    Removing rtx_system.o(.ARM.exidx.text.osRtxSysTimerGetCount), (8 bytes).
    Removing rtx_system.o(.text.osRtxSysTimerGetFreq), (12 bytes).
    Removing rtx_system.o(.ARM.exidx.text.osRtxSysTimerGetFreq), (8 bytes).

513 unused section(s) (total 16066 bytes) removed from the image.

==============================================================================

Image Symbol Table

    Local Symbols

    Symbol Name                              Value     Ov Type        Size  Object(Section)

    ../../../Source/rtx_delay.c              0x00000000   Number         0  rtx_delay.o ABSOLUTE
    ../../../Source/rtx_kernel.c             0x00000000   Number         0  rtx_kernel.o ABSOLUTE
    ../../../Source/rtx_memory.c             0x00000000   Number         0  rtx_memory.o ABSOLUTE
    ../../../Source/rtx_mempool.c            0x00000000   Number         0  rtx_mempool.o ABSOLUTE
    ../../../Source/rtx_msgqueue.c           0x00000000   Number         0  rtx_msgqueue.o ABSOLUTE
    ../../../Source/rtx_mutex.c              0x00000000   Number         0  rtx_mutex.o ABSOLUTE
    ../../../Source/rtx_system.c             0x00000000   Number         0  rtx_system.o ABSOLUTE
    ../../../Source/rtx_thread.c             0x00000000   Number         0  rtx_thread.o ABSOLUTE
    ../../../Source/rtx_timer.c              0x00000000   Number         0  rtx_timer.o ABSOLUTE
    ../clib/angel/boardlib.s                 0x00000000   Number         0  boardshut.o ABSOLUTE
    ../clib/angel/boardlib.s                 0x00000000   Number         0  boardinit1.o ABSOLUTE
    ../clib/angel/boardlib.s                 0x00000000   Number         0  boardinit3.o ABSOLUTE
    ../clib/angel/dczerorl2.s                0x00000000   Number         0  __dczerorl2.o ABSOLUTE
    ../clib/angel/handlers.s                 0x00000000   Number         0  __scatter_zi.o ABSOLUTE
    ../clib/angel/kernel.s                   0x00000000   Number         0  __rtentry4.o ABSOLUTE
    ../clib/angel/kernel.s                   0x00000000   Number         0  __rtentry.o ABSOLUTE
    ../clib/angel/kernel.s                   0x00000000   Number         0  rtexit2.o ABSOLUTE
    ../clib/angel/kernel.s                   0x00000000   Number         0  rtexit.o ABSOLUTE
    ../clib/angel/kernel.s                   0x00000000   Number         0  __rtentry2.o ABSOLUTE
    ../clib/angel/rt.s                       0x00000000   Number         0  rt_raise.o ABSOLUTE
    ../clib/angel/rt.s                       0x00000000   Number         0  rt_errno_addr_intlibspace.o ABSOLUTE
    ../clib/angel/rt.s                       0x00000000   Number         0  rt_errno_addr.o ABSOLUTE
    ../clib/angel/rt.s                       0x00000000   Number         0  rt_errno_addr_twolibspace.o ABSOLUTE
    ../clib/angel/rt.s                       0x00000000   Number         0  rt_ctype_table.o ABSOLUTE
    ../clib/angel/rt.s                       0x00000000   Number         0  rt_locale.o ABSOLUTE
    ../clib/angel/rt.s                       0x00000000   Number         0  rt_locale_intlibspace.o ABSOLUTE
    ../clib/angel/rt.s                       0x00000000   Number         0  rt_locale_twolibspace.o ABSOLUTE
    ../clib/angel/scatter.s                  0x00000000   Number         0  __scatter.o ABSOLUTE
    ../clib/angel/startup.s                  0x00000000   Number         0  __main.o ABSOLUTE
    ../clib/angel/sys.s                      0x00000000   Number         0  sys_stackheap_outer.o ABSOLUTE
    ../clib/angel/sys.s                      0x00000000   Number         0  use_no_semi.o ABSOLUTE
    ../clib/angel/sys.s                      0x00000000   Number         0  indicate_semi.o ABSOLUTE
    ../clib/angel/sys.s                      0x00000000   Number         0  libspace.o ABSOLUTE
    ../clib/angel/sysapp.c                   0x00000000   Number         0  sys_command.o ABSOLUTE
    ../clib/angel/sysapp.c                   0x00000000   Number         0  sys_wrch.o ABSOLUTE
    ../clib/angel/sysapp.c                   0x00000000   Number         0  sys_exit.o ABSOLUTE
    ../clib/armsys.c                         0x00000000   Number         0  no_argv.o ABSOLUTE
    ../clib/armsys.c                         0x00000000   Number         0  argv_veneer.o ABSOLUTE
    ../clib/armsys.c                         0x00000000   Number         0  _get_argv_nomalloc.o ABSOLUTE
    ../clib/armsys.c                         0x00000000   Number         0  argv_veneer.o ABSOLUTE
    ../clib/heapalloc.c                      0x00000000   Number         0  hrguard.o ABSOLUTE
    ../clib/heapaux.c                        0x00000000   Number         0  heapauxi.o ABSOLUTE
    ../clib/libinit.s                        0x00000000   Number         0  libinit2.o ABSOLUTE
    ../clib/libinit.s                        0x00000000   Number         0  libshutdown.o ABSOLUTE
    ../clib/libinit.s                        0x00000000   Number         0  libinit.o ABSOLUTE
    ../clib/libinit.s                        0x00000000   Number         0  libshutdown2.o ABSOLUTE
    ../clib/locale.s                         0x00000000   Number         0  lc_ctype_c.o ABSOLUTE
    ../clib/memcpset.s                       0x00000000   Number         0  strcmpv7m.o ABSOLUTE
    ../clib/memcpset.s                       0x00000000   Number         0  rt_memclr_w.o ABSOLUTE
    ../clib/memcpset.s                       0x00000000   Number         0  rt_memclr.o ABSOLUTE
    ../clib/memcpset.s                       0x00000000   Number         0  aeabi_memset4.o ABSOLUTE
    ../clib/memcpset.s                       0x00000000   Number         0  rt_memcpy_v6.o ABSOLUTE
    ../clib/memcpset.s                       0x00000000   Number         0  rt_memcpy_w.o ABSOLUTE
    ../clib/scanf.c                          0x00000000   Number         0  _strtoul.o ABSOLUTE
    ../clib/scanf.c                          0x00000000   Number         0  strtoul.o ABSOLUTE
    ../clib/scanf.c                          0x00000000   Number         0  _chval.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_rtmem_inner.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_general.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_segv_inner.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_rtmem_outer.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_stak_inner.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_exit.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_cppl_inner.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_other.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_rtred_inner.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_fpe_inner.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_pvfn_inner.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_rtmem_formal.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_abrt_inner.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  __raise.o ABSOLUTE
    ../clib/signal.s                         0x00000000   Number         0  defsig.o ABSOLUTE
    ../clib/stdlib.c                         0x00000000   Number         0  exit.o ABSOLUTE
    ../clib/string.c                         0x00000000   Number         0  strncmp.o ABSOLUTE
    ../clib/string.c                         0x00000000   Number         0  strlen.o ABSOLUTE
    ../fplib/dfixu.s                         0x00000000   Number         0  dfixu.o ABSOLUTE
    ../fplib/dflt.s                          0x00000000   Number         0  dflt_clz.o ABSOLUTE
    ../fplib/dmul.s                          0x00000000   Number         0  dmul.o ABSOLUTE
    ../fplib/dnaninf.s                       0x00000000   Number         0  dnaninf.o ABSOLUTE
    ../fplib/dretinf.s                       0x00000000   Number         0  dretinf.o ABSOLUTE
    ../fplib/ffix.s                          0x00000000   Number         0  ffix.o ABSOLUTE
    ../fplib/fflt.s                          0x00000000   Number         0  fflt_clz.o ABSOLUTE
    ../fplib/fnaninf.s                       0x00000000   Number         0  fnaninf.o ABSOLUTE
    ../fplib/fpinit.s                        0x00000000   Number         0  fpinit.o ABSOLUTE
    ../fplib/usenofp.s                       0x00000000   Number         0  usenofp.o ABSOLUTE
    ..\..\..\Source\ARM\irq_cm3.s            0x00000000   Number         0  irq_cm3.o ABSOLUTE
    C:\Keil_v5\ARM\PACK\ARM\CMSIS\5.0.1\CMSIS\RTOS2\RTX\Source\rtx_lib.c 0x00000000   Number         0  rtx_lib.o ABSOLUTE
    C:\Keil_v5\ARM\PACK\Keil\STM32F1xx_DFP\2.3.0\Device\StdPeriph_Driver\src\misc.c 0x00000000   Number         0  misc.o ABSOLUTE
    C:\Keil_v5\ARM\PACK\Keil\STM32F1xx_DFP\2.3.0\Device\StdPeriph_Driver\src\stm32f10x_gpio.c 0x00000000   Number         0  stm32f10x_gpio.o ABSOLUTE
    C:\Keil_v5\ARM\PACK\Keil\STM32F1xx_DFP\2.3.0\Device\StdPeriph_Driver\src\stm32f10x_rcc.c 0x00000000   Number         0  stm32f10x_rcc.o ABSOLUTE
    C:\Keil_v5\ARM\PACK\Keil\STM32F1xx_DFP\2.3.0\Device\StdPeriph_Driver\src\stm32f10x_tim.c 0x00000000   Number         0  stm32f10x_tim.o ABSOLUTE
    C:\Keil_v5\ARM\PACK\Keil\STM32F1xx_DFP\2.3.0\Device\StdPeriph_Driver\src\stm32f10x_usart.c 0x00000000   Number         0  stm32f10x_usart.o ABSOLUTE
    C:\\Keil_v5\\ARM\\PACK\\ARM\\CMSIS\\5.0.1\\CMSIS\\RTOS2\\RTX\\Source\\rtx_lib.c 0x00000000   Number         0  rtx_lib.o ABSOLUTE
    C:\\Keil_v5\\ARM\\PACK\\Keil\\STM32F1xx_DFP\\2.3.0\\Device\\StdPeriph_Driver\\src\\misc.c 0x00000000   Number         0  misc.o ABSOLUTE
    C:\\Keil_v5\\ARM\\PACK\\Keil\\STM32F1xx_DFP\\2.3.0\\Device\\StdPeriph_Driver\\src\\stm32f10x_gpio.c 0x00000000   Number         0  stm32f10x_gpio.o ABSOLUTE
    C:\\Keil_v5\\ARM\\PACK\\Keil\\STM32F1xx_DFP\\2.3.0\\Device\\StdPeriph_Driver\\src\\stm32f10x_rcc.c 0x00000000   Number         0  stm32f10x_rcc.o ABSOLUTE
    C:\\Keil_v5\\ARM\\PACK\\Keil\\STM32F1xx_DFP\\2.3.0\\Device\\StdPeriph_Driver\\src\\stm32f10x_tim.c 0x00000000   Number         0  stm32f10x_tim.o ABSOLUTE
    C:\\Keil_v5\\ARM\\PACK\\Keil\\STM32F1xx_DFP\\2.3.0\\Device\\StdPeriph_Driver\\src\\stm32f10x_usart.c 0x00000000   Number         0  stm32f10x_usart.o ABSOLUTE
    LED_driver.c                             0x00000000   Number         0  led_driver.o ABSOLUTE
    LED_driver.c                             0x00000000   Number         0  led_driver.o ABSOLUTE
    RTE\CMSIS\RTX_Config.c                   0x00000000   Number         0  rtx_config.o ABSOLUTE
    RTE\Device\STM32F107RB\startup_stm32f10x_cl.s 0x00000000   Number         0  startup_stm32f10x_cl.o ABSOLUTE
    RTE\Device\STM32F107RB\system_stm32f10x.c 0x00000000   Number         0  system_stm32f10x.o ABSOLUTE
    RTE\\CMSIS\\RTX_Config.c                 0x00000000   Number         0  rtx_config.o ABSOLUTE
    RTE\\Device\\STM32F107RB\\system_stm32f10x.c 0x00000000   Number         0  system_stm32f10x.o ABSOLUTE
    SvVis_cortex.cpp                         0x00000000   Number         0  svvis_cortex.o ABSOLUTE
    SvVis_cortex.cpp                         0x00000000   Number         0  svvis_cortex.o ABSOLUTE
    SvVis_cortex_threads.cpp                 0x00000000   Number         0  svvis_cortex_threads.o ABSOLUTE
    SvVis_cortex_threads.cpp                 0x00000000   Number         0  svvis_cortex_threads.o ABSOLUTE
    USART_driver.cpp                         0x00000000   Number         0  usart_driver.o ABSOLUTE
    USART_driver.cpp                         0x00000000   Number         0  usart_driver.o ABSOLUTE
    dc.s                                     0x00000000   Number         0  dc.o ABSOLUTE
    main.cpp                                 0x00000000   Number         0  main.o ABSOLUTE
    main.cpp                                 0x00000000   Number         0  main.o ABSOLUTE
    motor_driver.c                           0x00000000   Number         0  motor_driver.o ABSOLUTE
    motor_driver.c                           0x00000000   Number         0  motor_driver.o ABSOLUTE
    RESET                                    0x08000000   Section      336  startup_stm32f10x_cl.o(RESET)
    !!!main                                  0x08000150   Section        8  __main.o(!!!main)
    !!!scatter                               0x08000158   Section       52  __scatter.o(!!!scatter)
    !!dczerorl2                              0x0800018c   Section       90  __dczerorl2.o(!!dczerorl2)
    !!handler_zi                             0x080001e8   Section       28  __scatter_zi.o(!!handler_zi)
    .ARM.Collect$$libinit$$00000000          0x08000204   Section        2  libinit.o(.ARM.Collect$$libinit$$00000000)
    .ARM.Collect$$libinit$$00000002          0x08000206   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000002)
    .ARM.Collect$$libinit$$00000004          0x08000206   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000004)
    .ARM.Collect$$libinit$$0000000A          0x08000206   Section        0  libinit2.o(.ARM.Collect$$libinit$$0000000A)
    .ARM.Collect$$libinit$$0000000C          0x08000206   Section        0  libinit2.o(.ARM.Collect$$libinit$$0000000C)
    .ARM.Collect$$libinit$$0000000E          0x08000206   Section        0  libinit2.o(.ARM.Collect$$libinit$$0000000E)
    .ARM.Collect$$libinit$$0000000F          0x08000206   Section        6  libinit2.o(.ARM.Collect$$libinit$$0000000F)
    .ARM.Collect$$libinit$$00000011          0x0800020c   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000011)
    .ARM.Collect$$libinit$$00000012          0x0800020c   Section       12  libinit2.o(.ARM.Collect$$libinit$$00000012)
    .ARM.Collect$$libinit$$00000013          0x08000218   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000013)
    .ARM.Collect$$libinit$$00000015          0x08000218   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000015)
    .ARM.Collect$$libinit$$00000017          0x08000218   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000017)
    .ARM.Collect$$libinit$$00000019          0x08000218   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000019)
    .ARM.Collect$$libinit$$0000001B          0x08000218   Section        0  libinit2.o(.ARM.Collect$$libinit$$0000001B)
    .ARM.Collect$$libinit$$0000001D          0x08000218   Section        0  libinit2.o(.ARM.Collect$$libinit$$0000001D)
    .ARM.Collect$$libinit$$0000001F          0x08000218   Section        0  libinit2.o(.ARM.Collect$$libinit$$0000001F)
    .ARM.Collect$$libinit$$00000021          0x08000218   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000021)
    .ARM.Collect$$libinit$$00000023          0x08000218   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000023)
    .ARM.Collect$$libinit$$00000025          0x08000218   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000025)
    .ARM.Collect$$libinit$$0000002C          0x08000218   Section        0  libinit2.o(.ARM.Collect$$libinit$$0000002C)
    .ARM.Collect$$libinit$$0000002E          0x08000218   Section        0  libinit2.o(.ARM.Collect$$libinit$$0000002E)
    .ARM.Collect$$libinit$$00000030          0x08000218   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000030)
    .ARM.Collect$$libinit$$00000032          0x08000218   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000032)
    .ARM.Collect$$libinit$$00000033          0x08000218   Section        2  libinit2.o(.ARM.Collect$$libinit$$00000033)
    .ARM.Collect$$libshutdown$$00000000      0x0800021a   Section        2  libshutdown.o(.ARM.Collect$$libshutdown$$00000000)
    .ARM.Collect$$libshutdown$$00000002      0x0800021c   Section        0  libshutdown2.o(.ARM.Collect$$libshutdown$$00000002)
    .ARM.Collect$$libshutdown$$00000004      0x0800021c   Section        0  libshutdown2.o(.ARM.Collect$$libshutdown$$00000004)
    .ARM.Collect$$libshutdown$$00000007      0x0800021c   Section        0  libshutdown2.o(.ARM.Collect$$libshutdown$$00000007)
    .ARM.Collect$$libshutdown$$0000000A      0x0800021c   Section        0  libshutdown2.o(.ARM.Collect$$libshutdown$$0000000A)
    .ARM.Collect$$libshutdown$$0000000C      0x0800021c   Section        0  libshutdown2.o(.ARM.Collect$$libshutdown$$0000000C)
    .ARM.Collect$$libshutdown$$0000000F      0x0800021c   Section        0  libshutdown2.o(.ARM.Collect$$libshutdown$$0000000F)
    .ARM.Collect$$libshutdown$$00000010      0x0800021c   Section        2  libshutdown2.o(.ARM.Collect$$libshutdown$$00000010)
    .ARM.Collect$$rtentry$$00000000          0x0800021e   Section        0  __rtentry.o(.ARM.Collect$$rtentry$$00000000)
    .ARM.Collect$$rtentry$$00000002          0x0800021e   Section        0  __rtentry2.o(.ARM.Collect$$rtentry$$00000002)
    .ARM.Collect$$rtentry$$00000004          0x0800021e   Section        6  __rtentry4.o(.ARM.Collect$$rtentry$$00000004)
    .ARM.Collect$$rtentry$$00000008          0x08000224   Section        8  __rtentry2.o(.ARM.Collect$$rtentry$$00000008)
    .ARM.Collect$$rtentry$$0000000A          0x0800022c   Section        4  __rtentry2.o(.ARM.Collect$$rtentry$$0000000A)
    .ARM.Collect$$rtentry$$0000000C          0x08000230   Section        0  __rtentry2.o(.ARM.Collect$$rtentry$$0000000C)
    .ARM.Collect$$rtentry$$0000000D          0x08000230   Section        8  __rtentry2.o(.ARM.Collect$$rtentry$$0000000D)
    .ARM.Collect$$rtexit$$00000000           0x08000238   Section        2  rtexit.o(.ARM.Collect$$rtexit$$00000000)
    .ARM.Collect$$rtexit$$00000002           0x0800023a   Section        0  rtexit2.o(.ARM.Collect$$rtexit$$00000002)
    .ARM.Collect$$rtexit$$00000003           0x0800023a   Section        4  rtexit2.o(.ARM.Collect$$rtexit$$00000003)
    .ARM.Collect$$rtexit$$00000004           0x0800023e   Section        6  rtexit2.o(.ARM.Collect$$rtexit$$00000004)
    .text                                    0x08000244   Section       64  startup_stm32f10x_cl.o(.text)
    .text                                    0x08000284   Section      136  irq_cm3.o(.text)
    .text                                    0x0800030c   Section        0  strtoul.o(.text)
    .text                                    0x0800037e   Section        0  strlen.o(.text)
    .text                                    0x080003bc   Section        0  strncmp.o(.text)
    .text                                    0x08000452   Section      138  rt_memcpy_v6.o(.text)
    .text                                    0x080004dc   Section       16  aeabi_memset4.o(.text)
    .text                                    0x080004ec   Section       68  rt_memclr.o(.text)
    .text                                    0x08000530   Section       78  rt_memclr_w.o(.text)
    .text                                    0x08000580   Section      128  strcmpv7m.o(.text)
    .text                                    0x08000600   Section        0  heapauxi.o(.text)
    .text                                    0x08000608   Section       16  rt_ctype_table.o(.text)
    .text                                    0x08000618   Section        4  rt_errno_addr_twolibspace.o(.text)
    .text                                    0x0800061c   Section        0  _strtoul.o(.text)
    .text                                    0x080006ba   Section      100  rt_memcpy_w.o(.text)
    .text                                    0x08000720   Section        8  libspace.o(.text)
    .text                                    0x08000728   Section       10  rt_locale_twolibspace.o(.text)
    .text                                    0x08000732   Section        0  _chval.o(.text)
    .text                                    0x0800074e   Section       74  sys_stackheap_outer.o(.text)
    .text                                    0x08000798   Section        0  exit.o(.text)
    .text                                    0x080007ac   Section        0  sys_exit.o(.text)
    .text                                    0x080007b8   Section        2  use_no_semi.o(.text)
    .text                                    0x080007ba   Section        0  indicate_semi.o(.text)
    [Anonymous Symbol]                       0x080007bc   Section        0  rtx_delay.o(.text.osDelay)
    [Anonymous Symbol]                       0x080007e0   Section        0  rtx_kernel.o(.text.osKernelGetState)
    [Anonymous Symbol]                       0x0800081c   Section        0  rtx_kernel.o(.text.osKernelInitialize)
    [Anonymous Symbol]                       0x08000858   Section        0  rtx_kernel.o(.text.osKernelStart)
    [Anonymous Symbol]                       0x08000894   Section        0  rtx_msgqueue.o(.text.osMessageQueueGet)
    [Anonymous Symbol]                       0x08000948   Section        0  rtx_msgqueue.o(.text.osMessageQueueGetCount)
    [Anonymous Symbol]                       0x0800097c   Section        0  rtx_msgqueue.o(.text.osMessageQueueGetSpace)
    [Anonymous Symbol]                       0x080009b4   Section        0  rtx_msgqueue.o(.text.osMessageQueueNew)
    [Anonymous Symbol]                       0x080009f0   Section        0  rtx_msgqueue.o(.text.osMessageQueuePut)
    [Anonymous Symbol]                       0x08000a74   Section        0  rtx_mutex.o(.text.osMutexAcquire)
    [Anonymous Symbol]                       0x08000a98   Section        0  rtx_mutex.o(.text.osMutexDelete)
    [Anonymous Symbol]                       0x08000abc   Section        0  rtx_mutex.o(.text.osMutexNew)
    [Anonymous Symbol]                       0x08000af8   Section        0  rtx_mutex.o(.text.osMutexRelease)
    [Anonymous Symbol]                       0x08000b1c   Section        0  rtx_memory.o(.text.osRtxMemoryAlloc)
    [Anonymous Symbol]                       0x08000b8c   Section        0  rtx_memory.o(.text.osRtxMemoryFree)
    [Anonymous Symbol]                       0x08000be4   Section        0  rtx_memory.o(.text.osRtxMemoryInit)
    [Anonymous Symbol]                       0x08000c14   Section        0  rtx_mempool.o(.text.osRtxMemoryPoolAlloc)
    [Anonymous Symbol]                       0x08000c60   Section        0  rtx_mempool.o(.text.osRtxMemoryPoolFree)
    [Anonymous Symbol]                       0x08000cbc   Section        0  rtx_mempool.o(.text.osRtxMemoryPoolInit)
    [Anonymous Symbol]                       0x08000d0c   Section        0  rtx_msgqueue.o(.text.osRtxMessageQueuePostProcess)
    [Anonymous Symbol]                       0x08000ecc   Section        0  rtx_mutex.o(.text.osRtxMutexOwnerRelease)
    [Anonymous Symbol]                       0x08000f18   Section        0  rtx_system.o(.text.osRtxPendSV_Handler)
    [Anonymous Symbol]                       0x08000fc0   Section        0  rtx_system.o(.text.osRtxPostProcess)
    [Anonymous Symbol]                       0x08001038   Section        0  rtx_system.o(.text.osRtxSysTimerAckIRQ)
    [Anonymous Symbol]                       0x08001044   Section        0  rtx_system.o(.text.osRtxSysTimerEnable)
    [Anonymous Symbol]                       0x08001054   Section        0  rtx_system.o(.text.osRtxSysTimerSetup)
    [Anonymous Symbol]                       0x08001090   Section        0  rtx_thread.o(.text.osRtxThreadDelayTick)
    [Anonymous Symbol]                       0x08001118   Section        0  rtx_thread.o(.text.osRtxThreadDispatch)
    [Anonymous Symbol]                       0x08001270   Section        0  rtx_thread.o(.text.osRtxThreadListGet)
    [Anonymous Symbol]                       0x0800128c   Section        0  rtx_thread.o(.text.osRtxThreadListPut)
    [Anonymous Symbol]                       0x080012c4   Section        0  rtx_thread.o(.text.osRtxThreadListRemove)
    [Anonymous Symbol]                       0x080012e0   Section        0  rtx_thread.o(.text.osRtxThreadListSort)
    [Anonymous Symbol]                       0x08001340   Section        0  rtx_thread.o(.text.osRtxThreadPostProcess)
    [Anonymous Symbol]                       0x08001468   Section        0  rtx_thread.o(.text.osRtxThreadReadyPut)
    [Anonymous Symbol]                       0x080014b0   Section        0  rtx_thread.o(.text.osRtxThreadRegPtr)
    [Anonymous Symbol]                       0x080014b8   Section        0  rtx_thread.o(.text.osRtxThreadStackCheck)
    [Anonymous Symbol]                       0x080014e8   Section        0  rtx_thread.o(.text.osRtxThreadSwitch)
    [Anonymous Symbol]                       0x080014fc   Section        0  rtx_thread.o(.text.osRtxThreadWaitEnter)
    [Anonymous Symbol]                       0x080015e0   Section        0  rtx_thread.o(.text.osRtxThreadWaitExit)
    [Anonymous Symbol]                       0x080016a0   Section        0  rtx_system.o(.text.osRtxTick_Handler)
    [Anonymous Symbol]                       0x08001718   Section        0  rtx_timer.o(.text.osRtxTimerThread)
    [Anonymous Symbol]                       0x08001744   Section        0  rtx_timer.o(.text.osRtxTimerTick)
    [Anonymous Symbol]                       0x080017f0   Section        0  rtx_thread.o(.text.osThreadExit)
    [Anonymous Symbol]                       0x08001800   Section        0  rtx_thread.o(.text.osThreadGetId)
    [Anonymous Symbol]                       0x08001824   Section        0  rtx_thread.o(.text.osThreadNew)
    [Anonymous Symbol]                       0x08001860   Section        0  rtx_thread.o(.text.osThreadYield)
    [Anonymous Symbol]                       0x08001884   Section        0  rtx_timer.o(.text.osTimerNew)
    [Anonymous Symbol]                       0x080018cc   Section        0  rtx_timer.o(.text.osTimerStart)
    [Anonymous Symbol]                       0x080018f0   Section        0  rtx_delay.o(.text.svcRtxDelay)
    [Anonymous Symbol]                       0x08001904   Section        0  rtx_kernel.o(.text.svcRtxKernelGetState)
    [Anonymous Symbol]                       0x08001910   Section        0  rtx_kernel.o(.text.svcRtxKernelInitialize)
    [Anonymous Symbol]                       0x08001abc   Section        0  rtx_kernel.o(.text.svcRtxKernelStart)
    [Anonymous Symbol]                       0x08001b54   Section        0  rtx_msgqueue.o(.text.svcRtxMessageQueueGet)
    [Anonymous Symbol]                       0x08001cf0   Section        0  rtx_msgqueue.o(.text.svcRtxMessageQueueGetCount)
    [Anonymous Symbol]                       0x08001d08   Section        0  rtx_msgqueue.o(.text.svcRtxMessageQueueGetSpace)
    [Anonymous Symbol]                       0x08001d24   Section        0  rtx_msgqueue.o(.text.svcRtxMessageQueueNew)
    [Anonymous Symbol]                       0x08001e84   Section        0  rtx_msgqueue.o(.text.svcRtxMessageQueuePut)
    [Anonymous Symbol]                       0x08001f9c   Section        0  rtx_mutex.o(.text.svcRtxMutexAcquire)
    [Anonymous Symbol]                       0x0800203c   Section        0  rtx_mutex.o(.text.svcRtxMutexDelete)
    [Anonymous Symbol]                       0x08002114   Section        0  rtx_mutex.o(.text.svcRtxMutexNew)
    [Anonymous Symbol]                       0x08002188   Section        0  rtx_mutex.o(.text.svcRtxMutexRelease)
    [Anonymous Symbol]                       0x08002250   Section        0  rtx_thread.o(.text.svcRtxThreadExit)
    [Anonymous Symbol]                       0x08002394   Section        0  rtx_thread.o(.text.svcRtxThreadGetId)
    [Anonymous Symbol]                       0x080023a0   Section        0  rtx_thread.o(.text.svcRtxThreadNew)
    [Anonymous Symbol]                       0x080025e0   Section        0  rtx_thread.o(.text.svcRtxThreadYield)
    [Anonymous Symbol]                       0x08002670   Section        0  rtx_timer.o(.text.svcRtxTimerNew)
    [Anonymous Symbol]                       0x08002748   Section        0  rtx_timer.o(.text.svcRtxTimerStart)
    i.GPIO_Init                              0x08002800   Section        0  stm32f10x_gpio.o(i.GPIO_Init)
    i.GPIO_ResetBits                         0x08002916   Section        0  stm32f10x_gpio.o(i.GPIO_ResetBits)
    i.GPIO_SetBits                           0x0800291a   Section        0  stm32f10x_gpio.o(i.GPIO_SetBits)
    i.GPIO_WriteBit                          0x0800291e   Section        0  stm32f10x_gpio.o(i.GPIO_WriteBit)
    i.LED_heartbeat                          0x08002928   Section        0  led_driver.o(i.LED_heartbeat)
    i.LED_init                               0x0800293c   Section        0  led_driver.o(i.LED_init)
    i.LED_triangle_l                         0x080029a8   Section        0  led_driver.o(i.LED_triangle_l)
    i.NVIC_Init                              0x080029d4   Section        0  misc.o(i.NVIC_Init)
    i.RCC_APB1PeriphClockCmd                 0x08002a44   Section        0  stm32f10x_rcc.o(i.RCC_APB1PeriphClockCmd)
    i.RCC_APB1PeriphResetCmd                 0x08002a64   Section        0  stm32f10x_rcc.o(i.RCC_APB1PeriphResetCmd)
    i.RCC_APB2PeriphClockCmd                 0x08002a84   Section        0  stm32f10x_rcc.o(i.RCC_APB2PeriphClockCmd)
    i.RCC_APB2PeriphResetCmd                 0x08002aa4   Section        0  stm32f10x_rcc.o(i.RCC_APB2PeriphResetCmd)
    i.RCC_GetClocksFreq                      0x08002ac4   Section        0  stm32f10x_rcc.o(i.RCC_GetClocksFreq)
    i.SetSysClock                            0x08002c54   Section        0  system_stm32f10x.o(i.SetSysClock)
    SetSysClock                              0x08002c55   Thumb Code     8  system_stm32f10x.o(i.SetSysClock)
    i.SetSysClockTo72                        0x08002c5c   Section        0  system_stm32f10x.o(i.SetSysClockTo72)
    SetSysClockTo72                          0x08002c5d   Thumb Code   264  system_stm32f10x.o(i.SetSysClockTo72)
    i.SystemCoreClockUpdate                  0x08002d74   Section        0  system_stm32f10x.o(i.SystemCoreClockUpdate)
    i.SystemInit                             0x08002e74   Section        0  system_stm32f10x.o(i.SystemInit)
    i.TIM3_IRQHandler                        0x08002ee0   Section        0  motor_driver.o(i.TIM3_IRQHandler)
    i.TIM_ClearITPendingBit                  0x08002ef0   Section        0  stm32f10x_tim.o(i.TIM_ClearITPendingBit)
    i.TIM_Cmd                                0x08002ef6   Section        0  stm32f10x_tim.o(i.TIM_Cmd)
    i.TIM_ITConfig                           0x08002f0e   Section        0  stm32f10x_tim.o(i.TIM_ITConfig)
    i.TIM_OC3Init                            0x08002f20   Section        0  stm32f10x_tim.o(i.TIM_OC3Init)
    i.TIM_OC4Init                            0x08002fc0   Section        0  stm32f10x_tim.o(i.TIM_OC4Init)
    i.TIM_TimeBaseInit                       0x0800303c   Section        0  stm32f10x_tim.o(i.TIM_TimeBaseInit)
    i.USART1_IRQHandler                      0x080030e0   Section        0  usart_driver.o(i.USART1_IRQHandler)
    i.USART2_IRQHandler                      0x08003108   Section        0  usart_driver.o(i.USART2_IRQHandler)
    i.USART3_IRQHandler                      0x08003130   Section        0  usart_driver.o(i.USART3_IRQHandler)
    i.USART_ClockInit                        0x08003158   Section        0  stm32f10x_usart.o(i.USART_ClockInit)
    i.USART_Cmd                              0x0800317a   Section        0  stm32f10x_usart.o(i.USART_Cmd)
    i.USART_DeInit                           0x08003194   Section        0  stm32f10x_usart.o(i.USART_DeInit)
    i.USART_GetFlagStatus                    0x08003230   Section        0  stm32f10x_usart.o(i.USART_GetFlagStatus)
    i.USART_ITConfig                         0x0800324a   Section        0  stm32f10x_usart.o(i.USART_ITConfig)
    i.USART_Init                             0x08003294   Section        0  stm32f10x_usart.o(i.USART_Init)
    i.USART_ReceiveData                      0x0800336c   Section        0  stm32f10x_usart.o(i.USART_ReceiveData)
    i.USART_SendData                         0x08003376   Section        0  stm32f10x_usart.o(i.USART_SendData)
    i.USART_send_byte                        0x0800337e   Section        0  usart_driver.o(i.USART_send_byte)
    i.USART_send_bytes                       0x080033a0   Section        0  usart_driver.o(i.USART_send_bytes)
    i._Z11recv_threadPv                      0x080033c0   Section        0  svvis_cortex_threads.o(i._Z11recv_threadPv)
    i._Z11send_threadPv                      0x0800347c   Section        0  svvis_cortex_threads.o(i._Z11send_threadPv)
    i._Z16main_thread_funcPv                 0x080034ac   Section        0  main.o(i._Z16main_thread_funcPv)
    i._Z8chid2lenh                           0x080036b4   Section        0  svvis_cortex_threads.o(i._Z8chid2lenh)
    i._ZN7SvVis_t4initEP13USART_TypeDefj     0x080036e8   Section        0  svvis_cortex.o(i._ZN7SvVis_t4initEP13USART_TypeDefj)
    i._ZN7SvVis_t8recv_msgER15SvVis_message_t 0x0800379c   Section        0  svvis_cortex.o(i._ZN7SvVis_t8recv_msgER15SvVis_message_t)
    i._ZN7SvVis_t8send_msgER15SvVis_message_t 0x080037b2   Section        0  svvis_cortex.o(i._ZN7SvVis_t8send_msgER15SvVis_message_t)
    i._ZN7SvVis_t8send_strEPKc               0x080037d8   Section        0  svvis_cortex.o(i._ZN7SvVis_t8send_strEPKc)
    i._ZN7SvVis_t9availableEv                0x08003822   Section        0  svvis_cortex.o(i._ZN7SvVis_t9availableEv)
    i.__LED_heartbeat_function               0x0800382e   Section        0  led_driver.o(i.__LED_heartbeat_function)
    i.__user_perthread_libspace              0x0800384c   Section        0  rtx_lib.o(i.__user_perthread_libspace)
    i._mutex_acquire                         0x080038bc   Section        0  rtx_lib.o(i._mutex_acquire)
    __tagsym$$used                           0x080038bd   Number         0  rtx_lib.o(i._mutex_acquire)
    i._mutex_free                            0x080038d2   Section        0  rtx_lib.o(i._mutex_free)
    __tagsym$$used                           0x080038d3   Number         0  rtx_lib.o(i._mutex_free)
    i._mutex_initialize                      0x080038de   Section        0  rtx_lib.o(i._mutex_initialize)
    __tagsym$$used                           0x080038df   Number         0  rtx_lib.o(i._mutex_initialize)
    i._mutex_release                         0x080038fe   Section        0  rtx_lib.o(i._mutex_release)
    __tagsym$$used                           0x080038ff   Number         0  rtx_lib.o(i._mutex_release)
    i._platform_post_stackheap_init          0x08003910   Section        0  rtx_lib.o(i._platform_post_stackheap_init)
    i.init_usart                             0x08003918   Section        0  usart_driver.o(i.init_usart)
    i.main                                   0x08003a80   Section        0  main.o(i.main)
    i.motor_cmd_bin                          0x08003adc   Section        0  motor_driver.o(i.motor_cmd_bin)
    i.motor_cmd_str                          0x08003b64   Section        0  motor_driver.o(i.motor_cmd_str)
    i.motor_init                             0x08003c40   Section        0  motor_driver.o(i.motor_init)
    i.motor_stop                             0x08003cc4   Section        0  motor_driver.o(i.motor_stop)
    i.osRtxErrorNotify                       0x08003cd8   Section        0  rtx_config.o(i.osRtxErrorNotify)
    i.osRtxIdleThread                        0x08003cf8   Section        0  rtx_config.o(i.osRtxIdleThread)
    i.os_kernel_is_active                    0x08003cfc   Section        0  rtx_lib.o(i.os_kernel_is_active)
    os_kernel_is_active                      0x08003cfd   Thumb Code    32  rtx_lib.o(i.os_kernel_is_active)
    i.timer_init                             0x08003d20   Section        0  motor_driver.o(i.timer_init)
    locale$$code                             0x08003e24   Section       44  lc_ctype_c.o(locale$$code)
    x$fpl$dfixu                              0x08003e50   Section       90  dfixu.o(x$fpl$dfixu)
    x$fpl$dfltu                              0x08003eaa   Section       38  dflt_clz.o(x$fpl$dfltu)
    x$fpl$dmul                               0x08003ed0   Section      340  dmul.o(x$fpl$dmul)
    x$fpl$dnaninf                            0x08004024   Section      156  dnaninf.o(x$fpl$dnaninf)
    x$fpl$dretinf                            0x080040c0   Section       12  dretinf.o(x$fpl$dretinf)
    .constdata                               0x080040cc   Section      100  rtx_lib.o(.constdata)
    x$fpl$usenofp                            0x080040cc   Section        0  usenofp.o(x$fpl$usenofp)
    os_idle_thread_attr                      0x080040cc   Data          36  rtx_lib.o(.constdata)
    os_timer_thread_attr                     0x080040f0   Data          36  rtx_lib.o(.constdata)
    os_timer_mq_attr                         0x08004114   Data          24  rtx_lib.o(.constdata)
    .constdata                               0x08004130   Section        1  irq_cm3.o(.constdata)
    .rodata                                  0x08004134   Section      104  rtx_lib.o(.rodata)
    __tagsym$$used                           0x08004134   Number         0  rtx_lib.o(.rodata)
    [Anonymous Symbol]                       0x0800419c   Section        0  rtx_kernel.o(.rodata.str1.4)
    .L.str                                   0x0800419c   Data          11  rtx_kernel.o(.rodata.str1.4)
    locale$$data                             0x080041c8   Section      272  lc_ctype_c.o(locale$$data)
    __lcctype_c_name                         0x080041cc   Data           2  lc_ctype_c.o(locale$$data)
    __lcctype_c_start                        0x080041d4   Data           0  lc_ctype_c.o(locale$$data)
    __lcctype_c_end                          0x080042d8   Data           0  lc_ctype_c.o(locale$$data)
    .bss.os                                  0x20000000   Section     4656  rtx_lib.o(.bss.os)
    os_mem                                   0x20000000   Data        4096  rtx_lib.o(.bss.os)
    os_isr_queue                             0x20001000   Data          64  rtx_lib.o(.bss.os)
    os_libspace                              0x20001040   Data         480  rtx_lib.o(.bss.os)
    os_libspace_id                           0x20001220   Data          16  rtx_lib.o(.bss.os)
    .bss.os.msgqueue.cb                      0x20001230   Section       52  rtx_lib.o(.bss.os.msgqueue.cb)
    os_timer_mq_cb                           0x20001230   Data          52  rtx_lib.o(.bss.os.msgqueue.cb)
    .bss.os.msgqueue.mem                     0x20001264   Section       80  rtx_lib.o(.bss.os.msgqueue.mem)
    os_timer_mq_data                         0x20001264   Data          80  rtx_lib.o(.bss.os.msgqueue.mem)
    .bss.os.thread.cb                        0x200012b4   Section      136  rtx_lib.o(.bss.os.thread.cb)
    os_idle_thread_cb                        0x200012b4   Data          68  rtx_lib.o(.bss.os.thread.cb)
    os_timer_thread_cb                       0x200012f8   Data          68  rtx_lib.o(.bss.os.thread.cb)
    .bss.os.thread.stack                     0x20001340   Section      400  rtx_lib.o(.bss.os.thread.stack)
    os_idle_thread_stack                     0x20001340   Data         200  rtx_lib.o(.bss.os.thread.stack)
    os_timer_thread_stack                    0x20001408   Data         200  rtx_lib.o(.bss.os.thread.stack)
    .data                                    0x200014d0   Section       12  svvis_cortex.o(.data)
    .data                                    0x200014dc   Section        4  main.o(.data)
    .data                                    0x200014e0   Section        4  led_driver.o(.data)
    .data                                    0x200014e8   Section       20  motor_driver.o(.data)
    .data                                    0x200014fc   Section        5  rtx_lib.o(.data)
    os_kernel_active                         0x20001500   Data           1  rtx_lib.o(.data)
    .data                                    0x20001501   Section       20  stm32f10x_rcc.o(.data)
    APBAHBPrescTable                         0x20001501   Data          16  stm32f10x_rcc.o(.data)
    ADCPrescTable                            0x20001511   Data           4  stm32f10x_rcc.o(.data)
    .data                                    0x20001518   Section       20  system_stm32f10x.o(.data)
    .bss                                     0x200015d8   Section       96  libspace.o(.bss)
    HEAP                                     0x20001638   Section      512  startup_stm32f10x_cl.o(HEAP)
    Heap_Mem                                 0x20001638   Data         512  startup_stm32f10x_cl.o(HEAP)
    STACK                                    0x20001838   Section     1024  startup_stm32f10x_cl.o(STACK)
    Stack_Mem                                0x20001838   Data        1024  startup_stm32f10x_cl.o(STACK)
    __initial_sp                             0x20001c38   Data           0  startup_stm32f10x_cl.o(STACK)

    Global Symbols

    Symbol Name                              Value     Ov Type        Size  Object(Section)

    BuildAttributes$$THM_ISAv4$P$D$K$B$S$PE$A:L22UL41UL21$X:L11$S22US41US21$IEEE1$IW$~IW$USESV6$~STKCKD$USESV7$~SHL$OTIME$ROPI$EBA8$UX$STANDARDLIB$REQ8$PRES8$EABIv2 0x00000000   Number         0  anon$$obj.o ABSOLUTE
    __ARM_use_no_argv                        0x00000000   Number         0  main.o ABSOLUTE
    __ARM_exceptions_init                     - Undefined Weak Reference
    __alloca_initialize                       - Undefined Weak Reference
    __arm_preinit_                            - Undefined Weak Reference
    __cpp_initialize__aeabi_                  - Undefined Weak Reference
    __cxa_finalize                            - Undefined Weak Reference
    __sigvec_lookup                           - Undefined Weak Reference
    _atexit_init                              - Undefined Weak Reference
    _call_atexit_fns                          - Undefined Weak Reference
    _clock_init                               - Undefined Weak Reference
    _fp_trap_init                             - Undefined Weak Reference
    _fp_trap_shutdown                         - Undefined Weak Reference
    _get_lc_collate                           - Undefined Weak Reference
    _get_lc_monetary                          - Undefined Weak Reference
    _get_lc_numeric                           - Undefined Weak Reference
    _get_lc_time                              - Undefined Weak Reference
    _getenv_init                              - Undefined Weak Reference
    _handle_redirection                       - Undefined Weak Reference
    _init_alloc                               - Undefined Weak Reference
    _init_user_alloc                          - Undefined Weak Reference
    _initio                                   - Undefined Weak Reference
    _rand_init                                - Undefined Weak Reference
    _signal_finish                            - Undefined Weak Reference
    _signal_init                              - Undefined Weak Reference
    _terminate_alloc                          - Undefined Weak Reference
    _terminate_user_alloc                     - Undefined Weak Reference
    _terminateio                              - Undefined Weak Reference
    __Vectors_Size                           0x00000150   Number         0  startup_stm32f10x_cl.o ABSOLUTE
    __Vectors                                0x08000000   Data           4  startup_stm32f10x_cl.o(RESET)
    __Vectors_End                            0x08000150   Data           0  startup_stm32f10x_cl.o(RESET)
    __main                                   0x08000151   Thumb Code     8  __main.o(!!!main)
    __scatterload                            0x08000159   Thumb Code     0  __scatter.o(!!!scatter)
    __scatterload_rt2                        0x08000159   Thumb Code    44  __scatter.o(!!!scatter)
    __scatterload_rt2_thumb_only             0x08000159   Thumb Code     0  __scatter.o(!!!scatter)
    __scatterload_null                       0x08000167   Thumb Code     0  __scatter.o(!!!scatter)
    __decompress                             0x0800018d   Thumb Code    90  __dczerorl2.o(!!dczerorl2)
    __decompress1                            0x0800018d   Thumb Code     0  __dczerorl2.o(!!dczerorl2)
    __scatterload_zeroinit                   0x080001e9   Thumb Code    28  __scatter_zi.o(!!handler_zi)
    __rt_lib_init                            0x08000205   Thumb Code     0  libinit.o(.ARM.Collect$$libinit$$00000000)
    __rt_lib_init_fp_1                       0x08000207   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000002)
    __rt_lib_init_heap_1                     0x08000207   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$0000000A)
    __rt_lib_init_lc_common                  0x08000207   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$0000000F)
    __rt_lib_init_preinit_1                  0x08000207   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000004)
    __rt_lib_init_rand_1                     0x08000207   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$0000000E)
    __rt_lib_init_user_alloc_1               0x08000207   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$0000000C)
    __rt_lib_init_lc_collate_1               0x0800020d   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000011)
    __rt_lib_init_lc_ctype_2                 0x0800020d   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000012)
    __rt_lib_init_alloca_1                   0x08000219   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$0000002E)
    __rt_lib_init_argv_1                     0x08000219   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$0000002C)
    __rt_lib_init_atexit_1                   0x08000219   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$0000001B)
    __rt_lib_init_clock_1                    0x08000219   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000021)
    __rt_lib_init_cpp_1                      0x08000219   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000032)
    __rt_lib_init_exceptions_1               0x08000219   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000030)
    __rt_lib_init_fp_trap_1                  0x08000219   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$0000001F)
    __rt_lib_init_getenv_1                   0x08000219   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000023)
    __rt_lib_init_lc_ctype_1                 0x08000219   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000013)
    __rt_lib_init_lc_monetary_1              0x08000219   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000015)
    __rt_lib_init_lc_numeric_1               0x08000219   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000017)
    __rt_lib_init_lc_time_1                  0x08000219   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000019)
    __rt_lib_init_return                     0x08000219   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000033)
    __rt_lib_init_signal_1                   0x08000219   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$0000001D)
    __rt_lib_init_stdio_1                    0x08000219   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000025)
    __rt_lib_shutdown                        0x0800021b   Thumb Code     0  libshutdown.o(.ARM.Collect$$libshutdown$$00000000)
    __rt_lib_shutdown_cpp_1                  0x0800021d   Thumb Code     0  libshutdown2.o(.ARM.Collect$$libshutdown$$00000002)
    __rt_lib_shutdown_fp_trap_1              0x0800021d   Thumb Code     0  libshutdown2.o(.ARM.Collect$$libshutdown$$00000007)
    __rt_lib_shutdown_heap_1                 0x0800021d   Thumb Code     0  libshutdown2.o(.ARM.Collect$$libshutdown$$0000000F)
    __rt_lib_shutdown_return                 0x0800021d   Thumb Code     0  libshutdown2.o(.ARM.Collect$$libshutdown$$00000010)
    __rt_lib_shutdown_signal_1               0x0800021d   Thumb Code     0  libshutdown2.o(.ARM.Collect$$libshutdown$$0000000A)
    __rt_lib_shutdown_stdio_1                0x0800021d   Thumb Code     0  libshutdown2.o(.ARM.Collect$$libshutdown$$00000004)
    __rt_lib_shutdown_user_alloc_1           0x0800021d   Thumb Code     0  libshutdown2.o(.ARM.Collect$$libshutdown$$0000000C)
    __rt_entry                               0x0800021f   Thumb Code     0  __rtentry.o(.ARM.Collect$$rtentry$$00000000)
    __rt_entry_presh_1                       0x0800021f   Thumb Code     0  __rtentry2.o(.ARM.Collect$$rtentry$$00000002)
    __rt_entry_sh                            0x0800021f   Thumb Code     0  __rtentry4.o(.ARM.Collect$$rtentry$$00000004)
    __rt_entry_postsh_1                      0x08000225   Thumb Code     0  __rtentry2.o(.ARM.Collect$$rtentry$$00000008)
    __rt_entry_li                            0x0800022d   Thumb Code     0  __rtentry2.o(.ARM.Collect$$rtentry$$0000000A)
    __rt_entry_main                          0x08000231   Thumb Code     0  __rtentry2.o(.ARM.Collect$$rtentry$$0000000D)
    __rt_entry_postli_1                      0x08000231   Thumb Code     0  __rtentry2.o(.ARM.Collect$$rtentry$$0000000C)
    __rt_exit                                0x08000239   Thumb Code     0  rtexit.o(.ARM.Collect$$rtexit$$00000000)
    __rt_exit_ls                             0x0800023b   Thumb Code     0  rtexit2.o(.ARM.Collect$$rtexit$$00000003)
    __rt_exit_prels_1                        0x0800023b   Thumb Code     0  rtexit2.o(.ARM.Collect$$rtexit$$00000002)
    __rt_exit_exit                           0x0800023f   Thumb Code     0  rtexit2.o(.ARM.Collect$$rtexit$$00000004)
    Reset_Handler                            0x08000245   Thumb Code     8  startup_stm32f10x_cl.o(.text)
    NMI_Handler                              0x0800024d   Thumb Code     2  startup_stm32f10x_cl.o(.text)
    HardFault_Handler                        0x0800024f   Thumb Code     2  startup_stm32f10x_cl.o(.text)
    MemManage_Handler                        0x08000251   Thumb Code     2  startup_stm32f10x_cl.o(.text)
    BusFault_Handler                         0x08000253   Thumb Code     2  startup_stm32f10x_cl.o(.text)
    UsageFault_Handler                       0x08000255   Thumb Code     2  startup_stm32f10x_cl.o(.text)
    DebugMon_Handler                         0x08000259   Thumb Code     2  startup_stm32f10x_cl.o(.text)
    ADC1_2_IRQHandler                        0x0800025f   Thumb Code     0  startup_stm32f10x_cl.o(.text)
    CAN1_RX0_IRQHandler                      0x0800025f   Thumb Code     0  startup_stm32f10x_cl.o(.text)
    CAN1_RX1_IRQHandler                      0x0800025f   Thumb Code     0  startup_stm32f10x_cl.o(.text)
    CAN1_SCE_IRQHandler                      0x0800025f   Thumb Code     0  startup_stm32f10x_cl.o(.text)
    CAN1_TX_IRQHandler                       0x0800025f   Thumb Code     0  startup_stm32f10x_cl.o(.text)
    CAN2_RX0_IRQHandler                      0x0800025f   Thumb Code     0  startup_stm32f10x_cl.o(.text)
    CAN2_RX1_IRQHandler                      0x0800025f   Thumb Code     0  startup_stm32f10x_cl.o(.text)
    CAN2_SCE_IRQHandler                      0x0800025f   Thumb Code     0  startup_stm32f10x_cl.o(.text)
    CAN2_TX_IRQHandler                       0x0800025f   Thumb Code     0  startup_stm32f10x_cl.o(.text)
    DMA1_Channel1_IRQHandler                 0x0800025f   Thumb Code     0  startup_stm32f10x_cl.o(.text)
    DMA1_Channel2_IRQHandler                 0x0800025f   Thumb Code     0  startup_stm32f10x_cl.o(.text)
    DMA1_Channel3_IRQHandler                 0x0800025f   Thumb Code     0  startup_stm32f10x_cl.o(.text)
    DMA1_Channel4_IRQHandler                 0x0800025f   Thumb Code     0  startup_stm32f10x_cl.o(.text)
    DMA1_Channel5_IRQHandler                 0x0800025f   Thumb Code     0  startup_stm32f10x_cl.o(.text)
    DMA1_Channel6_IRQHandler                 0x0800025f   Thumb Code     0  startup_stm32f10x_cl.o(.text)
    DMA1_Channel7_IRQHandler                 0x0800025f   Thumb Code     0  startup_stm32f10x_cl.o(.text)
    DMA2_Channel1_IRQHandler                 0x0800025f   Thumb Code     0  startup_stm32f10x_cl.o(.text)
    DMA2_Channel2_IRQHandler                 0x0800025f   Thumb Code     0  startup_stm32f10x_cl.o(.text)
    DMA2_Channel3_IRQHandler                 0x0800025f   Thumb Code     0  startup_stm32f10x_cl.o(.text)
    DMA2_Channel4_IRQHandler                 0x0800025f   Thumb Code     0  startup_stm32f10x_cl.o(.text)
    DMA2_Channel5_IRQHandler                 0x0800025f   Thumb Code     0  startup_stm32f10x_cl.o(.text)
    ETH_IRQHandler                           0x0800025f   Thumb Code     0  startup_stm32f10x_cl.o(.text)
    ETH_WKUP_IRQHandler                      0x0800025f   Thumb Code     0  startup_stm32f10x_cl.o(.text)
    EXTI0_IRQHandler                         0x0800025f   Thumb Code     0  startup_stm32f10x_cl.o(.text)
    EXTI15_10_IRQHandler                     0x0800025f   Thumb Code     0  startup_stm32f10x_cl.o(.text)
    EXTI1_IRQHandler                         0x0800025f   Thumb Code     0  startup_stm32f10x_cl.o(.text)
    EXTI2_IRQHandler                         0x0800025f   Thumb Code     0  startup_stm32f10x_cl.o(.text)
    EXTI3_IRQHandler                         0x0800025f   Thumb Code     0  startup_stm32f10x_cl.o(.text)
    EXTI4_IRQHandler                         0x0800025f   Thumb Code     0  startup_stm32f10x_cl.o(.text)
    EXTI9_5_IRQHandler                       0x0800025f   Thumb Code     0  startup_stm32f10x_cl.o(.text)
    FLASH_IRQHandler                         0x0800025f   Thumb Code     0  startup_stm32f10x_cl.o(.text)
    I2C1_ER_IRQHandler                       0x0800025f   Thumb Code     0  startup_stm32f10x_cl.o(.text)
    I2C1_EV_IRQHandler                       0x0800025f   Thumb Code     0  startup_stm32f10x_cl.o(.text)
    I2C2_ER_IRQHandler                       0x0800025f   Thumb Code     0  startup_stm32f10x_cl.o(.text)
    I2C2_EV_IRQHandler                       0x0800025f   Thumb Code     0  startup_stm32f10x_cl.o(.text)
    OTG_FS_IRQHandler                        0x0800025f   Thumb Code     0  startup_stm32f10x_cl.o(.text)
    OTG_FS_WKUP_IRQHandler                   0x0800025f   Thumb Code     0  startup_stm32f10x_cl.o(.text)
    PVD_IRQHandler                           0x0800025f   Thumb Code     0  startup_stm32f10x_cl.o(.text)
    RCC_IRQHandler                           0x0800025f   Thumb Code     0  startup_stm32f10x_cl.o(.text)
    RTCAlarm_IRQHandler                      0x0800025f   Thumb Code     0  startup_stm32f10x_cl.o(.text)
    RTC_IRQHandler                           0x0800025f   Thumb Code     0  startup_stm32f10x_cl.o(.text)
    SPI1_IRQHandler                          0x0800025f   Thumb Code     0  startup_stm32f10x_cl.o(.text)
    SPI2_IRQHandler                          0x0800025f   Thumb Code     0  startup_stm32f10x_cl.o(.text)
    SPI3_IRQHandler                          0x0800025f   Thumb Code     0  startup_stm32f10x_cl.o(.text)
    TAMPER_IRQHandler                        0x0800025f   Thumb Code     0  startup_stm32f10x_cl.o(.text)
    TIM1_BRK_IRQHandler                      0x0800025f   Thumb Code     0  startup_stm32f10x_cl.o(.text)
    TIM1_CC_IRQHandler                       0x0800025f   Thumb Code     0  startup_stm32f10x_cl.o(.text)
    TIM1_TRG_COM_IRQHandler                  0x0800025f   Thumb Code     0  startup_stm32f10x_cl.o(.text)
    TIM1_UP_IRQHandler                       0x0800025f   Thumb Code     0  startup_stm32f10x_cl.o(.text)
    TIM2_IRQHandler                          0x0800025f   Thumb Code     0  startup_stm32f10x_cl.o(.text)
    TIM4_IRQHandler                          0x0800025f   Thumb Code     0  startup_stm32f10x_cl.o(.text)
    TIM5_IRQHandler                          0x0800025f   Thumb Code     0  startup_stm32f10x_cl.o(.text)
    TIM6_IRQHandler                          0x0800025f   Thumb Code     0  startup_stm32f10x_cl.o(.text)
    TIM7_IRQHandler                          0x0800025f   Thumb Code     0  startup_stm32f10x_cl.o(.text)
    UART4_IRQHandler                         0x0800025f   Thumb Code     0  startup_stm32f10x_cl.o(.text)
    UART5_IRQHandler                         0x0800025f   Thumb Code     0  startup_stm32f10x_cl.o(.text)
    WWDG_IRQHandler                          0x0800025f   Thumb Code     0  startup_stm32f10x_cl.o(.text)
    __user_initial_stackheap                 0x08000261   Thumb Code     0  startup_stm32f10x_cl.o(.text)
    SVC_Handler                              0x08000285   Thumb Code    96  irq_cm3.o(.text)
    PendSV_Handler                           0x080002e5   Thumb Code    16  irq_cm3.o(.text)
    SysTick_Handler                          0x080002f5   Thumb Code    16  irq_cm3.o(.text)
    strtoul                                  0x0800030d   Thumb Code   114  strtoul.o(.text)
    strlen                                   0x0800037f   Thumb Code    62  strlen.o(.text)
    strncmp                                  0x080003bd   Thumb Code   150  strncmp.o(.text)
    __aeabi_memcpy                           0x08000453   Thumb Code     0  rt_memcpy_v6.o(.text)
    __rt_memcpy                              0x08000453   Thumb Code   138  rt_memcpy_v6.o(.text)
    _memcpy_lastbytes                        0x080004b9   Thumb Code     0  rt_memcpy_v6.o(.text)
    __aeabi_memset4                          0x080004dd   Thumb Code    16  aeabi_memset4.o(.text)
    __aeabi_memset8                          0x080004dd   Thumb Code     0  aeabi_memset4.o(.text)
    __aeabi_memclr                           0x080004ed   Thumb Code     0  rt_memclr.o(.text)
    __rt_memclr                              0x080004ed   Thumb Code    68  rt_memclr.o(.text)
    _memset                                  0x080004f1   Thumb Code     0  rt_memclr.o(.text)
    __aeabi_memclr4                          0x08000531   Thumb Code     0  rt_memclr_w.o(.text)
    __aeabi_memclr8                          0x08000531   Thumb Code     0  rt_memclr_w.o(.text)
    __rt_memclr_w                            0x08000531   Thumb Code    78  rt_memclr_w.o(.text)
    _memset_w                                0x08000535   Thumb Code     0  rt_memclr_w.o(.text)
    strcmp                                   0x08000581   Thumb Code   128  strcmpv7m.o(.text)
    __use_two_region_memory                  0x08000601   Thumb Code     2  heapauxi.o(.text)
    __rt_heap_escrow$2region                 0x08000603   Thumb Code     2  heapauxi.o(.text)
    __rt_heap_expand$2region                 0x08000605   Thumb Code     2  heapauxi.o(.text)
    __rt_ctype_table                         0x08000609   Thumb Code    16  rt_ctype_table.o(.text)
    __aeabi_errno_addr                       0x08000619   Thumb Code     4  rt_errno_addr_twolibspace.o(.text)
    __errno$twolibspace                      0x08000619   Thumb Code     0  rt_errno_addr_twolibspace.o(.text)
    __rt_errno_addr$twolibspace              0x08000619   Thumb Code     0  rt_errno_addr_twolibspace.o(.text)
    _strtoul                                 0x0800061d   Thumb Code   158  _strtoul.o(.text)
    __aeabi_memcpy4                          0x080006bb   Thumb Code     0  rt_memcpy_w.o(.text)
    __aeabi_memcpy8                          0x080006bb   Thumb Code     0  rt_memcpy_w.o(.text)
    __rt_memcpy_w                            0x080006bb   Thumb Code   100  rt_memcpy_w.o(.text)
    _memcpy_lastbytes_aligned                0x08000703   Thumb Code     0  rt_memcpy_w.o(.text)
    __user_libspace                          0x08000721   Thumb Code     8  libspace.o(.text)
    __user_perproc_libspace                  0x08000721   Thumb Code     0  libspace.o(.text)
    __rt_locale                              0x08000729   Thumb Code    10  rt_locale_twolibspace.o(.text)
    _chval                                   0x08000733   Thumb Code    28  _chval.o(.text)
    __user_setup_stackheap                   0x0800074f   Thumb Code    74  sys_stackheap_outer.o(.text)
    exit                                     0x08000799   Thumb Code    18  exit.o(.text)
    _sys_exit                                0x080007ad   Thumb Code     8  sys_exit.o(.text)
    __I$use$semihosting                      0x080007b9   Thumb Code     0  use_no_semi.o(.text)
    __use_no_semihosting_swi                 0x080007b9   Thumb Code     2  use_no_semi.o(.text)
    __semihosting_library_function           0x080007bb   Thumb Code     0  indicate_semi.o(.text)
    osDelay                                  0x080007bd   Thumb Code    36  rtx_delay.o(.text.osDelay)
    osKernelGetState                         0x080007e1   Thumb Code    58  rtx_kernel.o(.text.osKernelGetState)
    osKernelInitialize                       0x0800081d   Thumb Code    60  rtx_kernel.o(.text.osKernelInitialize)
    osKernelStart                            0x08000859   Thumb Code    60  rtx_kernel.o(.text.osKernelStart)
    osMessageQueueGet                        0x08000895   Thumb Code   180  rtx_msgqueue.o(.text.osMessageQueueGet)
    osMessageQueueGetCount                   0x08000949   Thumb Code    52  rtx_msgqueue.o(.text.osMessageQueueGetCount)
    osMessageQueueGetSpace                   0x0800097d   Thumb Code    56  rtx_msgqueue.o(.text.osMessageQueueGetSpace)
    osMessageQueueNew                        0x080009b5   Thumb Code    58  rtx_msgqueue.o(.text.osMessageQueueNew)
    osMessageQueuePut                        0x080009f1   Thumb Code   132  rtx_msgqueue.o(.text.osMessageQueuePut)
    osMutexAcquire                           0x08000a75   Thumb Code    36  rtx_mutex.o(.text.osMutexAcquire)
    osMutexDelete                            0x08000a99   Thumb Code    36  rtx_mutex.o(.text.osMutexDelete)
    osMutexNew                               0x08000abd   Thumb Code    58  rtx_mutex.o(.text.osMutexNew)
    osMutexRelease                           0x08000af9   Thumb Code    36  rtx_mutex.o(.text.osMutexRelease)
    osRtxMemoryAlloc                         0x08000b1d   Thumb Code   110  rtx_memory.o(.text.osRtxMemoryAlloc)
    osRtxMemoryFree                          0x08000b8d   Thumb Code    88  rtx_memory.o(.text.osRtxMemoryFree)
    osRtxMemoryInit                          0x08000be5   Thumb Code    48  rtx_memory.o(.text.osRtxMemoryInit)
    osRtxMemoryPoolAlloc                     0x08000c15   Thumb Code    76  rtx_mempool.o(.text.osRtxMemoryPoolAlloc)
    osRtxMemoryPoolFree                      0x08000c61   Thumb Code    90  rtx_mempool.o(.text.osRtxMemoryPoolFree)
    osRtxMemoryPoolInit                      0x08000cbd   Thumb Code    80  rtx_mempool.o(.text.osRtxMemoryPoolInit)
    osRtxMessageQueuePostProcess             0x08000d0d   Thumb Code   446  rtx_msgqueue.o(.text.osRtxMessageQueuePostProcess)
    osRtxMutexOwnerRelease                   0x08000ecd   Thumb Code    76  rtx_mutex.o(.text.osRtxMutexOwnerRelease)
    osRtxPendSV_Handler                      0x08000f19   Thumb Code   168  rtx_system.o(.text.osRtxPendSV_Handler)
    osRtxPostProcess                         0x08000fc1   Thumb Code   120  rtx_system.o(.text.osRtxPostProcess)
    osRtxSysTimerAckIRQ                      0x08001039   Thumb Code    12  rtx_system.o(.text.osRtxSysTimerAckIRQ)
    osRtxSysTimerEnable                      0x08001045   Thumb Code    14  rtx_system.o(.text.osRtxSysTimerEnable)
    osRtxSysTimerSetup                       0x08001055   Thumb Code    58  rtx_system.o(.text.osRtxSysTimerSetup)
    osRtxThreadDelayTick                     0x08001091   Thumb Code   136  rtx_thread.o(.text.osRtxThreadDelayTick)
    osRtxThreadDispatch                      0x08001119   Thumb Code   344  rtx_thread.o(.text.osRtxThreadDispatch)
    osRtxThreadListGet                       0x08001271   Thumb Code    26  rtx_thread.o(.text.osRtxThreadListGet)
    osRtxThreadListPut                       0x0800128d   Thumb Code    56  rtx_thread.o(.text.osRtxThreadListPut)
    osRtxThreadListRemove                    0x080012c5   Thumb Code    26  rtx_thread.o(.text.osRtxThreadListRemove)
    osRtxThreadListSort                      0x080012e1   Thumb Code    96  rtx_thread.o(.text.osRtxThreadListSort)
    osRtxThreadPostProcess                   0x08001341   Thumb Code   296  rtx_thread.o(.text.osRtxThreadPostProcess)
    osRtxThreadReadyPut                      0x08001469   Thumb Code    72  rtx_thread.o(.text.osRtxThreadReadyPut)
    osRtxThreadRegPtr                        0x080014b1   Thumb Code     6  rtx_thread.o(.text.osRtxThreadRegPtr)
    osRtxThreadStackCheck                    0x080014b9   Thumb Code    46  rtx_thread.o(.text.osRtxThreadStackCheck)
    osRtxThreadSwitch                        0x080014e9   Thumb Code    18  rtx_thread.o(.text.osRtxThreadSwitch)
    osRtxThreadWaitEnter                     0x080014fd   Thumb Code   226  rtx_thread.o(.text.osRtxThreadWaitEnter)
    osRtxThreadWaitExit                      0x080015e1   Thumb Code   190  rtx_thread.o(.text.osRtxThreadWaitExit)
    osRtxTick_Handler                        0x080016a1   Thumb Code   120  rtx_system.o(.text.osRtxTick_Handler)
    osRtxTimerThread                         0x08001719   Thumb Code    42  rtx_timer.o(.text.osRtxTimerThread)
    osRtxTimerTick                           0x08001745   Thumb Code   170  rtx_timer.o(.text.osRtxTimerTick)
    osThreadExit                             0x080017f1   Thumb Code    14  rtx_thread.o(.text.osThreadExit)
    osThreadGetId                            0x08001801   Thumb Code    34  rtx_thread.o(.text.osThreadGetId)
    osThreadNew                              0x08001825   Thumb Code    58  rtx_thread.o(.text.osThreadNew)
    osThreadYield                            0x08001861   Thumb Code    36  rtx_thread.o(.text.osThreadYield)
    osTimerNew                               0x08001885   Thumb Code    72  rtx_timer.o(.text.osTimerNew)
    osTimerStart                             0x080018cd   Thumb Code    36  rtx_timer.o(.text.osTimerStart)
    svcRtxDelay                              0x080018f1   Thumb Code    20  rtx_delay.o(.text.svcRtxDelay)
    svcRtxKernelGetState                     0x08001905   Thumb Code    12  rtx_kernel.o(.text.svcRtxKernelGetState)
    svcRtxKernelInitialize                   0x08001911   Thumb Code   428  rtx_kernel.o(.text.svcRtxKernelInitialize)
    svcRtxKernelStart                        0x08001abd   Thumb Code   150  rtx_kernel.o(.text.svcRtxKernelStart)
    svcRtxMessageQueueGet                    0x08001b55   Thumb Code   410  rtx_msgqueue.o(.text.svcRtxMessageQueueGet)
    svcRtxMessageQueueGetCount               0x08001cf1   Thumb Code    22  rtx_msgqueue.o(.text.svcRtxMessageQueueGetCount)
    svcRtxMessageQueueGetSpace               0x08001d09   Thumb Code    26  rtx_msgqueue.o(.text.svcRtxMessageQueueGetSpace)
    svcRtxMessageQueueNew                    0x08001d25   Thumb Code   352  rtx_msgqueue.o(.text.svcRtxMessageQueueNew)
    svcRtxMessageQueuePut                    0x08001e85   Thumb Code   280  rtx_msgqueue.o(.text.svcRtxMessageQueuePut)
    svcRtxMutexAcquire                       0x08001f9d   Thumb Code   158  rtx_mutex.o(.text.svcRtxMutexAcquire)
    svcRtxMutexDelete                        0x0800203d   Thumb Code   214  rtx_mutex.o(.text.svcRtxMutexDelete)
    svcRtxMutexNew                           0x08002115   Thumb Code   114  rtx_mutex.o(.text.svcRtxMutexNew)
    svcRtxMutexRelease                       0x08002189   Thumb Code   200  rtx_mutex.o(.text.svcRtxMutexRelease)
    svcRtxThreadExit                         0x08002251   Thumb Code   322  rtx_thread.o(.text.svcRtxThreadExit)
    svcRtxThreadGetId                        0x08002395   Thumb Code    12  rtx_thread.o(.text.svcRtxThreadGetId)
    svcRtxThreadNew                          0x080023a1   Thumb Code   576  rtx_thread.o(.text.svcRtxThreadNew)
    svcRtxThreadYield                        0x080025e1   Thumb Code   142  rtx_thread.o(.text.svcRtxThreadYield)
    svcRtxTimerNew                           0x08002671   Thumb Code   216  rtx_timer.o(.text.svcRtxTimerNew)
    svcRtxTimerStart                         0x08002749   Thumb Code   184  rtx_timer.o(.text.svcRtxTimerStart)
    GPIO_Init                                0x08002801   Thumb Code   278  stm32f10x_gpio.o(i.GPIO_Init)
    GPIO_ResetBits                           0x08002917   Thumb Code     4  stm32f10x_gpio.o(i.GPIO_ResetBits)
    GPIO_SetBits                             0x0800291b   Thumb Code     4  stm32f10x_gpio.o(i.GPIO_SetBits)
    GPIO_WriteBit                            0x0800291f   Thumb Code    10  stm32f10x_gpio.o(i.GPIO_WriteBit)
    LED_heartbeat                            0x08002929   Thumb Code    16  led_driver.o(i.LED_heartbeat)
    LED_init                                 0x0800293d   Thumb Code    94  led_driver.o(i.LED_init)
    LED_triangle_l                           0x080029a9   Thumb Code    40  led_driver.o(i.LED_triangle_l)
    NVIC_Init                                0x080029d5   Thumb Code   100  misc.o(i.NVIC_Init)
    RCC_APB1PeriphClockCmd                   0x08002a45   Thumb Code    26  stm32f10x_rcc.o(i.RCC_APB1PeriphClockCmd)
    RCC_APB1PeriphResetCmd                   0x08002a65   Thumb Code    26  stm32f10x_rcc.o(i.RCC_APB1PeriphResetCmd)
    RCC_APB2PeriphClockCmd                   0x08002a85   Thumb Code    26  stm32f10x_rcc.o(i.RCC_APB2PeriphClockCmd)
    RCC_APB2PeriphResetCmd                   0x08002aa5   Thumb Code    26  stm32f10x_rcc.o(i.RCC_APB2PeriphResetCmd)
    RCC_GetClocksFreq                        0x08002ac5   Thumb Code   374  stm32f10x_rcc.o(i.RCC_GetClocksFreq)
    SystemCoreClockUpdate                    0x08002d75   Thumb Code   232  system_stm32f10x.o(i.SystemCoreClockUpdate)
    SystemInit                               0x08002e75   Thumb Code    92  system_stm32f10x.o(i.SystemInit)
    TIM3_IRQHandler                          0x08002ee1   Thumb Code    12  motor_driver.o(i.TIM3_IRQHandler)
    TIM_ClearITPendingBit                    0x08002ef1   Thumb Code     6  stm32f10x_tim.o(i.TIM_ClearITPendingBit)
    TIM_Cmd                                  0x08002ef7   Thumb Code    24  stm32f10x_tim.o(i.TIM_Cmd)
    TIM_ITConfig                             0x08002f0f   Thumb Code    18  stm32f10x_tim.o(i.TIM_ITConfig)
    TIM_OC3Init                              0x08002f21   Thumb Code   150  stm32f10x_tim.o(i.TIM_OC3Init)
    TIM_OC4Init                              0x08002fc1   Thumb Code   114  stm32f10x_tim.o(i.TIM_OC4Init)
    TIM_TimeBaseInit                         0x0800303d   Thumb Code   122  stm32f10x_tim.o(i.TIM_TimeBaseInit)
    USART1_IRQHandler                        0x080030e1   Thumb Code    30  usart_driver.o(i.USART1_IRQHandler)
    USART2_IRQHandler                        0x08003109   Thumb Code    30  usart_driver.o(i.USART2_IRQHandler)
    USART3_IRQHandler                        0x08003131   Thumb Code    30  usart_driver.o(i.USART3_IRQHandler)
    USART_ClockInit                          0x08003159   Thumb Code    34  stm32f10x_usart.o(i.USART_ClockInit)
    USART_Cmd                                0x0800317b   Thumb Code    24  stm32f10x_usart.o(i.USART_Cmd)
    USART_DeInit                             0x08003195   Thumb Code   134  stm32f10x_usart.o(i.USART_DeInit)
    USART_GetFlagStatus                      0x08003231   Thumb Code    26  stm32f10x_usart.o(i.USART_GetFlagStatus)
    USART_ITConfig                           0x0800324b   Thumb Code    74  stm32f10x_usart.o(i.USART_ITConfig)
    USART_Init                               0x08003295   Thumb Code   210  stm32f10x_usart.o(i.USART_Init)
    USART_ReceiveData                        0x0800336d   Thumb Code    10  stm32f10x_usart.o(i.USART_ReceiveData)
    USART_SendData                           0x08003377   Thumb Code     8  stm32f10x_usart.o(i.USART_SendData)
    USART_send_byte                          0x0800337f   Thumb Code    34  usart_driver.o(i.USART_send_byte)
    USART_send_bytes                         0x080033a1   Thumb Code    32  usart_driver.o(i.USART_send_bytes)
    recv_thread(void*)                       0x080033c1   Thumb Code   188  svvis_cortex_threads.o(i._Z11recv_threadPv)
    send_thread(void*)                       0x0800347d   Thumb Code    46  svvis_cortex_threads.o(i._Z11send_threadPv)
    main_thread_func(void*)                  0x080034ad   Thumb Code   280  main.o(i._Z16main_thread_funcPv)
    chid2len(unsigned char)                  0x080036b5   Thumb Code    50  svvis_cortex_threads.o(i._Z8chid2lenh)
    SvVis_t::init(USART_TypeDef*, unsigned)  0x080036e9   Thumb Code   146  svvis_cortex.o(i._ZN7SvVis_t4initEP13USART_TypeDefj)
    SvVis_t::recv_msg(SvVis_message_t&)      0x0800379d   Thumb Code    22  svvis_cortex.o(i._ZN7SvVis_t8recv_msgER15SvVis_message_t)
    SvVis_t::send_msg(SvVis_message_t&)      0x080037b3   Thumb Code    38  svvis_cortex.o(i._ZN7SvVis_t8send_msgER15SvVis_message_t)
    SvVis_t::send_str(const char*)           0x080037d9   Thumb Code    74  svvis_cortex.o(i._ZN7SvVis_t8send_strEPKc)
    SvVis_t::available()                     0x08003823   Thumb Code    12  svvis_cortex.o(i._ZN7SvVis_t9availableEv)
    __LED_heartbeat_function                 0x0800382f   Thumb Code    28  led_driver.o(i.__LED_heartbeat_function)
    __user_perthread_libspace                0x0800384d   Thumb Code    98  rtx_lib.o(i.__user_perthread_libspace)
    _mutex_acquire                           0x080038bd   Thumb Code    22  rtx_lib.o(i._mutex_acquire)
    _mutex_free                              0x080038d3   Thumb Code    12  rtx_lib.o(i._mutex_free)
    _mutex_initialize                        0x080038df   Thumb Code    32  rtx_lib.o(i._mutex_initialize)
    _mutex_release                           0x080038ff   Thumb Code    18  rtx_lib.o(i._mutex_release)
    _platform_post_stackheap_init            0x08003911   Thumb Code     8  rtx_lib.o(i._platform_post_stackheap_init)
    init_usart                               0x08003919   Thumb Code   338  usart_driver.o(i.init_usart)
    main                                     0x08003a81   Thumb Code    70  main.o(i.main)
    motor_cmd_bin                            0x08003add   Thumb Code   126  motor_driver.o(i.motor_cmd_bin)
    motor_cmd_str                            0x08003b65   Thumb Code   196  motor_driver.o(i.motor_cmd_str)
    motor_init                               0x08003c41   Thumb Code   120  motor_driver.o(i.motor_init)
    motor_stop                               0x08003cc5   Thumb Code    14  motor_driver.o(i.motor_stop)
    osRtxErrorNotify                         0x08003cd9   Thumb Code    32  rtx_config.o(i.osRtxErrorNotify)
    osRtxIdleThread                          0x08003cf9   Thumb Code     4  rtx_config.o(i.osRtxIdleThread)
    timer_init                               0x08003d21   Thumb Code   242  motor_driver.o(i.timer_init)
    _get_lc_ctype                            0x08003e25   Thumb Code    44  lc_ctype_c.o(locale$$code)
    __aeabi_d2uiz                            0x08003e51   Thumb Code     0  dfixu.o(x$fpl$dfixu)
    _dfixu                                   0x08003e51   Thumb Code    90  dfixu.o(x$fpl$dfixu)
    __aeabi_ui2d                             0x08003eab   Thumb Code     0  dflt_clz.o(x$fpl$dfltu)
    _dfltu                                   0x08003eab   Thumb Code    38  dflt_clz.o(x$fpl$dfltu)
    __aeabi_dmul                             0x08003ed1   Thumb Code     0  dmul.o(x$fpl$dmul)
    _dmul                                    0x08003ed1   Thumb Code   332  dmul.o(x$fpl$dmul)
    __fpl_dnaninf                            0x08004025   Thumb Code   156  dnaninf.o(x$fpl$dnaninf)
    __fpl_dretinf                            0x080040c1   Thumb Code    12  dretinf.o(x$fpl$dretinf)
    __I$use$fp                               0x080040cc   Number         0  usenofp.o(x$fpl$usenofp)
    osRtxUserSVC                             0x0800412c   Data           4  rtx_lib.o(.constdata)
    irqRtxLib                                0x08004130   Data           1  irq_cm3.o(.constdata)
    osRtxConfig                              0x08004134   Data         104  rtx_lib.o(.rodata)
    Region$$Table$$Base                      0x080041a8   Number         0  anon$$obj.o(Region$$Table)
    Region$$Table$$Limit                     0x080041c8   Number         0  anon$$obj.o(Region$$Table)
    __ctype                                  0x080041d5   Data           0  lc_ctype_c.o(locale$$data)
    _usart1_handler                          0x200014d0   Data           4  svvis_cortex.o(.data)
    _usart2_handler                          0x200014d4   Data           4  svvis_cortex.o(.data)
    _usart3_handler                          0x200014d8   Data           4  svvis_cortex.o(.data)
    main_thread_handle                       0x200014dc   Data           4  main.o(.data)
    __LED_heartbeat_handle                   0x200014e0   Data           4  led_driver.o(.data)
    duty_cycle_left                          0x200014e8   Data           8  motor_driver.o(.data)
    duty_cycle_right                         0x200014f0   Data           8  motor_driver.o(.data)
    os_timer_stop                            0x200014f8   Data           4  motor_driver.o(.data)
    irqRtxLibRef                             0x200014fc   Data           4  rtx_lib.o(.data)
    SystemCoreClock                          0x20001518   Data           4  system_stm32f10x.o(.data)
    AHBPrescTable                            0x2000151c   Data          16  system_stm32f10x.o(.data)
    osRtxInfo                                0x20001530   Data         168  rtx_kernel.o(.data.os)
    __libspace_start                         0x200015d8   Data          96  libspace.o(.bss)
    __temporary_stack_top$libspace           0x20001638   Data           0  libspace.o(.bss)



==============================================================================

Memory Map of the image

  Image Entry point : 0x08000245

  Load Region LR_1 (Base: 0x08000000, Size: 0x000058b0, Max: 0xffffffff, ABSOLUTE, COMPRESSED[0x00004330])

    Execution Region ER_RO (Exec base: 0x08000000, Load base: 0x08000000, Size: 0x000042d8, Max: 0xffffffff, ABSOLUTE)

    Exec Addr    Load Addr    Size         Type   Attr      Idx    E Section Name        Object

    0x08000000   0x08000000   0x00000150   Data   RO         1825    RESET               startup_stm32f10x_cl.o
    0x08000150   0x08000150   0x00000008   Code   RO         2347  * !!!main             c_w.l(__main.o)
    0x08000158   0x08000158   0x00000034   Code   RO         2558    !!!scatter          c_w.l(__scatter.o)
    0x0800018c   0x0800018c   0x0000005a   Code   RO         2556    !!dczerorl2         c_w.l(__dczerorl2.o)
    0x080001e6   0x080001e6   0x00000002   PAD
    0x080001e8   0x080001e8   0x0000001c   Code   RO         2560    !!handler_zi        c_w.l(__scatter_zi.o)
    0x08000204   0x08000204   0x00000002   Code   RO         2429    .ARM.Collect$$libinit$$00000000  c_w.l(libinit.o)
    0x08000206   0x08000206   0x00000000   Code   RO         2431    .ARM.Collect$$libinit$$00000002  c_w.l(libinit2.o)
    0x08000206   0x08000206   0x00000000   Code   RO         2433    .ARM.Collect$$libinit$$00000004  c_w.l(libinit2.o)
    0x08000206   0x08000206   0x00000000   Code   RO         2436    .ARM.Collect$$libinit$$0000000A  c_w.l(libinit2.o)
    0x08000206   0x08000206   0x00000000   Code   RO         2438    .ARM.Collect$$libinit$$0000000C  c_w.l(libinit2.o)
    0x08000206   0x08000206   0x00000000   Code   RO         2440    .ARM.Collect$$libinit$$0000000E  c_w.l(libinit2.o)
    0x08000206   0x08000206   0x00000006   Code   RO         2441    .ARM.Collect$$libinit$$0000000F  c_w.l(libinit2.o)
    0x0800020c   0x0800020c   0x00000000   Code   RO         2443    .ARM.Collect$$libinit$$00000011  c_w.l(libinit2.o)
    0x0800020c   0x0800020c   0x0000000c   Code   RO         2444    .ARM.Collect$$libinit$$00000012  c_w.l(libinit2.o)
    0x08000218   0x08000218   0x00000000   Code   RO         2445    .ARM.Collect$$libinit$$00000013  c_w.l(libinit2.o)
    0x08000218   0x08000218   0x00000000   Code   RO         2447    .ARM.Collect$$libinit$$00000015  c_w.l(libinit2.o)
    0x08000218   0x08000218   0x00000000   Code   RO         2449    .ARM.Collect$$libinit$$00000017  c_w.l(libinit2.o)
    0x08000218   0x08000218   0x00000000   Code   RO         2451    .ARM.Collect$$libinit$$00000019  c_w.l(libinit2.o)
    0x08000218   0x08000218   0x00000000   Code   RO         2453    .ARM.Collect$$libinit$$0000001B  c_w.l(libinit2.o)
    0x08000218   0x08000218   0x00000000   Code   RO         2455    .ARM.Collect$$libinit$$0000001D  c_w.l(libinit2.o)
    0x08000218   0x08000218   0x00000000   Code   RO         2457    .ARM.Collect$$libinit$$0000001F  c_w.l(libinit2.o)
    0x08000218   0x08000218   0x00000000   Code   RO         2459    .ARM.Collect$$libinit$$00000021  c_w.l(libinit2.o)
    0x08000218   0x08000218   0x00000000   Code   RO         2461    .ARM.Collect$$libinit$$00000023  c_w.l(libinit2.o)
    0x08000218   0x08000218   0x00000000   Code   RO         2463    .ARM.Collect$$libinit$$00000025  c_w.l(libinit2.o)
    0x08000218   0x08000218   0x00000000   Code   RO         2467    .ARM.Collect$$libinit$$0000002C  c_w.l(libinit2.o)
    0x08000218   0x08000218   0x00000000   Code   RO         2469    .ARM.Collect$$libinit$$0000002E  c_w.l(libinit2.o)
    0x08000218   0x08000218   0x00000000   Code   RO         2471    .ARM.Collect$$libinit$$00000030  c_w.l(libinit2.o)
    0x08000218   0x08000218   0x00000000   Code   RO         2473    .ARM.Collect$$libinit$$00000032  c_w.l(libinit2.o)
    0x08000218   0x08000218   0x00000002   Code   RO         2474    .ARM.Collect$$libinit$$00000033  c_w.l(libinit2.o)
    0x0800021a   0x0800021a   0x00000002   Code   RO         2504    .ARM.Collect$$libshutdown$$00000000  c_w.l(libshutdown.o)
    0x0800021c   0x0800021c   0x00000000   Code   RO         2515    .ARM.Collect$$libshutdown$$00000002  c_w.l(libshutdown2.o)
    0x0800021c   0x0800021c   0x00000000   Code   RO         2517    .ARM.Collect$$libshutdown$$00000004  c_w.l(libshutdown2.o)
    0x0800021c   0x0800021c   0x00000000   Code   RO         2520    .ARM.Collect$$libshutdown$$00000007  c_w.l(libshutdown2.o)
    0x0800021c   0x0800021c   0x00000000   Code   RO         2523    .ARM.Collect$$libshutdown$$0000000A  c_w.l(libshutdown2.o)
    0x0800021c   0x0800021c   0x00000000   Code   RO         2525    .ARM.Collect$$libshutdown$$0000000C  c_w.l(libshutdown2.o)
    0x0800021c   0x0800021c   0x00000000   Code   RO         2528    .ARM.Collect$$libshutdown$$0000000F  c_w.l(libshutdown2.o)
    0x0800021c   0x0800021c   0x00000002   Code   RO         2529    .ARM.Collect$$libshutdown$$00000010  c_w.l(libshutdown2.o)
    0x0800021e   0x0800021e   0x00000000   Code   RO         2371    .ARM.Collect$$rtentry$$00000000  c_w.l(__rtentry.o)
    0x0800021e   0x0800021e   0x00000000   Code   RO         2396    .ARM.Collect$$rtentry$$00000002  c_w.l(__rtentry2.o)
    0x0800021e   0x0800021e   0x00000006   Code   RO         2408    .ARM.Collect$$rtentry$$00000004  c_w.l(__rtentry4.o)
    0x08000224   0x08000224   0x00000008   Code   RO         2397    .ARM.Collect$$rtentry$$00000008  c_w.l(__rtentry2.o)
    0x0800022c   0x0800022c   0x00000004   Code   RO         2399    .ARM.Collect$$rtentry$$0000000A  c_w.l(__rtentry2.o)
    0x08000230   0x08000230   0x00000000   Code   RO         2401    .ARM.Collect$$rtentry$$0000000C  c_w.l(__rtentry2.o)
    0x08000230   0x08000230   0x00000008   Code   RO         2402    .ARM.Collect$$rtentry$$0000000D  c_w.l(__rtentry2.o)
    0x08000238   0x08000238   0x00000002   Code   RO         2475    .ARM.Collect$$rtexit$$00000000  c_w.l(rtexit.o)
    0x0800023a   0x0800023a   0x00000000   Code   RO         2482    .ARM.Collect$$rtexit$$00000002  c_w.l(rtexit2.o)
    0x0800023a   0x0800023a   0x00000004   Code   RO         2483    .ARM.Collect$$rtexit$$00000003  c_w.l(rtexit2.o)
    0x0800023e   0x0800023e   0x00000006   Code   RO         2484    .ARM.Collect$$rtexit$$00000004  c_w.l(rtexit2.o)
    0x08000244   0x08000244   0x00000040   Code   RO         1826  * .text               startup_stm32f10x_cl.o
    0x08000284   0x08000284   0x00000088   Code   RO         2222    .text               RTX_CM3.lib(irq_cm3.o)
    0x0800030c   0x0800030c   0x00000072   Code   RO         2329    .text               c_w.l(strtoul.o)
    0x0800037e   0x0800037e   0x0000003e   Code   RO         2331    .text               c_w.l(strlen.o)
    0x080003bc   0x080003bc   0x00000096   Code   RO         2333    .text               c_w.l(strncmp.o)
    0x08000452   0x08000452   0x0000008a   Code   RO         2335    .text               c_w.l(rt_memcpy_v6.o)
    0x080004dc   0x080004dc   0x00000010   Code   RO         2337    .text               c_w.l(aeabi_memset4.o)
    0x080004ec   0x080004ec   0x00000044   Code   RO         2339    .text               c_w.l(rt_memclr.o)
    0x08000530   0x08000530   0x0000004e   Code   RO         2341    .text               c_w.l(rt_memclr_w.o)
    0x0800057e   0x0800057e   0x00000002   PAD
    0x08000580   0x08000580   0x00000080   Code   RO         2343    .text               c_w.l(strcmpv7m.o)
    0x08000600   0x08000600   0x00000006   Code   RO         2345    .text               c_w.l(heapauxi.o)
    0x08000606   0x08000606   0x00000002   PAD
    0x08000608   0x08000608   0x00000010   Code   RO         2372    .text               c_w.l(rt_ctype_table.o)
    0x08000618   0x08000618   0x00000004   Code   RO         2379    .text               c_w.l(rt_errno_addr_twolibspace.o)
    0x0800061c   0x0800061c   0x0000009e   Code   RO         2381    .text               c_w.l(_strtoul.o)
    0x080006ba   0x080006ba   0x00000064   Code   RO         2383    .text               c_w.l(rt_memcpy_w.o)
    0x0800071e   0x0800071e   0x00000002   PAD
    0x08000720   0x08000720   0x00000008   Code   RO         2392    .text               c_w.l(libspace.o)
    0x08000728   0x08000728   0x0000000a   Code   RO         2415    .text               c_w.l(rt_locale_twolibspace.o)
    0x08000732   0x08000732   0x0000001c   Code   RO         2417    .text               c_w.l(_chval.o)
    0x0800074e   0x0800074e   0x0000004a   Code   RO         2422    .text               c_w.l(sys_stackheap_outer.o)
    0x08000798   0x08000798   0x00000012   Code   RO         2424    .text               c_w.l(exit.o)
    0x080007aa   0x080007aa   0x00000002   PAD
    0x080007ac   0x080007ac   0x0000000c   Code   RO         2494    .text               c_w.l(sys_exit.o)
    0x080007b8   0x080007b8   0x00000002   Code   RO         2505    .text               c_w.l(use_no_semi.o)
    0x080007ba   0x080007ba   0x00000000   Code   RO         2507    .text               c_w.l(indicate_semi.o)
    0x080007ba   0x080007ba   0x00000002   PAD
    0x080007bc   0x080007bc   0x00000024   Code   RO         2078    .text.osDelay       RTX_CM3.lib(rtx_delay.o)
    0x080007e0   0x080007e0   0x0000003a   Code   RO         1907    .text.osKernelGetState  RTX_CM3.lib(rtx_kernel.o)
    0x0800081a   0x0800081a   0x00000002   PAD
    0x0800081c   0x0800081c   0x0000003c   Code   RO         1903    .text.osKernelInitialize  RTX_CM3.lib(rtx_kernel.o)
    0x08000858   0x08000858   0x0000003c   Code   RO         1909    .text.osKernelStart  RTX_CM3.lib(rtx_kernel.o)
    0x08000894   0x08000894   0x000000b4   Code   RO         2197    .text.osMessageQueueGet  RTX_CM3.lib(rtx_msgqueue.o)
    0x08000948   0x08000948   0x00000034   Code   RO         2203    .text.osMessageQueueGetCount  RTX_CM3.lib(rtx_msgqueue.o)
    0x0800097c   0x0800097c   0x00000038   Code   RO         2205    .text.osMessageQueueGetSpace  RTX_CM3.lib(rtx_msgqueue.o)
    0x080009b4   0x080009b4   0x0000003a   Code   RO         2191    .text.osMessageQueueNew  RTX_CM3.lib(rtx_msgqueue.o)
    0x080009ee   0x080009ee   0x00000002   PAD
    0x080009f0   0x080009f0   0x00000084   Code   RO         2195    .text.osMessageQueuePut  RTX_CM3.lib(rtx_msgqueue.o)
    0x08000a74   0x08000a74   0x00000024   Code   RO         2150    .text.osMutexAcquire  RTX_CM3.lib(rtx_mutex.o)
    0x08000a98   0x08000a98   0x00000024   Code   RO         2156    .text.osMutexDelete  RTX_CM3.lib(rtx_mutex.o)
    0x08000abc   0x08000abc   0x0000003a   Code   RO         2146    .text.osMutexNew    RTX_CM3.lib(rtx_mutex.o)
    0x08000af6   0x08000af6   0x00000002   PAD
    0x08000af8   0x08000af8   0x00000024   Code   RO         2152    .text.osMutexRelease  RTX_CM3.lib(rtx_mutex.o)
    0x08000b1c   0x08000b1c   0x0000006e   Code   RO         2229    .text.osRtxMemoryAlloc  RTX_CM3.lib(rtx_memory.o)
    0x08000b8a   0x08000b8a   0x00000002   PAD
    0x08000b8c   0x08000b8c   0x00000058   Code   RO         2231    .text.osRtxMemoryFree  RTX_CM3.lib(rtx_memory.o)
    0x08000be4   0x08000be4   0x00000030   Code   RO         2227    .text.osRtxMemoryInit  RTX_CM3.lib(rtx_memory.o)
    0x08000c14   0x08000c14   0x0000004c   Code   RO         2246    .text.osRtxMemoryPoolAlloc  RTX_CM3.lib(rtx_mempool.o)
    0x08000c60   0x08000c60   0x0000005a   Code   RO         2248    .text.osRtxMemoryPoolFree  RTX_CM3.lib(rtx_mempool.o)
    0x08000cba   0x08000cba   0x00000002   PAD
    0x08000cbc   0x08000cbc   0x00000050   Code   RO         2244    .text.osRtxMemoryPoolInit  RTX_CM3.lib(rtx_mempool.o)
    0x08000d0c   0x08000d0c   0x000001be   Code   RO         2169    .text.osRtxMessageQueuePostProcess  RTX_CM3.lib(rtx_msgqueue.o)
    0x08000eca   0x08000eca   0x00000002   PAD
    0x08000ecc   0x08000ecc   0x0000004c   Code   RO         2132    .text.osRtxMutexOwnerRelease  RTX_CM3.lib(rtx_mutex.o)
    0x08000f18   0x08000f18   0x000000a8   Code   RO         2303    .text.osRtxPendSV_Handler  RTX_CM3.lib(rtx_system.o)
    0x08000fc0   0x08000fc0   0x00000078   Code   RO         2305    .text.osRtxPostProcess  RTX_CM3.lib(rtx_system.o)
    0x08001038   0x08001038   0x0000000c   Code   RO         2301    .text.osRtxSysTimerAckIRQ  RTX_CM3.lib(rtx_system.o)
    0x08001044   0x08001044   0x0000000e   Code   RO         2309    .text.osRtxSysTimerEnable  RTX_CM3.lib(rtx_system.o)
    0x08001052   0x08001052   0x00000002   PAD
    0x08001054   0x08001054   0x0000003a   Code   RO         2307    .text.osRtxSysTimerSetup  RTX_CM3.lib(rtx_system.o)
    0x0800108e   0x0800108e   0x00000002   PAD
    0x08001090   0x08001090   0x00000088   Code   RO         1961    .text.osRtxThreadDelayTick  RTX_CM3.lib(rtx_thread.o)
    0x08001118   0x08001118   0x00000158   Code   RO         1971    .text.osRtxThreadDispatch  RTX_CM3.lib(rtx_thread.o)
    0x08001270   0x08001270   0x0000001a   Code   RO         1945    .text.osRtxThreadListGet  RTX_CM3.lib(rtx_thread.o)
    0x0800128a   0x0800128a   0x00000002   PAD
    0x0800128c   0x0800128c   0x00000038   Code   RO         1943    .text.osRtxThreadListPut  RTX_CM3.lib(rtx_thread.o)
    0x080012c4   0x080012c4   0x0000001a   Code   RO         1951    .text.osRtxThreadListRemove  RTX_CM3.lib(rtx_thread.o)
    0x080012de   0x080012de   0x00000002   PAD
    0x080012e0   0x080012e0   0x00000060   Code   RO         1949    .text.osRtxThreadListSort  RTX_CM3.lib(rtx_thread.o)
    0x08001340   0x08001340   0x00000128   Code   RO         1977    .text.osRtxThreadPostProcess  RTX_CM3.lib(rtx_thread.o)
    0x08001468   0x08001468   0x00000048   Code   RO         1955    .text.osRtxThreadReadyPut  RTX_CM3.lib(rtx_thread.o)
    0x080014b0   0x080014b0   0x00000006   Code   RO         1963    .text.osRtxThreadRegPtr  RTX_CM3.lib(rtx_thread.o)
    0x080014b6   0x080014b6   0x00000002   PAD
    0x080014b8   0x080014b8   0x0000002e   Code   RO         1969    .text.osRtxThreadStackCheck  RTX_CM3.lib(rtx_thread.o)
    0x080014e6   0x080014e6   0x00000002   PAD
    0x080014e8   0x080014e8   0x00000012   Code   RO         1967    .text.osRtxThreadSwitch  RTX_CM3.lib(rtx_thread.o)
    0x080014fa   0x080014fa   0x00000002   PAD
    0x080014fc   0x080014fc   0x000000e2   Code   RO         1975    .text.osRtxThreadWaitEnter  RTX_CM3.lib(rtx_thread.o)
    0x080015de   0x080015de   0x00000002   PAD
    0x080015e0   0x080015e0   0x000000be   Code   RO         1973    .text.osRtxThreadWaitExit  RTX_CM3.lib(rtx_thread.o)
    0x0800169e   0x0800169e   0x00000002   PAD
    0x080016a0   0x080016a0   0x00000078   Code   RO         2299    .text.osRtxTick_Handler  RTX_CM3.lib(rtx_system.o)
    0x08001718   0x08001718   0x0000002a   Code   RO         2095    .text.osRtxTimerThread  RTX_CM3.lib(rtx_timer.o)
    0x08001742   0x08001742   0x00000002   PAD
    0x08001744   0x08001744   0x000000aa   Code   RO         2093    .text.osRtxTimerTick  RTX_CM3.lib(rtx_timer.o)
    0x080017ee   0x080017ee   0x00000002   PAD
    0x080017f0   0x080017f0   0x0000000e   Code   RO         1981    .text.osThreadExit  RTX_CM3.lib(rtx_thread.o)
    0x080017fe   0x080017fe   0x00000002   PAD
    0x08001800   0x08001800   0x00000022   Code   RO         2027    .text.osThreadGetId  RTX_CM3.lib(rtx_thread.o)
    0x08001822   0x08001822   0x00000002   PAD
    0x08001824   0x08001824   0x0000003a   Code   RO         2023    .text.osThreadNew   RTX_CM3.lib(rtx_thread.o)
    0x0800185e   0x0800185e   0x00000002   PAD
    0x08001860   0x08001860   0x00000024   Code   RO         2039    .text.osThreadYield  RTX_CM3.lib(rtx_thread.o)
    0x08001884   0x08001884   0x00000048   Code   RO         2109    .text.osTimerNew    RTX_CM3.lib(rtx_timer.o)
    0x080018cc   0x080018cc   0x00000024   Code   RO         2113    .text.osTimerStart  RTX_CM3.lib(rtx_timer.o)
    0x080018f0   0x080018f0   0x00000014   Code   RO         2074    .text.svcRtxDelay   RTX_CM3.lib(rtx_delay.o)
    0x08001904   0x08001904   0x0000000c   Code   RO         1881    .text.svcRtxKernelGetState  RTX_CM3.lib(rtx_kernel.o)
    0x08001910   0x08001910   0x000001ac   Code   RO         1877    .text.svcRtxKernelInitialize  RTX_CM3.lib(rtx_kernel.o)
    0x08001abc   0x08001abc   0x00000096   Code   RO         1883    .text.svcRtxKernelStart  RTX_CM3.lib(rtx_kernel.o)
    0x08001b52   0x08001b52   0x00000002   PAD
    0x08001b54   0x08001b54   0x0000019a   Code   RO         2177    .text.svcRtxMessageQueueGet  RTX_CM3.lib(rtx_msgqueue.o)
    0x08001cee   0x08001cee   0x00000002   PAD
    0x08001cf0   0x08001cf0   0x00000016   Code   RO         2183    .text.svcRtxMessageQueueGetCount  RTX_CM3.lib(rtx_msgqueue.o)
    0x08001d06   0x08001d06   0x00000002   PAD
    0x08001d08   0x08001d08   0x0000001a   Code   RO         2185    .text.svcRtxMessageQueueGetSpace  RTX_CM3.lib(rtx_msgqueue.o)
    0x08001d22   0x08001d22   0x00000002   PAD
    0x08001d24   0x08001d24   0x00000160   Code   RO         2171    .text.svcRtxMessageQueueNew  RTX_CM3.lib(rtx_msgqueue.o)
    0x08001e84   0x08001e84   0x00000118   Code   RO         2175    .text.svcRtxMessageQueuePut  RTX_CM3.lib(rtx_msgqueue.o)
    0x08001f9c   0x08001f9c   0x0000009e   Code   RO         2138    .text.svcRtxMutexAcquire  RTX_CM3.lib(rtx_mutex.o)
    0x0800203a   0x0800203a   0x00000002   PAD
    0x0800203c   0x0800203c   0x000000d6   Code   RO         2144    .text.svcRtxMutexDelete  RTX_CM3.lib(rtx_mutex.o)
    0x08002112   0x08002112   0x00000002   PAD
    0x08002114   0x08002114   0x00000072   Code   RO         2134    .text.svcRtxMutexNew  RTX_CM3.lib(rtx_mutex.o)
    0x08002186   0x08002186   0x00000002   PAD
    0x08002188   0x08002188   0x000000c8   Code   RO         2140    .text.svcRtxMutexRelease  RTX_CM3.lib(rtx_mutex.o)
    0x08002250   0x08002250   0x00000142   Code   RO         2007    .text.svcRtxThreadExit  RTX_CM3.lib(rtx_thread.o)
    0x08002392   0x08002392   0x00000002   PAD
    0x08002394   0x08002394   0x0000000c   Code   RO         1985    .text.svcRtxThreadGetId  RTX_CM3.lib(rtx_thread.o)
    0x080023a0   0x080023a0   0x00000240   Code   RO         1979    .text.svcRtxThreadNew  RTX_CM3.lib(rtx_thread.o)
    0x080025e0   0x080025e0   0x0000008e   Code   RO         1997    .text.svcRtxThreadYield  RTX_CM3.lib(rtx_thread.o)
    0x0800266e   0x0800266e   0x00000002   PAD
    0x08002670   0x08002670   0x000000d8   Code   RO         2097    .text.svcRtxTimerNew  RTX_CM3.lib(rtx_timer.o)
    0x08002748   0x08002748   0x000000b8   Code   RO         2101    .text.svcRtxTimerStart  RTX_CM3.lib(rtx_timer.o)
    0x08002800   0x08002800   0x00000116   Code   RO          688    i.GPIO_Init         stm32f10x_gpio.o
    0x08002916   0x08002916   0x00000004   Code   RO          695    i.GPIO_ResetBits    stm32f10x_gpio.o
    0x0800291a   0x0800291a   0x00000004   Code   RO          696    i.GPIO_SetBits      stm32f10x_gpio.o
    0x0800291e   0x0800291e   0x0000000a   Code   RO          699    i.GPIO_WriteBit     stm32f10x_gpio.o
    0x08002928   0x08002928   0x00000014   Code   RO          242    i.LED_heartbeat     led_driver.o
    0x0800293c   0x0800293c   0x0000006c   Code   RO          243    i.LED_init          led_driver.o
    0x080029a8   0x080029a8   0x0000002c   Code   RO          244    i.LED_triangle_l    led_driver.o
    0x080029d4   0x080029d4   0x00000070   Code   RO          634    i.NVIC_Init         misc.o
    0x08002a44   0x08002a44   0x00000020   Code   RO          811    i.RCC_APB1PeriphClockCmd  stm32f10x_rcc.o
    0x08002a64   0x08002a64   0x00000020   Code   RO          812    i.RCC_APB1PeriphResetCmd  stm32f10x_rcc.o
    0x08002a84   0x08002a84   0x00000020   Code   RO          813    i.RCC_APB2PeriphClockCmd  stm32f10x_rcc.o
    0x08002aa4   0x08002aa4   0x00000020   Code   RO          814    i.RCC_APB2PeriphResetCmd  stm32f10x_rcc.o
    0x08002ac4   0x08002ac4   0x00000190   Code   RO          821    i.RCC_GetClocksFreq  stm32f10x_rcc.o
    0x08002c54   0x08002c54   0x00000008   Code   RO         1833    i.SetSysClock       system_stm32f10x.o
    0x08002c5c   0x08002c5c   0x00000118   Code   RO         1834    i.SetSysClockTo72   system_stm32f10x.o
    0x08002d74   0x08002d74   0x00000100   Code   RO         1835    i.SystemCoreClockUpdate  system_stm32f10x.o
    0x08002e74   0x08002e74   0x0000006c   Code   RO         1836    i.SystemInit        system_stm32f10x.o
    0x08002ee0   0x08002ee0   0x00000010   Code   RO          341    i.TIM3_IRQHandler   motor_driver.o
    0x08002ef0   0x08002ef0   0x00000006   Code   RO         1085    i.TIM_ClearITPendingBit  stm32f10x_tim.o
    0x08002ef6   0x08002ef6   0x00000018   Code   RO         1090    i.TIM_Cmd           stm32f10x_tim.o
    0x08002f0e   0x08002f0e   0x00000012   Code   RO         1115    i.TIM_ITConfig      stm32f10x_tim.o
    0x08002f20   0x08002f20   0x000000a0   Code   RO         1129    i.TIM_OC3Init       stm32f10x_tim.o
    0x08002fc0   0x08002fc0   0x0000007c   Code   RO         1134    i.TIM_OC4Init       stm32f10x_tim.o
    0x0800303c   0x0800303c   0x000000a4   Code   RO         1161    i.TIM_TimeBaseInit  stm32f10x_tim.o
    0x080030e0   0x080030e0   0x00000028   Code   RO          411    i.USART1_IRQHandler  usart_driver.o
    0x08003108   0x08003108   0x00000028   Code   RO          412    i.USART2_IRQHandler  usart_driver.o
    0x08003130   0x08003130   0x00000028   Code   RO          413    i.USART3_IRQHandler  usart_driver.o
    0x08003158   0x08003158   0x00000022   Code   RO         1636    i.USART_ClockInit   stm32f10x_usart.o
    0x0800317a   0x0800317a   0x00000018   Code   RO         1638    i.USART_Cmd         stm32f10x_usart.o
    0x08003192   0x08003192   0x00000002   PAD
    0x08003194   0x08003194   0x0000009c   Code   RO         1640    i.USART_DeInit      stm32f10x_usart.o
    0x08003230   0x08003230   0x0000001a   Code   RO         1641    i.USART_GetFlagStatus  stm32f10x_usart.o
    0x0800324a   0x0800324a   0x0000004a   Code   RO         1644    i.USART_ITConfig    stm32f10x_usart.o
    0x08003294   0x08003294   0x000000d8   Code   RO         1645    i.USART_Init        stm32f10x_usart.o
    0x0800336c   0x0800336c   0x0000000a   Code   RO         1652    i.USART_ReceiveData  stm32f10x_usart.o
    0x08003376   0x08003376   0x00000008   Code   RO         1655    i.USART_SendData    stm32f10x_usart.o
    0x0800337e   0x0800337e   0x00000022   Code   RO          414    i.USART_send_byte   usart_driver.o
    0x080033a0   0x080033a0   0x00000020   Code   RO          415    i.USART_send_bytes  usart_driver.o
    0x080033c0   0x080033c0   0x000000bc   Code   RO          203    i._Z11recv_threadPv  svvis_cortex_threads.o
    0x0800347c   0x0800347c   0x0000002e   Code   RO          204    i._Z11send_threadPv  svvis_cortex_threads.o
    0x080034aa   0x080034aa   0x00000002   PAD
    0x080034ac   0x080034ac   0x00000208   Code   RO          148    i._Z16main_thread_funcPv  main.o
    0x080036b4   0x080036b4   0x00000032   Code   RO          205    i._Z8chid2lenh      svvis_cortex_threads.o
    0x080036e6   0x080036e6   0x00000002   PAD
    0x080036e8   0x080036e8   0x000000b4   Code   RO            6    i._ZN7SvVis_t4initEP13USART_TypeDefj  svvis_cortex.o
    0x0800379c   0x0800379c   0x00000016   Code   RO            7    i._ZN7SvVis_t8recv_msgER15SvVis_message_t  svvis_cortex.o
    0x080037b2   0x080037b2   0x00000026   Code   RO           10    i._ZN7SvVis_t8send_msgER15SvVis_message_t  svvis_cortex.o
    0x080037d8   0x080037d8   0x0000004a   Code   RO           11    i._ZN7SvVis_t8send_strEPKc  svvis_cortex.o
    0x08003822   0x08003822   0x0000000c   Code   RO           12    i._ZN7SvVis_t9availableEv  svvis_cortex.o
    0x0800382e   0x0800382e   0x0000001c   Code   RO          245    i.__LED_heartbeat_function  led_driver.o
    0x0800384a   0x0800384a   0x00000002   PAD
    0x0800384c   0x0800384c   0x00000070   Code   RO          523    i.__user_perthread_libspace  rtx_lib.o
    0x080038bc   0x080038bc   0x00000016   Code   RO          524    i._mutex_acquire    rtx_lib.o
    0x080038d2   0x080038d2   0x0000000c   Code   RO          525    i._mutex_free       rtx_lib.o
    0x080038de   0x080038de   0x00000020   Code   RO          526    i._mutex_initialize  rtx_lib.o
    0x080038fe   0x080038fe   0x00000012   Code   RO          527    i._mutex_release    rtx_lib.o
    0x08003910   0x08003910   0x00000008   Code   RO          528    i._platform_post_stackheap_init  rtx_lib.o
    0x08003918   0x08003918   0x00000168   Code   RO          416    i.init_usart        usart_driver.o
    0x08003a80   0x08003a80   0x0000005c   Code   RO          149    i.main              main.o
    0x08003adc   0x08003adc   0x00000088   Code   RO          342    i.motor_cmd_bin     motor_driver.o
    0x08003b64   0x08003b64   0x000000dc   Code   RO          343    i.motor_cmd_str     motor_driver.o
    0x08003c40   0x08003c40   0x00000084   Code   RO          344    i.motor_init        motor_driver.o
    0x08003cc4   0x08003cc4   0x00000014   Code   RO          345    i.motor_stop        motor_driver.o
    0x08003cd8   0x08003cd8   0x00000020   Code   RO          600    i.osRtxErrorNotify  rtx_config.o
    0x08003cf8   0x08003cf8   0x00000004   Code   RO          601    i.osRtxIdleThread   rtx_config.o
    0x08003cfc   0x08003cfc   0x00000024   Code   RO          529    i.os_kernel_is_active  rtx_lib.o
    0x08003d20   0x08003d20   0x00000104   Code   RO          346    i.timer_init        motor_driver.o
    0x08003e24   0x08003e24   0x0000002c   Code   RO         2420    locale$$code        c_w.l(lc_ctype_c.o)
    0x08003e50   0x08003e50   0x0000005a   Code   RO         2349    x$fpl$dfixu         fz_ws.l(dfixu.o)
    0x08003eaa   0x08003eaa   0x00000026   Code   RO         2353    x$fpl$dfltu         fz_ws.l(dflt_clz.o)
    0x08003ed0   0x08003ed0   0x00000154   Code   RO         2359    x$fpl$dmul          fz_ws.l(dmul.o)
    0x08004024   0x08004024   0x0000009c   Code   RO         2385    x$fpl$dnaninf       fz_ws.l(dnaninf.o)
    0x080040c0   0x080040c0   0x0000000c   Code   RO         2387    x$fpl$dretinf       fz_ws.l(dretinf.o)
    0x080040cc   0x080040cc   0x00000000   Code   RO         2391    x$fpl$usenofp       fz_ws.l(usenofp.o)
    0x080040cc   0x080040cc   0x00000064   Data   RO          535    .constdata          rtx_lib.o
    0x08004130   0x08004130   0x00000001   Data   RO         2221    .constdata          RTX_CM3.lib(irq_cm3.o)
    0x08004131   0x08004131   0x00000003   PAD
    0x08004134   0x08004134   0x00000068   Data   RO          537    .rodata             rtx_lib.o
    0x0800419c   0x0800419c   0x0000000b   Data   RO         1929    .rodata.str1.4      RTX_CM3.lib(rtx_kernel.o)
    0x080041a7   0x080041a7   0x00000001   PAD
    0x080041a8   0x080041a8   0x00000020   Data   RO         2554    Region$$Table       anon$$obj.o
    0x080041c8   0x080041c8   0x00000110   Data   RO         2419    locale$$data        c_w.l(lc_ctype_c.o)


    Execution Region ER_RW (Exec base: 0x20000000, Load base: 0x080042d8, Size: 0x000015d8, Max: 0xffffffff, ABSOLUTE, COMPRESSED[0x00000058])

    Exec Addr    Load Addr    Size         Type   Attr      Idx    E Section Name        Object

    0x20000000   COMPRESSED   0x00001230   Data   RW          530    .bss.os             rtx_lib.o
    0x20001230   COMPRESSED   0x00000034   Data   RW          531    .bss.os.msgqueue.cb  rtx_lib.o
    0x20001264   COMPRESSED   0x00000050   Data   RW          532    .bss.os.msgqueue.mem  rtx_lib.o
    0x200012b4   COMPRESSED   0x00000088   Data   RW          533    .bss.os.thread.cb   rtx_lib.o
    0x2000133c   COMPRESSED   0x00000004   PAD
    0x20001340   COMPRESSED   0x00000190   Data   RW          534    .bss.os.thread.stack  rtx_lib.o
    0x200014d0   COMPRESSED   0x0000000c   Data   RW           22    .data               svvis_cortex.o
    0x200014dc   COMPRESSED   0x00000004   Data   RW          152    .data               main.o
    0x200014e0   COMPRESSED   0x00000004   Data   RW          246    .data               led_driver.o
    0x200014e4   COMPRESSED   0x00000004   PAD
    0x200014e8   COMPRESSED   0x00000014   Data   RW          347    .data               motor_driver.o
    0x200014fc   COMPRESSED   0x00000005   Data   RW          536    .data               rtx_lib.o
    0x20001501   COMPRESSED   0x00000014   Data   RW          849    .data               stm32f10x_rcc.o
    0x20001515   COMPRESSED   0x00000003   PAD
    0x20001518   COMPRESSED   0x00000014   Data   RW         1837    .data               system_stm32f10x.o
    0x2000152c   COMPRESSED   0x00000004   PAD
    0x20001530   COMPRESSED   0x000000a8   Data   RW         1930    .data.os            RTX_CM3.lib(rtx_kernel.o)


    Execution Region ER_ZI (Exec base: 0x200015d8, Load base: 0x08004330, Size: 0x00000660, Max: 0xffffffff, ABSOLUTE)

    Exec Addr    Load Addr    Size         Type   Attr      Idx    E Section Name        Object

    0x200015d8        -       0x00000060   Zero   RW         2393    .bss                c_w.l(libspace.o)
    0x20001638        -       0x00000200   Zero   RW         1824    HEAP                startup_stm32f10x_cl.o
    0x20001838        -       0x00000400   Zero   RW         1823    STACK               startup_stm32f10x_cl.o


==============================================================================

Image component sizes


      Code (inc. data)   RO Data    RW Data    ZI Data      Debug   Object Name

       200         22          0          4          0     280292   led_driver.o
       612        262          0          4          0       2869   main.o
       112         12          0          0          0       1140   misc.o
       784         80          0         20          0       4370   motor_driver.o
        36          6          0          0          0        965   rtx_config.o
       240         18        204       5329          0      12032   rtx_lib.o
        64         26        336          0       1536        812   startup_stm32f10x_cl.o
       296          0          0          0          0       3828   stm32f10x_gpio.o
       528         50          0         20          0       6612   stm32f10x_rcc.o
       496         62          0          0          0       4560   stm32f10x_tim.o
       548         28          0          0          0       6998   stm32f10x_usart.o
       326         34          0         12          0     233779   svvis_cortex.o
       284          0          0          0          0       1759   svvis_cortex_threads.o
       652         56          0         20          0       3045   system_stm32f10x.o
       546         52          0          0          0     241530   usart_driver.o

    ----------------------------------------------------------------------
      5732        708        572       5424       1536     804591   Object Totals
         0          0         32          0          0          0   (incl. Generated)
         8          0          0         15          0          0   (incl. Padding)

    ----------------------------------------------------------------------

      Code (inc. data)   RO Data    RW Data    ZI Data      Debug   Library Member Name

       136         10          1          0          0        480   irq_cm3.o
        56          0          0          0          0       2892   rtx_delay.o
       768          0         11        168          0      17856   rtx_kernel.o
       246          0          0          0          0       1937   rtx_memory.o
       246          0          0          0          0      17021   rtx_mempool.o
      2014          0          0          0          0      18585   rtx_msgqueue.o
       928          0          0          0          0       8779   rtx_mutex.o
       492          8          0          0          0       8155   rtx_system.o
      2732          0          0          0          0      40733   rtx_thread.o
       720          0          0          0          0       8770   rtx_timer.o
        90          0          0          0          0          0   __dczerorl2.o
         8          0          0          0          0         68   __main.o
         0          0          0          0          0          0   __rtentry.o
        20          0          0          0          0          0   __rtentry2.o
         6          0          0          0          0          0   __rtentry4.o
        52          8          0          0          0          0   __scatter.o
        28          0          0          0          0          0   __scatter_zi.o
        28          0          0          0          0         68   _chval.o
       158          0          0          0          0         92   _strtoul.o
        16          0          0          0          0         68   aeabi_memset4.o
        18          0          0          0          0         80   exit.o
         6          0          0          0          0        152   heapauxi.o
         0          0          0          0          0          0   indicate_semi.o
        44         10        272          0          0         76   lc_ctype_c.o
         2          0          0          0          0          0   libinit.o
        20          0          0          0          0          0   libinit2.o
         2          0          0          0          0          0   libshutdown.o
         2          0          0          0          0          0   libshutdown2.o
         8          4          0          0         96         68   libspace.o
        16          4          0          0          0         76   rt_ctype_table.o
         4          0          0          0          0         68   rt_errno_addr_twolibspace.o
        10          0          0          0          0         76   rt_locale_twolibspace.o
        68          0          0          0          0         68   rt_memclr.o
        78          0          0          0          0         80   rt_memclr_w.o
       138          0          0          0          0         68   rt_memcpy_v6.o
       100          0          0          0          0         80   rt_memcpy_w.o
         2          0          0          0          0          0   rtexit.o
        10          0          0          0          0          0   rtexit2.o
       128          0          0          0          0         68   strcmpv7m.o
        62          0          0          0          0         76   strlen.o
       150          0          0          0          0         80   strncmp.o
       114          0          0          0          0         92   strtoul.o
        12          4          0          0          0         68   sys_exit.o
        74          0          0          0          0         80   sys_stackheap_outer.o
         2          0          0          0          0         68   use_no_semi.o
        90          4          0          0          0         92   dfixu.o
        38          0          0          0          0         68   dflt_clz.o
       340         12          0          0          0        104   dmul.o
       156          4          0          0          0         92   dnaninf.o
        12          0          0          0          0         68   dretinf.o
         0          0          0          0          0          0   usenofp.o

    ----------------------------------------------------------------------
     10520         68        288        168         96     127352   Library Totals
        70          0          4          0          0          0   (incl. Padding)

    ----------------------------------------------------------------------

      Code (inc. data)   RO Data    RW Data    ZI Data      Debug   Library Name

      8338         18         12        168          0     125208   RTX_CM3.lib
      1476         30        272          0         96       1720   c_w.l
       636         20          0          0          0        424   fz_ws.l

    ----------------------------------------------------------------------
     10520         68        288        168         96     127352   Library Totals

    ----------------------------------------------------------------------

==============================================================================


      Code (inc. data)   RO Data    RW Data    ZI Data      Debug   

     16252        776        860       5592       1632     927443   Grand Totals
     16252        776        860         88       1632     927443   ELF Image Totals (compressed)
     16252        776        860         88          0          0   ROM Totals

==============================================================================

    Total RO  Size (Code + RO Data)                17112 (  16.71kB)
    Total RW  Size (RW Data + ZI Data)              7224 (   7.05kB)
    Total ROM Size (Code + RO Data + RW Data)      17200 (  16.80kB)

==============================================================================

